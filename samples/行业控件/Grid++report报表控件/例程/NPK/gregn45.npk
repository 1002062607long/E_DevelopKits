@@ 易语言COM包装支持库

记录格式说明：
  “@@ Lang = xxxx”：记录当前翻译用语言的种类，必须在首部，请不要更改。
  “@@ TypeLib = xxxx”：如果为包装类型库，则记录类型库的相关信息，请不要更改。
  “@@ OCX = xxxx”：如果为包装组件，则记录组件的相关信息，请不要更改，与类型库信息不能同时存在。
  “@@ Interface = xxxx”：记录内部重要信息，请不要做任何更改。
  “##1”：表示某翻译项的开始，格式为“##1 项目原名 = 翻译后的名称”，
           下行首直到下一翻译项标记处记录有关此项目的详细解释信息。
  “##0”：记录被屏蔽的项目，被屏蔽项目将不会被包装支持库输出。
           格式为“##0 项目原名”，不能屏蔽参数。

------------------------------------------------------------

@@ Lang = 1

@@ TypeLib = {715CBE0F-4F50-46EF-B009-CACED3A5C867},4.5,0,锐浪报表引擎
Grid++Report Engine4.5 Type Library

##1 IGRGroup = 分组


##1 IGRGroup.ByFields = 依据字段
依据字段属性
    获取或设置分组依据字段的名称。
    语法:对象.依据字段=文本型
    特征
    可读写
    设计器中可见
    说明
    如果要根据多个字段进行分组，字段名称之间用分号（;）隔开。如果本属性值为空，则为全程分局，即全部明细记录只产生一个分组项。

##1 IGRGroup.Name = 名称
名称属性
    指定单元格的名称标识。
    数据类型:文本型
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见
    说明
    注意：当为内容格或当为标题格而不是组标题格时，即格存在对应列，格的名称与列的名称保持一致。当改变格的名称也同时改变列的名称，反之改变列的名称也同时改变格的名称。

##1 IGRGroup.GetHeader = 获取分组头


##1 IGRGroup.GetFooter = 获取分组尾

    获取分组尾属性
    获取本分组拥有的分组尾对象的接口引用。
    调用格式：〈分组尾〉对象．获取分组尾（）
    特征
    只读

##1 IGRGroup.GetParent = 获取父对象


##1 IGRGroup.PageGroup = 页分组

    页分组属性
    获取或设置本分组是否为页分组的标志。
    语法:对象.页分组=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见
    仅用于打印
    说明
    如果本属性为真，表示分组按打印页进行归类，即每个打印页生成一个分组项。按页分组在查询显示器中不应用。

##1 IGRGroup.GroupBeginScript = 分组开始脚本
    分组开始脚本属性
    表示报表 分组开始事件对应的脚本语言代码。
    语法:对象.分组开始脚本=文本型
    特征
    可读写
    设计器中可见
    请参见
    分组结束事件

##1 IGRGroup.GroupEndScript = 分组结束脚本
    分组结束脚本属性
    表示报表 结束分组事件对应的脚本语言代码。
    语法:对象.分组结束脚本=文本型
    特征
    可读写
    设计器中可见
    结束分组事件

##0 IGRObject = 


##1 IGRGroupHeader = 分组头
    分组头接口
    表示明细网格分组的分组头。分组头显示在每个分组的第一行。
    说明
    一个报表可以定义一个或多个嵌套分组，每个分组对应一个分组头与一个分组尾。分组头显示在每个分组开始位置，一般在分组头上定义分组的标识信息，分组初始值及其它只需在分组开始时显示一次的信息。

##1 IGRGroupHeader.BackColor = 背景色
    背景色 属性
    指定单元格的背景色。
    数据类型:整数型
    语法:对象.背景色=整数型
    特征
    可读写
    设计器中可见

##1 IGRGroupHeader.GetFont = 获取字体
    获取字体 属性
    获取报表对象的缺省字体对象的引用。
    调用格式：
    〈字体〉对象．获取字体（）
    特征
    只读
    设计器中可见

##1 IGRGroupHeader.GetControls = 获取部件框集合

##1 IGRGroupHeader.Height = 高度
    高度属性
    部件框的显示高度。
    数据类型:双精度小数型
    语法:对象.高度=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的显示高度值。

##1 IGRGroupHeader.Name = 名称
    名称属性
    指定单元格的名称标识。
    数据类型:文本型
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见
    说明
    注意：当为内容格或当为标题格而不是组标题格时，即格存在对应列，格的名称与列的名称保持一致。当改变格的名称也同时改变列的名称，反之改变列的名称也同时改变格的名称。

##1 IGRGroupHeader.CanGrow = 可伸展
    可伸展属性
    指定内容格在运行时是否可以伸展高度。
    数据类型:逻辑型
    语法:对象.可伸展=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRGroupHeader.CanShrink = 可收缩
    可收缩 属性
    指定内容格在运行时是否可以收缩高度。
    数据类型:逻辑型
    语法:对象.可收缩=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRGroupHeader.GetParent = 获取父对象


##1 IGRGroupHeader.SectionType = 节类型
    节类型 属性
    指示报表节的具体类型。
    数据类型:整数型
    语法:对象.节类型=整数型
    特征
    只读
    请参见
    报表节类型枚举

##1 IGRGroupHeader.Visible = 可见性
    可见性属性
    指定列在输出时是否可见。
    数据类型:逻辑型
    语法:对象.可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为假，则本列在屏幕显示与打印生成时将被忽略掉。

##1 IGRGroupHeader.FormatScript = 格式化脚本
    格式化脚本属性
    表示报表 格式化报表节事件对应的脚本语言代码。
    语法:对象.格式化脚本=文本型
    特征
    可读写
    设计器中可见

##1 IGRGroupHeader.KeepTogether = 保持同页
    保持同页属性
    是否保持本节输出显示在同一页标志。
    语法:对象.保持同页=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    仅用于打印

##1 IGRGroupHeader.NewPage = 换新页方式
    换新页方式属性
    指定新页的产生方式。
    语法:对象.换新页方式=整数型(换新页方式枚举值)
    默认值:drnpsNone
    特征
    可读写
    设计器中可见
    仅用于打印
    请参见
    换新页方式枚举

##1 IGRGroupHeader.PrintGridBorder = 打印网格边框
    打印网格边框属性
    获取或设置是否打印本分组节对应位置的明细网格边框。
    语法:对象.打印网格边框=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    仅用于打印

##1 IGRGroupHeader.GetGroup = 获取分组
    获取分组 属性
    获取拥有本分组节的分组对象的接口引用。
    调用格式：〈分组〉对象．获取分组（）
    特征
    只读

##1 IGRGroupHeader.OccupyColumn = 占列式
    占列式 属性
    获取或设置是否为占列式分组头的标志。
    语法:对象.占列式=逻辑型
    默认值假
    特征
    可读写
    设计器中可见
    说明
    当占列式属性为真时，在输出显示时，分组头不是独立占据一个水平带状区域，而是在占据列
    属性指定列的显示区域中与内容行一起显示。占据列
    属性指定的列本身的输出显示被忽略掉。

##1 IGRGroupHeader.OccupiedColumns = 占据列
    占据列 属性
    为占列式分组头时，指定占据列的名称。
    语法:对象.占据列=逻辑型
    特征
    可读写
    设计器中可见
    说明
    如果要占据多个列，列名称之间用分号（;）隔开。
    明    

##1 IGRGroupHeader.VAlign = 垂直对其方式
    垂直对齐方式属性
    为占列式分组头时，获取或设置显示位置在垂直方向上的对齐方式。
    语法:对象.垂直对齐方式=整数型(注:占列分组头对齐方式枚举)
    默认值:上端特征
    可读写
    设计器中可见
    请参见
    占列分组头对齐方式枚举

##1 IGRGroupHeader.SameAsColumn = 显示同列
    显示同列 属性
    为占列式分组头时，获取或设置是否采用占据列的内容格定义进行显示的标志。
    语法:对象.显示同列=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见
    说明
    为占列式分组头时，输出定义采用列内容格的定义。当此属性为真时，分组头中不用定义任何显示部件框，此时在报表设计器中禁止向此分组头插入部件框。

##1 IGRGroupHeader.IncludeFooter = 包括分组尾
    包括分组尾属性
    为占列式分组头时，获取或设置分组尾是否被包含在占列分组中的标志。
    语法:对象.包括分组尾=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见

##1 IGRGroupHeader.NewPageColumn = 换新页栏方式
    换新页栏方式属性
    指定强制换新页栏的方式。
    语法:对象.换新页栏方式=整数型(注:换新页栏方式枚举)
    默认值不应用
    特征
    可读写
    设计器中可见
    仅用于打印
    请参见
    换新页栏方式枚举

##1 IGRGroupHeader.GroupKeepTogether = 分组保持同页
    保持同页 属性
    打印输出时，指定本分组项的分组头与其它行保持同页的方式。
    语法:对象.保持同页=逻辑型
    默认值:不应用
    特征
    可读写
    设计器中可见
    仅用于打印

##1 IGRGroupHeader.RepeatOnPage = 每页重复
    每页重复属性
    指定是否在新页中重复显示当前分组项的分组头。
    语法:对象.每页重复=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见
    仅用于打印
    说明
    当本属性值为真时，如果一个分组项的所有行在分组开始页没有全部显示完，则在输出本分组项的后续页面的开始位置再次显示分组头。

##1 IGRGroupSection = 分组节
    分组节 接口
    分组头与分组尾的基类，表示分组头与分组尾相同的属性与方法。

##1 IGRGroupSection.BackColor = 背景色
    背景色 属性
    指定单元格的背景色。
    数据类型:整数型
    语法:对象.背景色=整数型
    特征
    可读写
    设计器中可见

##1 IGRGroupSection.GetFont = 获取字体
    获取字体 方法
    获取报表对象的缺省字体对象的引用。
    调用格式：
    〈字体〉对象．获取字体（）
    特征
    只读
    设计器中可见

##1 IGRGroupSection.GetControls = 获取部件框集合

##1 IGRGroupSection.Height = 高度
    高度属性
    部件框的显示高度。
    数据类型:双精度小数型
    语法:对象.高度=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的显示高度值。

##1 IGRGroupSection.Name = 名称
    名称属性
    指定单元格的名称标识。
    数据类型:文本型
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见
    说明
    注意：当为内容格或当为标题格而不是组标题格时，即格存在对应列，格的名称与列的名称保持一致。当改变格的名称也同时改变列的名称，反之改变列的名称也同时改变格的名称。

##1 IGRGroupSection.CanGrow = 可伸展
    可伸展属性
    指定内容格在运行时是否可以伸展高度。
    数据类型:逻辑型
    语法:对象.可伸展=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRGroupSection.CanShrink = 可收缩
    可收缩 属性
    指定内容格在运行时是否可以收缩高度。
    数据类型:逻辑型
    语法:对象.可收缩=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRGroupSection.GetParent = 获取父对象

##1 IGRGroupSection.SectionType = 节类型
    节类型 属性
    指示报表节的具体类型。
    数据类型:整数型
    语法:对象.节类型=整数型
    特征
    只读
    请参见
    报表节类型枚举

##1 IGRGroupSection.Visible = 可见性
    可见性属性
    指定列在输出时是否可见。
    数据类型:逻辑型
    语法:对象.可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为假，则本列在屏幕显示与打印生成时将被忽略掉。

##1 IGRGroupSection.FormatScript = 格式化脚本
    格式化脚本属性
    表示报表 格式化报表节事件对应的脚本语言代码。
    语法:对象.格式化脚本=文本型
    特征
    可读写
    设计器中可见

##1 IGRGroupSection.KeepTogether = 保持同页
    保持同页属性
    是否保持本节输出显示在同一页标志。
    语法:对象.保持同页=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    仅用于打印

##1 IGRGroupSection.NewPage = 换新页方式
    换新页方式属性
    指定新页的产生方式。
    语法:对象.换新页方式=整数型(换新页方式枚举值)
    默认值:drnpsNone
    特征
    可读写
    设计器中可见
    仅用于打印
    请参见
    换新页方式枚举

##1 IGRGroupSection.PrintGridBorder = 打印网格边框
    打印网格边框属性
    获取或设置是否打印本分组节对应位置的明细网格边框。
    语法:对象.打印网格边框=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    仅用于打印

##1 IGRGroupSection.GetGroup = 获取分组
    获取分组属性
    获取拥有本分组节的分组对象的接口引用。
    调用格式：〈分组〉对象．获取分组（）
    特征
    只读

##1 IGRSection = 报表节
    报表节接口
    报表节的基类，表示各种报表节相同的属性与方法。
    说明
    整个报表的输出显示由多种类型的占据整个水平输出区域宽度的矩形区域组成，以上各种类型显示区域统称为报表节。Grid++Report节类型包括：页眉、页脚、报表头、报表尾、标题行，内容行、分组头、分组尾。

##1 IGRSection.BackColor = 背景色
    背景色 属性
    指定单元格的背景色。
    数据类型:整数型
    语法:对象.背景色=整数型
    特征
    可读写
    设计器中可见

##1 IGRSection.GetFont = 获取字体
    获取字体 属性
    获取报表对象的缺省字体对象的引用。
    调用格式：
    〈字体〉对象．获取字体（）
    特征
    只读
    设计器中可见

##1 IGRSection.GetControls = 获取部件框集合

##1 IGRSection.Height = 高度
    高度 属性
    部件框的显示高度。
    数据类型:双精度小数型
    语法:对象.高度=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的显示高度值。

##1 IGRSection.Name = 名称
    名称属性
    指定单元格的名称标识。
    数据类型:文本型
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见
    说明
    注意：当为内容格或当为标题格而不是组标题格时，即格存在对应列，格的名称与列的名称保持一致。当改变格的名称也同时改变列的名称，反之改变列的名称也同时改变格的名称。

##1 IGRSection.CanGrow = 可伸展
    可伸展属性
    指定内容格在运行时是否可以伸展高度。
    数据类型:逻辑型
    语法:对象.可伸展=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRSection.CanShrink = 可收缩
    可收缩 属性
    指定内容格在运行时是否可以收缩高度。
    数据类型:逻辑型
    语法:对象.可收缩=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRSection.GetParent = 获取父对象

##1 IGRSection.SectionType = 节类型
    节类型 属性
    指示报表节的具体类型。
    数据类型:整数型
    语法:对象.节类型=整数型
    特征
    只读
    请参见
    报表节类型枚举

##1 IGRSection.Visible = 可见性
    可见性属性
    指定列在输出时是否可见。
    数据类型:逻辑型
    语法:对象.可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为假，则本列在屏幕显示与打印生成时将被忽略掉。

##1 IGRSection.FormatScript = 格式化脚本
    格式化脚本属性
    表示报表 格式化报表节事件对应的脚本语言代码。
    语法:对象.格式化脚本=文本型
    特征
    可读写
    设计器中可见

##1 IGRFont = 字体
    字体接口
    表示报表对象显示文字所使用字体的对象。
    说明
    表示报表对象显示文字所使用字体的对象。字体对象提供属性用来获取与设置字体定义，需要显示文本或需要为子对象提供缺省字体的报表对象拥有字体对象。当报表对象不使用其缺省字体时，它的字体对象拥有一个OLE字体对象，其字体定义由OLE字体对象表示，可以通过OleFont属性取得OLE字体对象的接口引用。当报表对象使用缺省字体时，其字体对象不拥有一个OLE字体对象，其字体定义来自其上级对象的字体定义，OleFont属性为NULL。
    报表开发者可以在
    格式化报表节事件响应函数中改变触发事件报表节本身或其拥有的单元格或部件框的字体定义，从而改变对应文本的显示。通过设定字体对象的属性来改变字体定义，如果将OleFont属性设为NULL，将导致使用缺省字体。
    Grid++Report中拥有字体对象的报表对象有：
    (1).报表主对象IGridppReport)。其字体对象定义整个报表的缺省字体。OleFont属性永远不为NULL。
    (3).明细网格(IGRDetailGrid),其字体对象定义其拥有的字节（标题行、内容行、分组头、分组尾）的缺省字体。其缺省字体来自报表主对象。
    (2).报表节(IGRSection)。其字体对象定义其拥有全部部件框或单元格的缺省字体。如果报表节的类型为页眉、页脚、报表头、报表尾，其缺省字体来自报表主对象。如果报表节的类型为标题行、内容行、分组头、分组尾，其缺省字体来自明细网格。
    (4).单元格(IGRColumnCell)。如果为非自由格，其字体对象定义单元格文本的显示字体；如果为非自由格，其字体对象定义单元格拥有全部部件框的缺省字体。标题格的缺省字体来自标题行，内容格的缺省字体来自内容行。
    (5).部件框(IGRControl)。其字体对象定义部件框文本的显示字体。其缺省字体来自父容器。

##1 IGRFont.GetOleFont = 获取OLE字体

##1 IGRFont.GetUsingOleFont = 获取使用OLE字体
    获取使用OLE字体属性
    指定拥有此字体的报表对象在显示文本时所应用的OLE字体的接口引用。
    调用格式：
    〈对象〉对象．获取使用OLE字体（）
    特征
    只读
    说明
    当报表对象使用自己定义的字体时，此属性的值等于OleFont属性的值。当报表对象使用缺省字体时，此属性的值来自上级对象的UsingOleFont属性。
    注意：如果使用本属性取得的OLE字体对象的接口引用进行改变字体的操作，有可能改变的是上级报表对象，或上级报表对象的上级报表对象的字体定义。

##1 IGRFont.Name = 名称
    名称属性
    指定单元格的名称标识。
    数据类型:文本型
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见
    说明
    注意：当为内容格或当为标题格而不是组标题格时，即格存在对应列，格的名称与列的名称保持一致。当改变格的名称也同时改变列的名称，反之改变列的名称也同时改变格的名称。

##1 IGRFont.Point = 点数
    点数 属性
    指示此字体对象的字体大小尺寸，一般此值等同字体在字体对话框中显示的大小值。
    语法:对象.点数=整数型
    特征
    可读写
    设计器中可见

##1 IGRFont.Charset = 字符集
    字符集属性
    该值指定此字体对象使用的GDI
    字符集。
    语法:对象.字符集=整数型
    特征
    可读写
    设计器中可见

##1 IGRFont.Weight = 粗细度
    粗细度 属性
    该值用数字指示此字体对象的字体粗细，比Bold
    属性更具灵活性。
    语法:对象.粗细度=整数型
    特征
    可读写
    设计器中可见

##1 IGRFont.Bold = 粗体
    粗体属性
    该值指示此字体对象是否为粗体。
    语法:对象.粗体=逻辑型
    特征
    可读写
    设计器中可见

##1 IGRFont.Italic = 斜体
    斜体 属性
    指示此字体对象是否为斜体。
    语法:对象.斜体=逻辑型
    特征
    可读写
    设计器中可见

##1 IGRFont.Underline = 下划线
    下划线 属性
    该值指示此字体对象是否有下划线。
    语法:对象.下划线=逻辑型
    特征
    可读写
    设计器中可见

##1 IGRFont.Strikethrough = 删除线
    删除线属性
    该值指示此字体对象是否指定通过该字体的横线。
    语法:对象.删除线=逻辑型
    特征
    可读写
    设计器中可见

##1 IGRFont.SetOleFont = 设置OLE字体

##1 IGRControls = 部件框集合
    部件框集合接口
    公开部件框容器中的所有部件框的集合对象。

##1 IGRControls.GetItem = 获取项目
    获取项目
    方法
    根据列的顺序号或名称得到列的接口引用。
    调用格式：〈列〉对象．获取项目（通用型列名称或者序号）
    特征
    只读
    说明
    在读取时要传入一个通用型类型的参数，指定列的顺序号或名称，列的顺序号从一开始。名称在匹配时不区分字母大小写。

##0 IGRControls.Get_NewEnum = 


##1 IGRControls.Count = 数目
    数目属性
    指示拥有部件框的个数。
    特征
    只读

##1 IGRControls.Add = 增加
    增加 方法
    根据部件框的类型参数增加一个部件框并返回新增部件框的接口引用。
    调用格式：〈部件框〉对象．增加（部件框类型枚举类型）
    返回值:新增部件框对象的接口引用。
    参数
    类型
    指定新增部件框的类型。

##1 IGRControls.Remove = 删除
    删除方法
    根据部件框的顺序号或名称将部件框移除，在输入参数种指定要移除部件框的顺序号或名称。
    调用格式：〈无返回值〉对象．删除（通用型序号或名称）

##1 IGRControls.RemoveAll = 全部删除
    全部删除方法
    清除全部部件框。
    调用格式：〈无返回值〉对象．全部删除（）

##1 IGRControls.SetItemOrder = 设置项目顺序
    设置项目顺序 方法
    改变指定部件框的顺序。
    调用格式：〈无返回值〉对象．设置项目顺序（通用型名称或序号，整数型新顺序号）
    参数
    名称或序号:
    指定部件框的名称或序号。
    新顺序号:
    指定部件框的新顺序号。

##1 IGRControls.IndexByName = 根据名称得序号
    根据名称得序号
    方法
    根据部件框的名称取得其顺序号，如果不存在与名称匹配的部件框，则返回-1。部件框的名称不区分字母的大小写。
    调用格式：〈整数型〉对象．根据名称得序号（文本型名称）
    如果有匹配的部件框，返回其顺序号，否则返回-1。
    参数
    名称:指定部件框的名称。

##1 IGRControl = 部件框
    部件框 接口
    部件框的基接口，定义各种类型的部件框所具有的共同属性与方法。
    说明
    部件框是对报表中最基本可显示单元的统称，部件框在其父容器中占据一个矩形区域，部件框的内容输出在此矩形区域中，部件框包括背景填充方式与背景色、边框输出模式、以及具体类型的部件框的输出前景色。

##1 IGRControl.Tag = 标签
    标签 属性
    部件框的标识值。
    数据类型:整数型
    语法:对象.标签=整数型
    默认值:0
    特征
    可读写
    设计器中可见
    说明
    可以按自己意愿任意使用本属性，如可以将此属性作为对象的身份标识,相当于语言中各种组件的标记属性。

##1 IGRControl.Name = 名称
    名称属性
    部件框的名称标识。
    数据类型:文本型
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见

##1 IGRControl.BackColor = 背景色
    背景色属性
    部件框的背景色。
    数据类型:整数型
    语法:对象.背景色=整数型
    默认值:继承父组件背景色.
    特征:可读写
    设计器中可见
    说明
    如果 背景框属性为 透明
    时，部件框生成时不填充背景，本属性此时被忽略掉。

##1 IGRControl.ForeColor = 文字色
    文字色 属性
    部件框输出内容的前景色。
    数据类型:整数型
    语法:对象.文字色=整数型
    默认值:从父部件继承
    特征
    可读写
    设计器中可见
    说明
    一般表示输出文字的显示颜色。

##1 IGRControl.GetFont = 获取字体
    获取字体 属性
    获取报表对象的缺省字体对象的引用。
    调用格式：
    〈字体〉对象．获取字体（）
    特征
    只读
    设计器中可见

##1 IGRControl.ControlType = 部件框类型
    部件框类型属性
    获取本部件框的具体类型。
    数据类型:整数型(注:部件框类型枚举值)
    语法:对象.部件框类型
    特征
    只读
    请参见
    部件框类型枚举

##1 IGRControl.GetParent = 获取父对象

##1 IGRControl.Left = 左
    左 属性
    部件框的左端显示位置。
    数据类型:双精度小精型
    语法:对象.左=双精度小精型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的左端显示位置值，相对于父容器。

##1 IGRControl.Top = 上
    上 属性
    部件框的顶端显示位置。
    数据类型:双精度小数型
    语法:对象.上=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的顶端显示位置值，相对于父容器。

##1 IGRControl.Width = 宽度
    宽度 属性
    部件框的显示宽度。
    数据类型:双精度小精型
    语法:对象.宽度=双精度小数型
    特征
    可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的显示宽度值。

##1 IGRControl.Height = 高度
    高度属性
    部件框的显示高度。
    数据类型:双精度小数型
    语法:对象.高度=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的显示高度值。

##1 IGRControl.Anchor = 锚定
    锚定 属性
    指定部件框的哪些边缘锚定到其容器边缘。
    数据类型:整数型
    语法:对象.锚定=整数型(注:锚定方式枚举组合值)
    默认值:左边|上边
    特征
    可读写
    设计器中可见
    说明
    本属性值是 锚定方式枚举
    值的按位组合。默认值是左边和上边
    。
    请参见
    锚定方式枚举

##1 IGRControl.Dock = 停靠
    停靠 属性
    指定部件框停靠到父容器的哪一个边缘。
    数据类型:整数型
    语法:对象.停靠=整数型(注:停靠方式枚举值)
    默认值:无
    特征
    可读写
    设计器中可见
    停靠方式枚举

##1 IGRControl.Center = 居中
    居中 属性
    指定水平与垂直方向的居中对齐方式。
    数据类型:整数型
    语法:对象.居中=整数型(注:居中方式枚举值)
    默认值:无
    特征
    可读写
    设计器中可见
    说明
    指定部件框在容器中水平与垂直方向上的居中对齐方式。

##1 IGRControl.BorderStyles = 边框模式
    边框模式属性
    边框线的显示方式。
    数据类型:整数型(注:边框模式枚举值的组合)
    语法:对象.边框模式=整数型(边框模式枚举值)
    默认值:0
    特征:可读写
    设计器中可见
    说明
    本属性值是边框模式枚举值的按位组合。默认值是 0，不显示任何边框。
    请参见
    边框模式枚举

##1 IGRControl.BorderWidth = 边框宽度
    边框宽度 属性
    边框线的宽度。
    数据类型:整数型
    语法:对象.边框宽度=整数型
    默认值:1
    特征
    可读写
    设计器中可见
    说明
    以屏幕像素作为计量单位，默认是1。

##1 IGRControl.BorderColor = 边框色
    边框色 属性
    边框线的显示颜色。
    数据类型:整数型
    语法:对象.边框色=整数型
    默认值:黑色
    特征
    可读写
    设计器中可见

##1 IGRControl.AlignColumn = 对齐列
    对齐列属性
    指定部件框水平位置对齐到明细网格列的名称。
    数据类型:文本型
    语法:对象.对齐列=文本型(注:列名称)
    特征:可读写
    设计器中可见
    说明
    如果本属性值不为空时，配合 对齐列方式属性一起指定部件框与列的对齐方式，部件框的水平位置将跟随列位置的改变而改变。
    注意：只有当部件框在分组头与分组尾中时才能使用本属性。

##1 IGRControl.AlignColumnEx = 对齐列扩展
    对齐列扩展 属性
    指定部件框水平位置对齐到明细网格另一个列的名称。
    数据类型:文本型
    语法:对象.对齐列扩展=文本型(注:列名称)
    特征
    可读写
    设计器中可见
    说明
    如果本属性值不为空时，配合 对齐列方式属性一起指定部件框与列的对齐方式，部件框的水平位置将跟随列位置的改变而改变。
    对齐列扩展与对齐列可以指定到不同的列，这样部件框就可以跨列对齐到不同的列。如果对齐列扩展与对齐列只设定了其中之一的，则部件框只对齐到一个列。如果两者都没有设定，则部件框不会对齐到任何列。

##1 IGRControl.AlignColumnSide = 对齐列方式
    对齐列方式属性
    部件框对齐到明细网格列的方式。
    数据类型:整数型
    语法:对象.对齐列方式=整数型(注:对齐列方式枚举)
    默认值:#对齐列方式枚举.左右两端
    特征
    可读写
    设计器中可见
    说明
    注意：只有当部件框在分组头与分组尾中时才能使用本属性。
    请参见
    对齐列方式枚举

##1 IGRControl.BackStyle = 背景模式
    背景模式 属性
    部件框显示时背景的填充方式。
    数据类型:整数型
    语法:对象.背景模式=整数型(注:背景模式枚举值)
    默认值:#背景模式枚举.透明
    特征:可读写
    设计器中可见
    请参见
    背景模式枚举

##1 IGRControl.PrintType = 打印类别
    打印类别 属性
    部件框的打印输出方式。
    数据类型:整数型
    语法:对象.打印类别=整数型(注:打印类型枚举值)
    特征
    可读写
    设计器中可见
    仅用于打印
    请参见
    打印类别枚举

##1 IGRControl.Visible = 可见性
    可见性 属性
    是否显示部件框的标志。
    数据类型:逻辑型
    语法:对象.可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    当此属性为假时，部件框在输出时将被忽略掉。

##1 IGRControl.Cursor = 光标
    光标属性
    指定在查询显示报表时，当鼠标光标位于该部件框上时要显示的鼠标光标类型。
    数据类型:整数型
    语法:对象.光标=整数型(注:显示光标枚举值)
    默认值:#显示光标枚举值.默认光标
    特征
    可读写
    设计器中可见
    请参见
    显示光标枚举

##1 IGRControl.GetAsTextBox = 获取为文字框

##1 IGRControl.GetAsChart = 获取为图表

##1 IGRControl.GetAsStaticBox = 获取为静态文字框

##1 IGRControl.GetAsShapeBox = 获取为图形框

##1 IGRControl.GetAsSystemVarBox = 获取为系统变量框

##1 IGRControl.GetAsFieldBox = 获取为字段框

##1 IGRControl.GetAsSummaryBox = 获取为统计框

##1 IGRControl.GetAsPictureBox = 获取为图像框

##1 IGRControl.GetAsRichTextBox = 获取为RTF文字框

##1 IGRControl.GetAsMemoBox = 获取为综合文字框

##1 IGRControl.GetAsSubReport = 获取为子报表

##1 IGRControl.GetAsLine = 获取为线段

##1 IGRControl.GetAsBarcode = 获取为条码
获取为条码

##1 IGRControl.SetBounds = 设置边界
    设置边界方法
    设置部件框在其父容器中的边界位置。
    调用格式：〈无返回值〉对象．设置边界（双精度小数型左边，双精度小数型顶边，双精度小数型
    右边，双精度小数型 底边)

##1 IGRControl.BringToFront = 显示到前端
    显示到前端方法
    将部件框带到Z顺序的前面。
    调用格式：
    〈无返回值〉对象．显示到前端（）
    说明
    此部件框将在同一容器中的其它部件框之后输出显示，如果前面输出的部件框与其在位置上有重叠，则此部件框将覆盖前面输出的部件框。

##1 IGRControl.SendToBack = 显示到后端
    显示到后端方法
    将部件框发送到Z顺序的后面。
    调用格式：
    〈无返回值〉对象．显示到后端（）
    说明
    此部件框将在同一容器中的其它部件框之前输出显示，如果后输出的部件框与其在位置上有重叠，则后输出的部件框将覆盖此部件框。

##0 IGRControl.LoadCursorFile = 

##0 GRControlType = 部件框类型枚举
    部件框类型枚举

    指定部件框的具体类型。

    成员名称		    说明
    图表		    图表。
    字段框		    字段框。
    线段		    线段。
    综合文字框		    综合文字框。
    图像框		    图像框。
    文字RTF框		    RTF格式文字框
    图形框		    图形框。
    静态文字框		    静态文字框。
    子报表		    子报表。
    统计框		    统计框。
    系统变量框		    系统变量框。

##1 tagGRControlType = 部件框类型枚举
    部件框类型枚举

    指定部件框的具体类型。

    成员名称		    说明
    图表		    图表。
    字段框		    字段框。
    线段		    线段。
    综合文字框		    综合文字框。
    图像框		    图像框。
    文字RTF框		    RTF格式文字框
    图形框		    图形框。
    静态文字框		    静态文字框。
    子报表		    子报表。
    统计框		    统计框。
    系统变量框		    系统变量框。

##1 tagGRControlType.grctStaticBox = 静态文字框
    静态文字框接口
    文字部件框。可以与参数对象关联，显示参数对象的值。
    说明
    用来显示静态文本的部件框，一般在设计时设定要显示的文本，在输出显示时根据输出格式信息将显示文本画出来。静态框可以关联某个参数对象，在这种情况下，在输出显示时部件框的显示文本为参数对象的显示文本，当一个部件框在输出时要显示多次，而其关联的参数对象的值是变化的，则此静态框在不同位置输出时的显示文字是变化的。

##1 tagGRControlType.grctShapeBox = 图形框
    图形框接口
    表示图形框。
    说明
    用来显示各种图形的部件框，在设计时设定某种图形类别，并设定该种图形的一些参数信息。图形框一般用来对报表进行一些修饰。

##1 tagGRControlType.grctSystemVarBox = 系统变量框
tagGRControlType.grctSystemVarBox
    系统变量框接口
    表示系统变量框。
    说明
    用来显示系统变量值的部件框，在设计时设定某种系统变量，在系统变量框中可以定义值的输出格式。系统变量框可以使用在任何部件框容器中，例如页号、页总数一般使用在页眉与页脚中。

##1 tagGRControlType.grctFieldBox = 字段框
tagGRControlType.grctFieldBox
    字段框接口
    表示字段部件框。关联一个记录集的字段，显示字段的值。
    说明
    用来显示字段内容的部件框，在设计时关联一个字段对象，在输出显示时根据输出格式信息将字段对象在当前记录的显示文本画出来。字段框一般使用在明细网格的自由内容格、分组头、分组尾中。
    请参见
    字段接口

##1 tagGRControlType.grctSummaryBox = 统计框
tagGRControlType.grctSummaryBox
    统计框接口
    表示统计框。
    说明
    用来显示统计数据的部件框，在设计时设定某种统计函数，除计数（Count）函数外，其余统计函数都需要关联一个字段对象。在统计框中可以定义统计值的输出格式。统计框一般使用在分组头、分组尾中。有时为了统计全部记录的统计数据，可以将部件框使用在报表尾，报表头中。

##1 tagGRControlType.grctRichTextBox = 文字RTF框


##1 tagGRControlType.grctPictureBox = 图像框
tagGRControlType.grctPictureBox
    图像框接口
    表示图像部件框。
    说明
    用来显示各种类型的图像数据的部件框，图像数据可以直接保存在报表模板文件中，也可以在运行时从磁盘文件、二进制字段和内存中载入。

##1 tagGRControlType.grctMemoBox = 综合文字框
tagGRControlType.grctMemoBox
    综合文字框接口
    最常用的文字部件框。可以在文字中包含数据域，数据域在运行时被替换为对应的对象或函数的值。另域可以进行算术四则运算。
    说明
    可以用来显示静态文本的部件框，一般在设计时设定要显示的文本，在输出显示时依原样输出。除了显示静态框文字之外，MemoBox更可以显示多种多样的同态内容，通过在文字中定义数据域，数据域在运行时被替换为对应的对象或函数的值。MemoBox的数据域可以关联字段、参数、文字类型部件框、统计函数与系统变量。多个值为数字类型的数据域可以进行数字四则运算。数据域可以设定其显示的格式化字符串，以便得到想要的显示文字。

##1 tagGRControlType.grctSubReport = 子报表
tagGRControlType.grctSubReport
    子报表接口
    表示子报表部件框。
    说明
    通过关联另一个报表对象，在此报表中显示另外一个报表。子报表受以下规则限制：
    1。子报表只能应用在报表头与报表尾中应用。
    2。子报表所在的节不允许重复打印。
    3。子报表在数据导出时被忽略掉。
    4。子报表本身的页眉与页脚在生成时被忽略掉。

##1 tagGRControlType.grctLine = 线段
tagGRControlType.grctLine
    线段 接口
    表示直线段。
    说明
    用来显示两点之间的直线段的部件框。

##1 tagGRControlType.grctChart = 图表
tagGRControlType.grctChart
    图表接口
    表示图表的接口。

##0 GRAnchorStyles = 锚定方式枚举
GRAnchorStyles
    锚定方式枚举

    指定部件框如何锚定到其容器的边缘。

    成员名称		    说明
    下边		    该部件框锚定到其容器的下边缘。
    左边		    该部件框锚定到其容器的左边缘。
    右边		    该部件框锚定到其容器的右边缘。
    上边		    该部件框锚定到其容器的上边缘。

    说明
    如果将部件框锚定到其容器的边缘，当调整该容器的大小时，该部件框与指定边缘间的距离保持不变。例如，如果将控件锚定到其容器的右边缘，则当调整该容器的大小时，该控件的右边缘与容器的右边缘之间的距离保持不变。可以将控件锚定到任何控件边缘的组合上。如果将控件锚定到其容器的相对边缘上（例如，锚定到顶部和底部），当调整容器的大小时，控件大小就会随之改变。

##1 tagGRAnchorStyle = 锚定方式枚举
tagGRAnchorStyle
    锚定方式枚举

    指定部件框如何锚定到其容器的边缘。

    成员名称		    说明
    下边		    该部件框锚定到其容器的下边缘。
    左边		    该部件框锚定到其容器的左边缘。
    右边		    该部件框锚定到其容器的右边缘。
    上边		    该部件框锚定到其容器的上边缘。

    说明
    如果将部件框锚定到其容器的边缘，当调整该容器的大小时，该部件框与指定边缘间的距离保持不变。例如，如果将控件锚定到其容器的右边缘，则当调整该容器的大小时，该控件的右边缘与容器的右边缘之间的距离保持不变。可以将控件锚定到任何控件边缘的组合上。如果将控件锚定到其容器的相对边缘上（例如，锚定到顶部和底部），当调整容器的大小时，控件大小就会随之改变。

##1 tagGRAnchorStyle.grasLeft = 左边


##1 tagGRAnchorStyle.grasTop = 上边


##1 tagGRAnchorStyle.grasRight = 右边


##1 tagGRAnchorStyle.grasBottom = 下边


##0 GRDockStyle = 停靠方式枚举
GRDockStyle
    停靠方式枚举

    指定部件框停靠的位置和方式。

    成员名称		   说明
    下边		该部件框的下边缘停靠在父容器的底部。
    填充		部件框的各个边缘分别停靠在父容器的各个边缘，并且适当调整大小。
    左边		该部件框的左边缘停靠在父容器的左边缘。
    无			该部件框未停靠。
    右边		该部件框的右边缘停靠在父容器的右边缘。
    上边		该部件框的上边缘停靠在父容器的顶端。

    说明
	当部件框停靠到其容器的一条边缘时，调整容器的大小时，始终使部件框与那条边缘对齐。如果多个部件框停靠到一条边缘，那么这些部件框将按照它们的Z顺序并排出现，部件框在Z顺序中的位置越高，距离容器边缘就越远。如果选择了左边、右边、上边或下边，则调整部件框的指定边缘和相对边缘的尺寸至包含部件框的相应边缘的尺寸。如果选择了填充，则调整部件框的所有四条边以匹配包含部件框的边缘。

##1 tagGRDockStyle = 停靠方式枚举
tagGRDockStyle
    停靠方式枚举

    指定部件框停靠的位置和方式。

    成员名称		    说明
    下边		    该部件框的下边缘停靠在父容器的底部。
    填充		    部件框的各个边缘分别停靠在父容器的各个边缘，并且适当调整大小。
    左边		    该部件框的左边缘停靠在父容器的左边缘。
    无			    该部件框未停靠。
    右边		    该部件框的右边缘停靠在父容器的右边缘。
    上边		    该部件框的上边缘停靠在父容器的顶端。
    说明		
       当部件框停靠到其容器的一条边缘时，调整容器的大小时，始终使部件框与那条边缘对齐。如果多个部件框停靠到一条边缘，那么这些部件框将按照它们的Z顺序并排出现，部件框在Z顺序中的位置越高，距离容器边缘就越远。如果选择了左边、右边、上边或下边，则调整部件框的指定边缘和相对边缘的尺寸至包含部件框的相应边缘的尺寸。如果选择了填充，则调整部件框的所有四条边以匹配包含部件框的边缘。

##1 tagGRDockStyle.grdsNone = 无


##1 tagGRDockStyle.grdsLeft = 左边


##1 tagGRDockStyle.grdsTop = 上边


##1 tagGRDockStyle.grdsRight = 右边


##1 tagGRDockStyle.grdsBottom = 下边


##1 tagGRDockStyle.grdsFill = 填充


##0 GRCenterStyle = 居中方式枚举
GRCenterStyle
    居中方式枚举

    指定用来在容器中居中对齐部件框的方式。

    成员名称		    说明
    水平垂直		    部件框始终位于父容器水平与垂直方向的正中间
    水平		    部件框始终位于父容器水平方向的正中间。
    无			    部件框在父容器中不居中对齐。
    垂直		    部件框始终位于父容器垂直方向的正中间。
    说明
    可以在水平与垂直两个方向上设定部件框的居中对齐方式，如果设定水平方向上居中对齐，不论部件框父容器改变大小，还是部件框自身改变大小与位置，系统自动将部件框放置在父容器水平方向上的居中位置。在垂直方向上的居中对齐有类似行为。
    注意：如果部件框设定了停靠（Dock）方式，则先以停靠方式自动调整部件框位置与大小，然后再应用居中对齐方式。

##1 tagGRCenterStyle = 居中方式枚举
tagGRCenterStyle
    居中方式枚举

    指定用来在容器中居中对齐部件框的方式。

    成员名称		    说明
    水平垂直		    部件框始终位于父容器水平与垂直方向的正中间
    水平		    部件框始终位于父容器水平方向的正中间。
    无			    部件框在父容器中不居中对齐。
    垂直		    部件框始终位于父容器垂直方向的正中间。
    说明
    可以在水平与垂直两个方向上设定部件框的居中对齐方式，如果设定水平方向上居中对齐，不论部件框父容器改变大小，还是部件框自身改变大小与位置，系统自动将部件框放置在父容器水平方向上的居中位置。在垂直方向上的居中对齐有类似行为。
    注意：如果部件框设定了停靠（Dock）方式，则先以停靠方式自动调整部件框位置与大小，然后再应用居中对齐方式。

##1 tagGRCenterStyle.grcsNone = 无


##1 tagGRCenterStyle.grcsHorizontal = 水平


##1 tagGRCenterStyle.grcsVertical = 垂直


##1 tagGRCenterStyle.grcsBoth = 水平垂直


##0 GRBorderStyles = 边框模式枚举
GRBorderStyles
    边框模式枚举

    指定是否画部件框的上下左右边框线的组合方式。

    成员名称		    说明
    画下		    部件框或明细网格显示下边边框线。
    画左		    部件框或明细网格显示左边边框线。
    画右		    部件框或明细网格显示右边边框线。
    画上		    部件框或明细网格显示上边边框线。

##1 tagGRBorderStyle = 边框模式枚举
tagGRBorderStyle
    边框模式枚举

    指定是否画部件框的上下左右边框线的组合方式。

    成员名称		    说明
    画下		    部件框或明细网格显示下边边框线。
    画左		    部件框或明细网格显示左边边框线。
    画右		    部件框或明细网格显示右边边框线。
    画上		    部件框或明细网格显示上边边框线。

##1 tagGRBorderStyle.grbsDrawLeft = 画左


##1 tagGRBorderStyle.grbsDrawTop = 画上


##1 tagGRBorderStyle.grbsDrawRight = 画右


##1 tagGRBorderStyle.grbsDrawBottom = 画下


##0 GRAlignColumnStyle = 对齐列方式枚举
GRAlignColumnStyle
    对齐到列方式 枚举

    指定用来对齐部件框到明细网格列方式。

    成员名称		    说明
    两端对齐		    对齐到列的左右两端，部件框宽度与列保持一致。
    左对齐		    对齐到列的左端。
    右对齐		    对齐到列的右端。

##1 tagGRAlignColumnSideStyle = 对齐列方式枚举


##1 tagGRAlignColumnSideStyle.gracsLeft = 左对齐


##1 tagGRAlignColumnSideStyle.gracsRight = 右对齐


##1 tagGRAlignColumnSideStyle.gracsBoth = 两端对齐


##0 GRBackStyle = 背景模式枚举
GRBackStyle
    背景模式枚举

    指定部件再显示时用来填充其所占区域背景的方式。

    成员名称		    说明
    通常		    部件框使用背景色填充他占据的矩形区域。
    透明		    部件框背景透明，允许任何背景图像或其他部件框透过自身显示。

##1 tagGRBackStyle = 背景模式枚举
tagGRBackStyle
    背景模式枚举
    指定部件再显示时用来填充其所占区域背景的方式。
    成员名称
    说明
    通常
    部件框使用背景色填充他占据的矩形区域。
    透明
    部件框背景透明，允许任何背景图像或其他部件框透过自身显示。

##1 tagGRBackStyle.grbkNormal = 通常


##1 tagGRBackStyle.grbkTransparent = 透明


##0 GRPrintType = 打印类型枚举
GRPrintType
    打印类型枚举

    指定报表元素的打印类别。

    成员名称		    说明
    套打内容		    表单内容数据，在套打输出内容时输出。
    表单		    表单固定数据，在套打输出内容时不输出。
    说明
        包括两种打印类别：报表表单数据（表单），报表内容数据（套打）。
    打印生成时，如果指定打印生成方式（打印生成方式）为只输出报表内容数据（套打）,则只输出打印类别为报表内容数据的报表元素，其它打印类别为报表表单数据的报表元素将不会输出。在只输出报表内容数据时，报表节的背景色不会填充，明细网格的边框线与行列线也不会输出。在只输出报表内容数据的打印生成方式特别适用于进行票据套打与现存格式报表的套打。
    打印生成时，如果指定印生成方式（打印生成方式）为输出报表表单数据（表单）,生成方式与只输出报表内容数据（套打）反之对应。在此种方式下，明细网格的记录数据不会应用到，明细行的生成与明细记录不对应，不填充明细记录页可以输出报表表单数据。报表表单数据一般只生成一页，用来制作票据与固定格式报表的印刷模版。
    打印生成时，如果指定打印生成方式（打印生成方式）为输出全部数据（全部）,则所有数据都会输出，这也是我们平时最多用到的方式。
    可以指定打印类别的报表元素包括部件框，明细网格标题格，明细网格内容格。

##1 tagGRPrintType = 打印类型枚举
tagGRPrintType
    打印类型枚举

    指定报表元素的打印类别。

    成员名称		    说明
    套打内容		    表单内容数据，在套打输出内容时输出。
    表单		    表单固定数据，在套打输出内容时不输出。
    说明
        包括两种打印类别：报表表单数据（表单），报表内容数据（套打）。
    打印生成时，如果指定打印生成方式（打印生成方式）为只输出报表内容数据（套打）,则只输出打印类别为报表内容数据的报表元素，其它打印类别为报表表单数据的报表元素将不会输出。在只输出报表内容数据时，报表节的背景色不会填充，明细网格的边框线与行列线也不会输出。在只输出报表内容数据的打印生成方式特别适用于进行票据套打与现存格式报表的套打。
    打印生成时，如果指定印生成方式（打印生成方式）为输出报表表单数据（表单）,生成方式与只输出报表内容数据（套打）反之对应。在此种方式下，明细网格的记录数据不会应用到，明细行的生成与明细记录不对应，不填充明细记录页可以输出报表表单数据。报表表单数据一般只生成一页，用来制作票据与固定格式报表的印刷模版。
    打印生成时，如果指定打印生成方式（打印生成方式）为输出全部数据（全部）,则所有数据都会输出，这也是我们平时最多用到的方式。
    可以指定打印类别的报表元素包括部件框，明细网格标题格，明细网格内容格。

##1 tagGRPrintType.grptForm = 表单


##1 tagGRPrintType.grptContent = 套打内容


##0 GRDisplayCursor = 显示光标枚举
GRDisplayCursor
    显示光标枚举

    指定查询显示报表时，可供使用的鼠标光标类型。

    成员名称		    说明
    确定光标		    肯定光标。
    箭头光标		    普通箭头光标。
    默认光标		    默认光标。
    手指光标		    手指光标。
    方大镜光标		    方大镜光标。
    否定光标		    否定光标。

##1 tagGRDisplayCursor = 显示光标枚举
tagGRDisplayCursor
    显示光标枚举

    指定查询显示报表时，可供使用的鼠标光标类型。

    成员名称		    说明
    确定光标		    肯定光标。
    箭头光标		    普通箭头光标。
    默认光标		    默认光标。
    手指光标		    手指光标。
    方大镜光标		    方大镜光标。
    否定光标		    否定光标。

##1 tagGRDisplayCursor.grdcDefault = 默认光标


##1 tagGRDisplayCursor.grdcArrow = 箭头光标


##1 tagGRDisplayCursor.grdcMagnify = 放大光标


##1 tagGRDisplayCursor.grdcFinger = 手指光标


##1 tagGRDisplayCursor.grdcAffirm = 确定光标


##1 tagGRDisplayCursor.grdcNegative = 否定光标


##1 IGRTextBox = 文字框
    文字框接口
    各种文字部件框的基类，表示各种文字部件框的相同属性与方法。

    说明
    各种显示文本的部件框的统称，包括：静态框、字段框、统计框、系统变量框。

##1 IGRTextBox.Tag = 标签
    标签 属性
    部件框的标识值。
    数据类型:整数型
    语法:对象.标签=整数型
    默认值:0
    特征
    可读写
    设计器中可见
    说明
    可以按自己意愿任意使用本属性，如可以将此属性作为对象的身份标识,相当于语言中各种组件的标记属性。

##1 IGRTextBox.Name = 名称
    名称属性
    指定单元格的名称标识。
    数据类型:文本型
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见
    说明
    注意：当为内容格或当为标题格而不是组标题格时，即格存在对应列，格的名称与列的名称保持一致。当改变格的名称也同时改变列的名称，反之改变列的名称也同时改变格的名称。

##1 IGRTextBox.BackColor = 背景色
    背景色 属性
    指定单元格的背景色。
    数据类型:整数型
    语法:对象.背景色=整数型
    特征
    可读写
    设计器中可见

##1 IGRTextBox.ForeColor = 文字色
    文字色属性
    指定单元格的输出文本的文字颜色。
    数据类型:整数型
    语法:对象.文字色=整数型
    默认值:0(注:黑色)
    特征
    可读写
    设计器中可见
    说明
    注意：只有在格是非自由格时，才允许使用本属性。

##1 IGRTextBox.GetFont = 获取字体
    获取字体 属性
    获取报表对象的缺省字体对象的引用。
    调用格式：
    〈字体〉对象．获取字体（）
    特征
    只读
    设计器中可见

##1 IGRTextBox.ControlType = 部件框类型

##1 IGRTextBox.GetParent = 获取父对象

##1 IGRTextBox.Left = 左
    左 属性
    部件框的左端显示位置。
    数据类型:双精度小精型
    语法:对象.左=双精度小精型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的左端显示位置值，相对于父容器。

##1 IGRTextBox.Top = 上
    上 属性
    部件框的顶端显示位置。
    数据类型:双精度小数型
    语法:对象.上=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的顶端显示位置值，相对于父容器。

##1 IGRTextBox.Width = 宽度
    宽度 属性
    列的显示宽度。
    数据类型:双精度小数型
    语法:对象.宽度=双精度小数型
    特征
    可读写
    设计器中可见
    说明
    列的显示宽度，以报表使用的计量单位表示的输出宽度值。此属性代表列在设计时的宽度，当其输出时显示的宽度有可能与设计时的宽度不一致。例如，当明细网格的打印方法为列适应输出区域宽度，则列的宽度将按比例进行伸缩以刚好适应输出页面的输出区域宽度。

##1 IGRTextBox.Height = 高度
    高度属性
    部件框的显示高度。
    数据类型:双精度小数型
    语法:对象.高度=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的显示高度值。

##1 IGRTextBox.Anchor = 锚定
    锚定 属性
    指定部件框的哪些边缘锚定到其容器边缘。
    数据类型:整数型
    语法:对象.锚定=整数型(注:锚定方式枚举组合值)
    默认值:左边|上边
    特征
    可读写
    设计器中可见
    说明
    本属性值是 锚定方式枚举
    值的按位组合。默认值是左边和上边
    。
    请参见
    锚定方式枚举

##1 IGRTextBox.Dock = 停靠
    停靠 属性
    指定部件框停靠到父容器的哪一个边缘。
    数据类型:整数型
    语法:对象.停靠=整数型(注:停靠方式枚举值)
    默认值:无
    特征
    可读写
    设计器中可见
    停靠方式枚举

##1 IGRTextBox.Center = 居中
    居中 属性
    指定水平与垂直方向的居中对齐方式。
    数据类型:整数型
    语法:对象.居中=整数型(注:居中方式枚举值)
    默认值:无
    特征
    可读写
    设计器中可见
    说明
    指定部件框在容器中水平与垂直方向上的居中对齐方式。

##1 IGRTextBox.BorderStyles = 边框模式
    边框模式属性
    边框线的显示方式。
    数据类型:整数型(注:边框模式枚举值的组合)
    语法:对象.边框模式=整数型(边框模式枚举值)
    默认值:0
    特征:可读写
    设计器中可见
    说明
    本属性值是边框模式枚举值的按位组合。默认值是
    0，不显示任何边框。
    请参见
    边框模式枚举

##1 IGRTextBox.BorderWidth = 边框宽度
    边框宽度 属性
    边框线的宽度。
    数据类型:整数型
    语法:对象.边框宽度=整数型
    默认值:1
    特征
    可读写
    设计器中可见
    说明
    以屏幕像素作为计量单位，默认是1。

##1 IGRTextBox.BorderColor = 边框色
    边框色 属性
    边框线的显示颜色。
    数据类型:整数型
    语法:对象.边框色=整数型
    默认值:黑色
    特征
    可读写
    设计器中可见

##1 IGRTextBox.AlignColumn = 对齐列
    对齐列属性
    指定部件框水平位置对齐到明细网格列的名称。
    数据类型:文本型
    语法:对象.对齐列=文本型(注:列名称)
    特征:可读写
    设计器中可见
    说明
    如果本属性值不为空时，配合 对齐列方式属性一起指定部件框与列的对齐方式，部件框的水平位置将跟随列位置的改变而改变。
    注意：只有当部件框在分组头与分组尾中时才能使用本属性。

##1 IGRTextBox.AlignColumnEx = 对齐列扩展
    对齐列扩展 属性
    指定部件框水平位置对齐到明细网格另一个列的名称。
    数据类型:文本型
    语法:对象.对齐列扩展=文本型(注:列名称)
    特征
    可读写
    设计器中可见
    说明
    如果本属性值不为空时，配合 对齐列方式
    属性一起指定部件框与列的对齐方式，部件框的水平位置将跟随列位置的改变而改变。
    对齐列扩展
    与 对齐列可以指定到不同的列，这样部件框就可以跨列对齐到不同的列。如果
    对齐列扩展与 对齐列
    只设定了其中之一的，则部件框只对齐到一个列。如果两者都没有设定，则部件框不会对齐到任何列。

##1 IGRTextBox.AlignColumnSide = 对齐列方式
    对齐列方式属性
    部件框对齐到明细网格列的方式。
    数据类型:整数型
    语法:对象.对齐列方式=整数型(注:对齐列方式枚举)
    默认值:#对齐列方式枚举.左右两端
    特征
    可读写
    设计器中可见
    说明
    注意：只有当部件框在分组头与分组尾中时才能使用本属性。
    请参见
    对齐列方式枚举

##1 IGRTextBox.BackStyle = 背景模式
    背景模式 属性
    部件框显示时背景的填充方式。
    数据类型:整数型
    语法:对象.背景模式=整数型(注:背景模式枚举值)
    默认值:#背景模式枚举.透明
    特征:可读写
    设计器中可见
    请参见
    背景模式枚举

##1 IGRTextBox.PrintType = 打印类别
    打印类别 属性
    部件框的打印输出方式。
    数据类型:整数型
    语法:对象.打印类别=整数型(注:打印类型枚举值)
    特征
    可读写
    设计器中可见
    仅用于打印
    请参见
    打印类别枚举

##1 IGRTextBox.Visible = 可见性
    可见性属性
    指定列在输出时是否可见。
    数据类型:逻辑型
    语法:对象.可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为假，则本列在屏幕显示与打印生成时将被忽略掉。

##1 IGRTextBox.Cursor = 光标
    光标属性
    指定在查询显示报表时，在本内容行上显示的鼠标光标。
    数据类型:整数型
    语法:对象.光标=整数型(注:显示光标枚举值)
    默认值:默认光标
    特征
    可读写
    设计器中可见

##1 IGRTextBox.GetAsTextBox = 获取为文字框

##1 IGRTextBox.GetAsChart = 获取为图表

##1 IGRTextBox.GetAsStaticBox = 获取为静态文字框

##1 IGRTextBox.GetAsShapeBox = 获取为图形框

##1 IGRTextBox.GetAsSystemVarBox = 获取为系统变量框

##1 IGRTextBox.GetAsFieldBox = 获取为字段框

##1 IGRTextBox.GetAsSummaryBox = 获取为统计框

##1 IGRTextBox.GetAsPictureBox = 获取为图像框

##1 IGRTextBox.GetAsRichTextBox = 获取为RTF文字框

##1 IGRTextBox.GetAsMemoBox = 获取为综合文字框

##1 IGRTextBox.GetAsSubReport = 获取为子报表

##1 IGRTextBox.GetAsLine = 获取为线段

##1 IGRTextBox.GetAsBarcode = 获取为条码


##1 IGRTextBox.SetBounds = 设置边界
    设置边界方法
    设置部件框在其父容器中的边界位置。
    调用格式：〈无返回值〉对象．设置边界（双精度小数型左边，双精度小数型顶边，双精度小数型
    右边，双精度小数型 底边)

##1 IGRTextBox.BringToFront = 显示到前端
    显示到前端方法
    将部件框带到Z顺序的前面。
    调用格式：
    〈无返回值〉对象．显示到前端（）
    说明
    此部件框将在同一容器中的其它部件框之后输出显示，如果前面输出的部件框与其在位置上有重叠，则此部件框将覆盖前面输出的部件框。

##1 IGRTextBox.SendToBack = 显示到后端
    显示到后端方法
    将部件框发送到Z顺序的后面。
    调用格式：
    〈无返回值〉对象．显示到后端（）
    说明
    此部件框将在同一容器中的其它部件框之前输出显示，如果后输出的部件框与其在位置上有重叠，则后输出的部件框将覆盖此部件框。

##0 IGRTextBox.LoadCursorFile = 
方法 LoadCursor

##1 IGRTextBox.WordWrap = 文字绕行
    文字绕行 属性
    是否多行显示文本标志。
    语法:对象.文字绕行=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见
    请参见
    文字框接口| 省略点显示文字 属性| 文字对齐方式属性

##1 IGRTextBox.EndEllipsis = 省略点文字

    是否用省略号(...)表示超出显示区域的文本。只有当文本不是多行显示时此属性才有意义。

    VARIANT_BOOLEndEllipsis
    默认值
    FALSE
    特征
    可读写
    设计器中可见
    请参见

##1 IGRTextBox.CanGrow = 可伸展
    可伸展属性
    指定内容格在运行时是否可以伸展高度。
    数据类型:逻辑型
    语法:对象.可伸展=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRTextBox.CanShrink = 可收缩
    可收缩 属性
    指定内容格在运行时是否可以收缩高度。
    数据类型:逻辑型
    语法:对象.可收缩=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRTextBox.ShrinkFontToFit = 缩小适应
    缩小适应属性
    在文字框的显示区域不能完整显示出文字内容时，指定是否自动缩小文字大小让文字完整显示出来。
    语法:对象.缩小适应=逻辑型
    默认值
    假
    特征
    可读写
    设计器中可见
    仅用于打印

##1 IGRTextBox.TextAlign = 文字对齐方式
    文字对齐方式 属性
    指定显示文本的文字对齐方式。
    数据类型:整数型
    语法:对象.文字对齐方式=整数型(注:文字对齐方式枚举值)
    特征
    可读写
    设计器中可见
    说明
    注意：只有在格不是自由格时，才允许使用本属性。

##1 IGRTextBox.DisplayText = 显示文字
    显示文字属性
    运行时文字框的显示文本。
    语法:对象.显示文字
    特征
    只读
    仅运行时可用

##1 IGRTextBox.ShowMoneyLabel = 显示金额标签
    指定是否在此文字框中显示金额标签。
    VARIANT_BOOLShowMoneyLabel
    默认值
    FALSE
    特征
    可读写
    设计器中可见

##1 IGRTextBox.ShowMoneyLine = 显示金额线
    指定是否显示成金额线格式。
    VARIANT_BOOLShowMoneyLine
    默认值
    FALSE
    特征
    可读写
    设计器中可见

##1 IGRTextBox.GetDisplayTextScript = 显示文字脚本
    显示文字脚本 属性
    表示报表请求文字框显示文字事件对应的脚本语言代码。
    语法:对象.显示文字脚本=文本型
    特征
    可读写
    设计器中可见

##0 GRTextAlign = 文字对齐方式枚举
    文字对齐方式枚举

    指定文字在显示区域的输出对齐方式。

    成员名称		    说明
    下中		    内容在垂直方向上底边对齐，在水平方向上居中对齐。
    下左		    内容在垂直方向上底边对齐，在水平方向上左边对齐。
    下右		    内容在垂直方向上底边对齐，在水平方向上右边对齐。
    中中		    内容在垂直方向上中间对齐，在水平方向上居中对齐。
    中左		    内容在垂直方向上中间对齐，在水平方向上左边对齐。
    中右		    内容在垂直方向上中间对齐，在水平方向上右边对齐。
    上中		    内容在垂直方向上顶部对齐，在水平方向上居中对齐。
    上左		    内容在垂直方向上顶部对齐，在水平方向上左边对齐。
    上右		    内容在垂直方向上顶部对齐，在水平方向上右边对齐。

    说明	
       使用文字对齐的报表元素包括：各种文字显示部件，非自由格的明细网格标题格与内容格。

##1 tagGRTextAlign = 文字对齐方式枚举
tagGRTextAlign
    文字对齐方式枚举

    指定文字在显示区域的输出对齐方式。

    成员名称		    说明
    下中		    内容在垂直方向上底边对齐，在水平方向上居中对齐。
    下左		    内容在垂直方向上底边对齐，在水平方向上左边对齐。
    下右		    内容在垂直方向上底边对齐，在水平方向上右边对齐。
    中中		    内容在垂直方向上中间对齐，在水平方向上居中对齐。
    中左		    内容在垂直方向上中间对齐，在水平方向上左边对齐。
    中右		    内容在垂直方向上中间对齐，在水平方向上右边对齐。
    上中		    内容在垂直方向上顶部对齐，在水平方向上居中对齐。
    上左		    内容在垂直方向上顶部对齐，在水平方向上左边对齐。
    上右		    内容在垂直方向上顶部对齐，在水平方向上右边对齐。

    说明
    使用文字对齐的报表元素包括：各种文字显示部件，非自由格的明细网格标题格与内容格。

##1 tagGRTextAlign.grtaTopLeft = 左上


##1 tagGRTextAlign.grtaTopCenter = 中上


##1 tagGRTextAlign.grtaTopRight = 右上


##1 tagGRTextAlign.grtaBottomLeft = 左下


##1 tagGRTextAlign.grtaBottomCenter = 中下


##1 tagGRTextAlign.grtaBottomRight = 右下


##1 tagGRTextAlign.grtaMiddleLeft = 左中


##1 tagGRTextAlign.grtaMiddleCenter = 中中


##1 tagGRTextAlign.grtaMiddleRight = 右中


##0 GRFieldType = 字段类型枚举
GRFieldType
    字段类型枚举

    指定字段对象的具体类型。

    成员名称		    说明
    二进制		    二进制字段。
    逻辑		    布尔字段。
    货币		    货币字段。
    日期时间		    日期时间字段。
    浮点数		    浮点数字段。
    整数		    整数字段。
    字符		    字符字段。

##1 tagGRFieldType = 字段类型枚举
tagGRFieldType
    字段类型枚举

    指定字段对象的具体类型。

    成员名称		    说明
    二进制		    二进制字段。
    逻辑		    布尔字段。
    货币		    货币字段。
    日期时间		    日期时间字段。
    浮点数		    浮点数字段。
    整数		    整数字段。
    字符		    字符字段。

##1 tagGRFieldType.grftString = 字符


##1 tagGRFieldType.grftInteger = 整数


##1 tagGRFieldType.grftFloat = 浮点数


##1 tagGRFieldType.grftCurrency = 货币


##1 tagGRFieldType.grftBoolean = 逻辑


##1 tagGRFieldType.grftDateTime = 日期时间


##1 tagGRFieldType.grftBinary = 二进制


##1 IGRChart = 图表
    图表接口
    表示图表的接口。

##1 IGRChart.Tag = 标签
    标签 属性
    部件框的标识值。
    数据类型:整数型
    语法:对象.标签=整数型
    默认值:0
    特征
    可读写
    设计器中可见
    说明
    可以按自己意愿任意使用本属性，如可以将此属性作为对象的身份标识,相当于语言中各种组件的标记属性。

##1 IGRChart.Name = 名称
    名称属性
    指定单元格的名称标识。
    数据类型:文本型
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见
    说明
    注意：当为内容格或当为标题格而不是组标题格时，即格存在对应列，格的名称与列的名称保持一致。当改变格的名称也同时改变列的名称，反之改变列的名称也同时改变格的名称。

##1 IGRChart.BackColor = 背景色
指定部件框的背景色。

##1 IGRChart.ForeColor = 文字色
指定单元格的输出文本的文字颜色。
默认值:0(注:黑色)
说明:只有在格是非自由格时，才允许使用本属性。

##1 IGRChart.GetFont = 获取字体
获取报表对象的缺省字体对象的引用。

##1 IGRChart.ControlType = 部件框类型
获取本部件框的具体类型。

##1 IGRChart.GetParent = 获取父对象
获取父对象

##1 IGRChart.Left = 左
部件框的左端显示位置。
说明
    以报表使用的计量单位表示的左端显示位置值，相对于父容器。

##1 IGRChart.Top = 上
    上 属性
    部件框的顶端显示位置。
    数据类型:双精度小数型
    语法:对象.上=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的顶端显示位置值，相对于父容器。

##1 IGRChart.Width = 宽度
    宽度 属性
    列的显示宽度。
    数据类型:双精度小数型
    语法:对象.宽度=双精度小数型
    特征
    可读写
    设计器中可见
    说明
    列的显示宽度，以报表使用的计量单位表示的输出宽度值。此属性代表列在设计时的宽度，当其输出时显示的宽度有可能与设计时的宽度不一致。例如，当明细网格的打印方法为列适应输出区域宽度，则列的宽度将按比例进行伸缩以刚好适应输出页面的输出区域宽度。

##1 IGRChart.Height = 高度
部件框的显示高度。
说明:以报表使用的计量单位表示的显示高度值。

##1 IGRChart.Anchor = 锚定
指定部件框的哪些边缘锚定到其容器边缘。
默认值:左边|上边
说明
    本属性值是 锚定方式枚举
    值的按位组合。默认值是左边和上边
    。

##1 IGRChart.Dock = 停靠
指定部件框停靠到父容器的哪一个边缘。

##1 IGRChart.Center = 居中
指定水平与垂直方向的居中对齐方式。
指定部件框在容器中水平与垂直方向上的居中对齐方式。

##1 IGRChart.BorderStyles = 边框模式
边框线的显示方式。
说明
本属性值是边框模式枚举值的按位组合。默认值是0，不显示任何边框。

##1 IGRChart.BorderWidth = 边框宽度
边框线的宽度。
默认值:1
说明: 以屏幕像素作为计量单位，默认是1。

##1 IGRChart.BorderColor = 边框色
边框线的显示颜色。
 默认值:黑色

##1 IGRChart.AlignColumn = 对齐列
指定部件框水平位置对齐到明细网格列的名称。
说明
    如果本属性值不为空时，配合 对齐列方式属性一起指定部件框与列的对齐方式，部件框的水平位置将跟随列位置的改变而改变。
    注意：只有当部件框在分组头与分组尾中时才能使用本属性。

##1 IGRChart.AlignColumnEx = 对齐列扩展
指定部件框水平位置对齐到明细网格另一个列的名称。
    如果本属性值不为空时，配合对齐列方式属性一起指定部件框与列的对齐方式，部件框的水平位置将跟随列位置的改变而改变。
    对齐列扩展 与 对齐列可以指定到不同的列，这样部件框就可以跨列对齐到不同的列。如果对齐列扩展与 对齐列只设定了其中之一的，则部件框只对齐到一个列。如果两者都没有设定，则部件框不会对齐到任何列。

##1 IGRChart.AlignColumnSide = 对齐列方式
部件框对齐到明细网格列的方式。
默认值:#对齐列方式枚举.左右两端
注意：只有当部件框在分组头与分组尾中时才能使用本属性。

##1 IGRChart.BackStyle = 背景模式
部件框显示时背景的填充方式。
默认值:#背景模式枚举.透明

##1 IGRChart.PrintType = 打印类别
    打印类别 属性
    部件框的打印输出方式。
    数据类型:整数型
    语法:对象.打印类别=整数型(注:打印类型枚举值)
    特征
    可读写
    设计器中可见
    仅用于打印
    请参见
    打印类别枚举

##1 IGRChart.Visible = 可见性
    可见性属性
    指定列在输出时是否可见。
    数据类型:逻辑型
    语法:对象.可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为假，则本列在屏幕显示与打印生成时将被忽略掉。

##1 IGRChart.Cursor = 光标
指定在查询显示报表时，当鼠标光标位于该部件框上时要显示的鼠标光标类型。

##1 IGRChart.GetAsTextBox = 获取为文字框
获取为文字框

##1 IGRChart.GetAsChart = 获取为图表
获取为图表

##1 IGRChart.GetAsStaticBox = 获取为静态文字框
获取为静态文字框

##1 IGRChart.GetAsShapeBox = 获取为图形框
获取为图形框

##1 IGRChart.GetAsSystemVarBox = 获取为系统变量框
获取为系统变量框

##1 IGRChart.GetAsFieldBox = 获取为字段框
获取为字段框

##1 IGRChart.GetAsSummaryBox = 获取为统计框
获取为统计框

##1 IGRChart.GetAsPictureBox = 获取为图像框
获取为图像框

##1 IGRChart.GetAsRichTextBox = 获取为RTF文字框
属性 AsRichTextBox
    IGRChart.GetAsRichTextBox

##1 IGRChart.GetAsMemoBox = 获取为综合文字框
获取为综合文字框

##1 IGRChart.GetAsSubReport = 获取为子报表
获取为子报表

##1 IGRChart.GetAsLine = 获取为线段
获取为线段

##1 IGRChart.GetAsBarcode = 获取为条形码
获取为条形码

##1 IGRChart.SetBounds = 设置边界
    设置边界方法
    设置部件框在其父容器中的边界位置。
    调用格式：〈无返回值〉对象．设置边界（双精度小数型左边，双精度小数型顶边，双精度小数型
    右边，双精度小数型 底边)

##1 IGRChart.BringToFront = 显示到前端
将部件框带到Z顺序的前面。
说明:此部件框将在同一容器中的其它部件框之后输出显示，如果前面输出的部件框与其在位置上有重叠，则此部件框将覆盖前面输出的部件框。

##1 IGRChart.SendToBack = 显示到后端
    显示到后端方法
    将部件框发送到Z顺序的后面。
    调用格式：
    〈无返回值〉对象．显示到后端（）
    说明
    此部件框将在同一容器中的其它部件框之前输出显示，如果后输出的部件框与其在位置上有重叠，则后输出的部件框将覆盖此部件框。

##0 IGRChart.LoadCursorFile = 
方法 LoadCursor

##1 IGRChart.ChartType = 图表类型
指定图表的类型。
默认值:柱图

##1 IGRChart.Title = 标题
    图表.标题 属性
    指定图表的标题显示文字。
    数据类型:文本型
    语法:对象.标题=文本型
    特征
    可读写
    设计器中可见

##1 IGRChart.GetTitleFont = 获取标题字体
获取标题字体

##1 IGRChart.MarginGap = 边距
    边距 属性
    指定在图表的边框四周留出空白边距，以屏幕像素为计量单位。
    数据类型:整数型
    语法:对象.边距=整数型
    默认值:0
    特征
    可读写
    设计器中可见

##1 IGRChart.XAxisVisible = 横轴可见性
    横轴可见性属性
    指定是否显示X坐标轴。
    数据类型:逻辑性
    语法:对象.横轴可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    此属性只对柱图与折线图有效。

##1 IGRChart.XAxisLabel = 横轴标签
    横轴标签属性
    在X轴下面显示的标签文字。
    数据类型:文本型
    语法:对象.横轴标签=文本型
    特征
    可读写
    设计器中可见
    说明
    此属性只对柱图与折线图有效。

##1 IGRChart.XAxisTextAngle = 横轴文字角度
    横轴文字角度属性
    指定X轴的文字显示角度。
    数据类型:整数型
    语法:对象.横轴文字角度=整数型
    默认值:0
    特征
    可读写
    设计器中可见
    说明
    属性值的范围从0-360。此属性只对柱图与折线图有效。

##1 IGRChart.XAxisTextVisible = 横轴文字可见性
    横轴文字可见性属性
    指定是否显示X轴的文字。
    数据类型:逻辑型
    语法:对象.横轴文字可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    此属性只对柱图与折线图有效。

##1 IGRChart.GetXAxisText = 取横轴刻度
获取指定序号处显式设定的X轴刻度显示文字。

##1 IGRChart.GetXAxisText.Index = 刻度序号


##1 IGRChart.YAxisVisible = 纵轴可见性
    纵轴可见性属性
    指定是否显示Y坐标轴。
    数据类型:逻辑型
    语法:对象.纵轴可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    此属性只对柱图与折线图有效。

##1 IGRChart.YAxisLabel = 纵轴标签
    纵轴标签属性
    指定在Y坐标轴的左边显示的标签文字。
    数据类型:文本型
    语法:对象.纵轴标签=文本型
    特征
    可读写
    设计器中可见
    说明
    此属性只对柱图与折线图有效。

##1 IGRChart.YAxisMaximum = 纵轴最大值
    纵轴最大值属性
    指定Y坐标轴表示的最大值。
    数据类型:双精度小数型
    语法:对象.纵轴最大值=双精度小数型
    默认值:0
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为零，则图表在运行时将自动生成最大值。此属性只对柱图与折线图有效。

##1 IGRChart.YAxisMinimum = 纵轴最小值
    纵轴最小值属性
    指定Y坐标轴表示的最小值。
    数据类型:双精度小数型
    语法:对象.纵轴最小值=双精度小数
    默认值:0
    特征
    可读写
    设计器中可见
    说明
    此属性只对柱图与折线图有效。

##1 IGRChart.YAxisSpace = 纵轴间距
    纵轴间距属性
    表示Y坐标轴的每刻度的步进值。
    数据类型:双精度型
    语法:对象.纵轴间距=双精度小数值
    默认值:0
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为零，则图表在运行时将自动生成一个刻度布进值。此属性只对柱图与折线图有效。

##1 IGRChart.YAxisTextFormat = 纵轴文字格式串
    纵轴文字格式串属性
    指定生成Y坐标轴的刻度文字的数字格式串。
    数据类型:文本型
    语法:对象.纵轴文字格式串=文本型
    特征
    可读写
    设计器中可见
    说明
    此属性只对柱图与折线图有效。

##1 IGRChart.YAxisTextVisible = 纵轴文字可见性
    纵轴文字可见性属性
    指定是否显示Y坐标轴的文字。
    数据类型:逻辑型
    语法:对象.纵轴文字可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    此属性只对柱图与折线图有效。

##1 IGRChart.GetYAxisText = 取Y轴刻度文字
获取指定序号处显式设定的Y轴刻度显示文字。

##1 IGRChart.GetYAxisText.Index = 顺序号


##1 IGRChart.LegendVisible = 图例可见性
是否显示图例。

##1 IGRChart.LegendValueVisible = 图例值可见性
指定是否在图例中显示数据值。
 说明:只有当图表的组数与序列数之一为1且本属性值为真时，才会将数据值显示在图例中。

##1 IGRChart.LegendShowSum = 图例显示统计
图例显示统计

##1 IGRChart.GroupCount = 组数
图表的数据组数。

##1 IGRChart.GetGroupLabel = 获取组标签
根据顺序号获取或设置组标签文字。

##1 IGRChart.GetGroupLabel.GroupIndex = 组顺序号


##1 IGRChart.SetGroupLabel = 设置组标签

##1 IGRChart.SeriesCount = 序列数
    序列数属性
    图表的数据序列数。
    数据类型:整数型
    语法:对象.序列数=  整数型
    默认值:1
    特征
    可读写
    设计器中可见

##1 IGRChart.GetSeriesLabel = 获序列标签
根据顺序号获取或设置序列标签文字。

##1 IGRChart.GetSeriesLabel.SeriesIndex = 顺序号


##1 IGRChart.SetSeriesLabel = 设置序列标签
属性 SeriesLabel

##1 IGRChart.GetValue = 获取值
根据序列顺序号与组顺序号获取或设置图表数据值。

##1 IGRChart.GetValue.SeriesIndex = 序列顺序号


##1 IGRChart.GetValue.GroupIndex = 组顺序号


##1 IGRChart.SetValue = 设置值

##1 IGRChart.ValueFormat = 值格式串
    值格式串 属性
    指定显示图表值的数字格式串。
    数据类型:文本型
    语法:对象.值格式串=文本型
    特征
    可读写
    设计器中可见

##1 IGRChart.ValueVisible = 值可见性
    值可见性属性
    指定是否显示图表的值。
    数据类型:逻辑型
    语法:对象.值可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见

##1 IGRChart.ValueAsPercent = 值显示为百分比
    值显示为百分比属性
    指定是否将图表的值统计并显示为加权百分比。
    数据类型:逻辑型
    语法:对象.值显示为百分比=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见

##1 IGRChart.SeriesCursor = 序列光标
    序列光标属性
    指定在查询显示报表时，当鼠标光标位于序列项图形上时要显示的鼠标光标类型。
    数据类型:显示光标枚举
    语法:对象.序列光标
    = 显示光标枚举值
    默认值:默认光标
    特征
    可读写
    设计器中可见

##1 IGRChart.LegendCursor = 图例光标
指定在查询显示报表时，当鼠标光标位于图例项上时要显示的鼠标光标类型。

##1 IGRChart.GetXYValueCount = 取坐标值数
获取指定序列的XY坐标值个数。

##1 IGRChart.GetXYValueCount.SeriesIndex = 序列顺序号


##1 IGRChart.GetXYValueOfX = 取坐标X值
获取指定序列的坐标X值

##1 IGRChart.GetXYValueOfX.SeriesIndex = 序列顺序号


##1 IGRChart.GetXYValueOfX.Index = 索引


##1 IGRChart.GetXYValueOfY = 取坐标Y值
取坐标Y值

##1 IGRChart.GetXYValueOfY.SeriesIndex = 系列顺序号


##1 IGRChart.GetXYValueOfY.Index = 顺序号


##1 IGRChart.GetFillColor = 获取定义图形填充颜
获取指定序号处的自定义图形填充颜色。

##1 IGRChart.GetFillColor.Index = 顺序号


##1 IGRChart.FillColorCount = 取自定义图形填充颜色数
获取自定义图形填充颜色的个数。

##1 IGRChart.BarWidthPercent = 柱图宽度百分比
指定柱图显示的总宽度占据整个宽度的百分比。
默认值:70
说明: 此属性仅对柱图有效

##1 IGRChart.BarSingleSeriesColor = 多色显示单序列柱图
当只有一个序列时，是否用不同的颜色显示柱图。

##1 IGRChart.LineWeight = 线粗细
指定折线图的粗细度。
默认值:2
说明:此属性仅对折线图有效

##1 IGRChart.PrepareSnapShot = 准备快照
    准备快照方法
    准备为明细网格中的内容行，分组头或分组尾中的图表提供数据。
    调用格式：〈无返回值〉对象．准备快照（）
    说明
    明细网格中的内容行，分组头或分组尾中的图表在报表运行时会多次显示，每次显示时其数据会不同，在设定图表的数据之前，必须调用准备快照方法，并在设定完成之后凋用快照方法。准备快照
    与快照只能在开始分组、结束分组
    与 处理记录
    事件响应函数中调用。

##1 IGRChart.SnapShot = 快照
    快照方法
    保存为明细网格中的内容行，分组头或分组尾中的图表提供数据。
    调用格式：〈无返回值〉对象．快照（）
    说明
    明细网格中的内容行，分组头或分组尾中的图表在报表运行时会多次显示，每次显示时其数据会不同，在设定图表的数据之前，必须调用准备快照方法，并在设定完成之后凋用快照方法。准备快照
    与快照只能在开始分组、结束分组
    与 处理记录
    事件响应函数中调用。

##0 IGRChart.LoadSeriesCursorFile = 
方法 LoadSeriesCursor

##0 IGRChart.LoadLegendCursorFile = 
方法 LoadLegendCursor

##1 IGRChart.AddXAxisText = 增加横轴显示文字
添加一个X轴刻度显示文字。

##1 IGRChart.AddXAxisText.PosVal = 刻度位置值


##1 IGRChart.AddXAxisText.Text = 文字


##1 IGRChart.EmptyXAxisText = 清空横轴刻度文字
清空显式设定的全部X轴刻度文字。

##1 IGRChart.AddYAxisText = 增加纵轴显示文字
添加一个Y轴刻度显示文字

##1 IGRChart.AddYAxisText.PosVal = 刻度位置值


##1 IGRChart.AddYAxisText.Text = 文字


##1 IGRChart.EmptyYAxisText = 清空纵轴刻度文字
清空显式设定的全部Y轴刻度文字。

##1 IGRChart.AddXYValue = 增加座标点值
在指定序列上增加坐标点值

##1 IGRChart.AddXYValue.SeriesIndex = 序列顺序号


##1 IGRChart.AddXYValue.XVal = X轴坐标


##1 IGRChart.AddXYValue.YVal = Y轴坐标


##1 IGRChart.EmptyXYValue = 清空全部坐标值
清空全部坐标点值。

##1 IGRChart.GetXYValue = 取坐标值
取坐标值

##1 IGRChart.GetXYValue.SeriesIndex = 序号顺序号


##1 IGRChart.GetXYValue.Index = 索引


##1 IGRChart.AddFillColor = 增加自定义图形填充颜色
增加一个自定义图形填充颜色。

##1 IGRChart.AddFillColor.FillColor = 颜色


##1 IGRChart.EmptyFillColors = 清除自定义图形填充颜色
清空全部自定义图形填充颜色。

##0 GRChartType = 图表类型枚举
GRChartType
    图表类型枚举

    表示图表的类型。

    成员名称		    说明
    柱图		    柱图。
    折线图		    折线图。
    饼图		    饼图。

##1 tagGRChartType = 图表类型枚举
tagGRChartType
    图表类型枚举

    表示图表的类型。

    成员名称		    说明
    柱图		    柱图。
    折线图		    折线图。
    饼图		    饼图。

##1 tagGRChartType.grctBarChart = 柱状图


##1 tagGRChartType.grctPieChart = 饼图


##1 tagGRChartType.grctLineChart = 连线图


##1 IGRStaticBox = 静态文字框
IGRStaticBox
    静态文字框接口
    文字部件框。可以与参数对象关联，显示参数对象的值。
    说明
    用来显示静态文本的部件框，一般在设计时设定要显示的文本，在输出显示时根据输出格式信息将显示文本画出来。静态框可以关联某个参数对象，在这种情况下，在输出显示时部件框的显示文本为参数对象的显示文本，当一个部件框在输出时要显示多次，而其关联的参数对象的值是变化的，则此静态框在不同位置输出时的显示文字是变化的。

##1 IGRStaticBox.Tag = 标签
    标签 属性
    部件框的标识值。
    数据类型:整数型
    语法:对象.标签=整数型
    默认值:0
    特征
    可读写
    设计器中可见
    说明
    可以按自己意愿任意使用本属性，如可以将此属性作为对象的身份标识,相当于语言中各种组件的标记属性。

##1 IGRStaticBox.Name = 名称
    名称属性
    指定单元格的名称标识。
    数据类型:文本型
    语法:对象.名称 = 文本型
    特征
    可读写
    设计器中可见
    说明
    注意：当为内容格或当为标题格而不是组标题格时，即格存在对应列，格的名称与列的名称保持一致。当改变格的名称也同时改变列的名称，反之改变列的名称也同时改变格的名称。

##1 IGRStaticBox.BackColor = 背景色
    背景色 属性
    指定单元格的背景色。
    数据类型:整数型
    语法:对象.背景色=整数型
    特征
    可读写
    设计器中可见

##1 IGRStaticBox.ForeColor = 文字色
    文字色属性
    指定单元格的输出文本的文字颜色。
    数据类型:整数型
    语法:对象.文字色=整数型
    默认值:0(注:黑色)
    特征
    可读写
    设计器中可见
    说明
    注意：只有在格是非自由格时，才允许使用本属性。

##1 IGRStaticBox.GetFont = 获取字体
    获取字体 属性
    获取报表对象的缺省字体对象的引用。
    调用格式：
    〈字体〉对象．获取字体（）
    特征
    只读
    设计器中可见

##1 IGRStaticBox.ControlType = 部件框类型

##1 IGRStaticBox.GetParent = 获取父对象

##1 IGRStaticBox.Left = 左
    左 属性
    部件框的左端显示位置。
    数据类型:双精度小精型
    语法:对象.左=双精度小精型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的左端显示位置值，相对于父容器。

##1 IGRStaticBox.Top = 上
    上 属性
    部件框的顶端显示位置。
    数据类型:双精度小数型
    语法:对象.上=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的顶端显示位置值，相对于父容器。

##1 IGRStaticBox.Width = 宽度
    宽度 属性
    列的显示宽度。
    数据类型:双精度小数型
    语法:对象.宽度=双精度小数型
    特征
    可读写
    设计器中可见
    说明
    列的显示宽度，以报表使用的计量单位表示的输出宽度值。此属性代表列在设计时的宽度，当其输出时显示的宽度有可能与设计时的宽度不一致。例如，当明细网格的打印方法为列适应输出区域宽度，则列的宽度将按比例进行伸缩以刚好适应输出页面的输出区域宽度。

##1 IGRStaticBox.Height = 高度
    高度属性
    部件框的显示高度。
    数据类型:双精度小数型
    语法:对象.高度=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的显示高度值。

##1 IGRStaticBox.Anchor = 锚定
    锚定 属性
    指定部件框的哪些边缘锚定到其容器边缘。
    数据类型:整数型
    语法:对象.锚定=整数型(注:锚定方式枚举组合值)
    默认值:左边|上边
    特征
    可读写
    设计器中可见
    说明
    本属性值是 锚定方式枚举
    值的按位组合。默认值是左边和上边
    。
    请参见
    锚定方式枚举

##1 IGRStaticBox.Dock = 停靠
    停靠 属性
    指定部件框停靠到父容器的哪一个边缘。
    数据类型:整数型
    语法:对象.停靠=整数型(注:停靠方式枚举值)
    默认值:无
    特征
    可读写
    设计器中可见
    停靠方式枚举

##1 IGRStaticBox.Center = 居中
    居中 属性
    指定水平与垂直方向的居中对齐方式。
    数据类型:整数型
    语法:对象.居中=整数型(注:居中方式枚举值)
    默认值:无
    特征
    可读写
    设计器中可见
    说明
    指定部件框在容器中水平与垂直方向上的居中对齐方式。

##1 IGRStaticBox.BorderStyles = 边框模式
    边框模式属性
    边框线的显示方式。
    数据类型:整数型(注:边框模式枚举值的组合)
    语法:对象.边框模式=整数型(边框模式枚举值)
    默认值:0
    特征:可读写
    设计器中可见
    说明
    本属性值是边框模式枚举值的按位组合。默认值是 0，不显示任何边框。
    请参见
    边框模式枚举

##1 IGRStaticBox.BorderWidth = 边框宽度
    边框宽度 属性
    边框线的宽度。
    数据类型:整数型
    语法:对象.边框宽度=整数型
    默认值:1
    特征
    可读写
    设计器中可见
    说明
    以屏幕像素作为计量单位，默认是 1。

##1 IGRStaticBox.BorderColor = 边框色
    边框色 属性
    边框线的显示颜色。
    数据类型:整数型
    语法:对象.边框色=整数型
    默认值:黑色
    特征
    可读写
    设计器中可见

##1 IGRStaticBox.AlignColumn = 对齐列
    对齐列属性
    指定部件框水平位置对齐到明细网格列的名称。
    数据类型:文本型
    语法:对象.对齐列=文本型(注:列名称)
    特征:可读写
    设计器中可见
    说明
    如果本属性值不为空时，配合 对齐列方式属性一起指定部件框与列的对齐方式，部件框的水平位置将跟随列位置的改变而改变。
    注意：只有当部件框在分组头与分组尾中时才能使用本属性。

##1 IGRStaticBox.AlignColumnEx = 对齐列扩展
    对齐列扩展 属性
    指定部件框水平位置对齐到明细网格另一个列的名称。
    数据类型:文本型
    语法:对象.对齐列扩展=文本型(注:列名称)
    特征
    可读写
    设计器中可见
    说明
    如果本属性值不为空时，配合 对齐列方式
    属性一起指定部件框与列的对齐方式，部件框的水平位置将跟随列位置的改变而改变。
    对齐列扩展 与 对齐列可以指定到不同的列，这样部件框就可以跨列对齐到不同的列。如果
    对齐列扩展与 对齐列 只设定了其中之一的，则部件框只对齐到一个列。如果两者都没有设定，则部件框不会对齐到任何列。

##1 IGRStaticBox.AlignColumnSide = 对齐列方式
    对齐列方式属性
    部件框对齐到明细网格列的方式。
    数据类型:整数型
    语法:对象.对齐列方式=整数型(注:对齐列方式枚举)
    默认值:#对齐列方式枚举.左右两端
    特征
    可读写
    设计器中可见
    说明
    注意：只有当部件框在分组头与分组尾中时才能使用本属性。
    请参见
    对齐列方式枚举

##1 IGRStaticBox.BackStyle = 背景模式
    背景模式 属性
    部件框显示时背景的填充方式。
    数据类型:整数型
    语法:对象.背景模式 = 整数型(注:背景模式枚举值)
    默认值:#背景模式枚举.透明
    特征:可读写
    设计器中可见
    请参见
    背景模式枚举

##1 IGRStaticBox.PrintType = 打印类别
    打印类别 属性
    部件框的打印输出方式。
    数据类型:整数型
    语法:对象.打印类别=整数型(注:打印类型枚举值)
    特征
    可读写
    设计器中可见
    仅用于打印
    请参见
    打印类别枚举

##1 IGRStaticBox.Visible = 可见性
    可见性属性
    指定列在输出时是否可见。
    数据类型:逻辑型
    语法:对象.可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为假，则本列在屏幕显示与打印生成时将被忽略掉。

##1 IGRStaticBox.Cursor = 光标
    光标属性
    指定在查询显示报表时，在本内容行上显示的鼠标光标。
    数据类型:整数型
    语法:对象.光标=整数型(注:显示光标枚举值)
    默认值:默认光标
    特征
    可读写
    设计器中可见

##1 IGRStaticBox.GetAsTextBox = 获取为文字框

##1 IGRStaticBox.GetAsChart = 获取为图表

##1 IGRStaticBox.GetAsStaticBox = 获取为静态文字框

##1 IGRStaticBox.GetAsShapeBox = 获取为图形框

##1 IGRStaticBox.GetAsSystemVarBox = 获取为系统变量框

##1 IGRStaticBox.GetAsFieldBox = 获取为字段框

##1 IGRStaticBox.GetAsSummaryBox = 获取为统计框

##1 IGRStaticBox.GetAsPictureBox = 获取为图像框

##1 IGRStaticBox.GetAsRichTextBox = 获取为RTF文字框

##1 IGRStaticBox.GetAsMemoBox = 获取为综合文字框

##1 IGRStaticBox.GetAsSubReport = 获取为子报表

##1 IGRStaticBox.GetAsLine = 获取为线段

##1 IGRStaticBox.GetAsBarcode = 获取为条码


##1 IGRStaticBox.SetBounds = 设置边界
    设置边界方法
    设置部件框在其父容器中的边界位置。
    调用格式：〈无返回值〉对象．设置边界（双精度小数型左边，双精度小数型顶边，双精度小数型
    右边，双精度小数型 底边)

##1 IGRStaticBox.BringToFront = 显示到前端
    显示到前端方法
    将部件框带到Z顺序的前面。
    调用格式：
    〈无返回值〉对象．显示到前端（）
    说明
    此部件框将在同一容器中的其它部件框之后输出显示，如果前面输出的部件框与其在位置上有重叠，则此部件框将覆盖前面输出的部件框。

##1 IGRStaticBox.SendToBack = 显示到后端
    显示到后端方法
    将部件框发送到Z顺序的后面。
    调用格式：
    〈无返回值〉对象．显示到后端（）
    说明
    此部件框将在同一容器中的其它部件框之前输出显示，如果后输出的部件框与其在位置上有重叠，则后输出的部件框将覆盖此部件框。

##1 IGRStaticBox.LoadCursorFile = 
方法 LoadCursor

##1 IGRStaticBox.WordWrap = 文字绕行
    文字绕行属性
    指定文字是否折行输出的标志。
    数据类型:逻辑型
    语法:对象.文字绕行=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为真，文字可以折行输出，否则不论文字多少，只在一行中输出文字。
    注意：只有在格不是自由格时，才允许使用本属性。

##1 IGRStaticBox.EndEllipsis = 省略点文字

##1 IGRStaticBox.CanGrow = 可伸展
    可伸展属性
    指定内容格在运行时是否可以伸展高度。
    数据类型:逻辑型
    语法:对象.可伸展=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRStaticBox.CanShrink = 可收缩
    可收缩 属性
    指定内容格在运行时是否可以收缩高度。
    数据类型:逻辑型
    语法:对象.可收缩=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRStaticBox.ShrinkFontToFit = 缩小适应
    缩小适应属性
    在文字框的显示区域不能完整显示出文字内容时，指定是否自动缩小文字大小让文字完整显示出来。
    语法:对象.缩小适应=逻辑型
    默认值
    假
    特征
    可读写
    设计器中可见
    仅用于打印

##1 IGRStaticBox.TextAlign = 文字对齐方式
    文字对齐方式 属性
    指定显示文本的文字对齐方式。
    数据类型:整数型
    语法:对象.文字对齐方式=整数型(注:文字对齐方式枚举值)
    特征
    可读写
    设计器中可见
    说明
    注意：只有在格不是自由格时，才允许使用本属性。

##1 IGRStaticBox.DisplayText = 显示文字
    显示文字 属性
    获取或设置部件框的输出显示文本。
    语法:对象.显示文字=文本型
    特征
    可读写
    仅运行时可用
    说明
    获取或设置部件框的输出显示文本。只有在运行时才能使用本属性，当不能由Grid++Report根据字段的值自动产生显示文本时，在请求字段显示文字事件中为字段的显示文字属性赋一个新的显示文本。
    例如当需要将金额的负数值显示为红字时，需要将数字显示文字前面的负号去掉，就必须响应请求字段显示文字事件并使用显示文字属性。
    请参见

##1 IGRStaticBox.ShowMoneyLabel = 显示金额标签

##1 IGRStaticBox.ShowMoneyLine = 显示金额线

##1 IGRStaticBox.GetDisplayTextScript = 显示文字脚本
    显示文字脚本 属性
    表示报表请求文字框显示文字事件对应的脚本语言代码。
    语法:对象.显示文字脚本=文本型
    特征
    可读写
    设计器中可见
    请参见
    文字框接口| 报表.请求文字框显示文字事件

##1 IGRStaticBox.Text = 文字
    显示文本。
    BSTRText
    特征
    可读写
    设计器中可见
    说明
    当静态框关联参数时，此属性在显示时被忽略。

##1 IGRStaticBox.Parameter = 参数
    指定关联参数对象的名称。
    BSTRParameter
    特征
    可读写
    设计器中可见

##1 IGRShapeBox = 图形框
    图形框接口
    表示图形框。
    说明
    用来显示各种图形的部件框，在设计时设定某种图形类别，并设定该种图形的一些参数信息。图形框一般用来对报表进行一些修饰。

##1 IGRShapeBox.Tag = 标签
    标签 属性
    部件框的标识值。
    数据类型:整数型
    语法:对象.标签=整数型
    默认值:0
    特征
    可读写
    设计器中可见
    说明
    可以按自己意愿任意使用本属性，如可以将此属性作为对象的身份标识,相当于语言中各种组件的标记属性。

##1 IGRShapeBox.Name = 名称
    名称属性
    指定单元格的名称标识。
    数据类型:文本型
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见
    说明
    注意：当为内容格或当为标题格而不是组标题格时，即格存在对应列，格的名称与列的名称保持一致。当改变格的名称也同时改变列的名称，反之改变列的名称也同时改变格的名称。

##1 IGRShapeBox.BackColor = 背景色
    背景色 属性
    指定单元格的背景色。
    数据类型:整数型
    语法:对象.背景色=整数型
    特征
    可读写
    设计器中可见

##1 IGRShapeBox.ForeColor = 文字色
    文字色属性
    指定单元格的输出文本的文字颜色。
    数据类型:整数型
    语法:对象.文字色=整数型
    默认值:0(注:黑色)
    特征
    可读写
    设计器中可见
    说明
    注意：只有在格是非自由格时，才允许使用本属性。

##1 IGRShapeBox.GetFont = 获取字体
属性 Font
    IGRShapeBox.GetFont
    获取字体 属性
    获取报表对象的缺省字体对象的引用。
    调用格式：
    〈字体〉对象．获取字体（）
    特征
    只读
    设计器中可见

##1 IGRShapeBox.ControlType = 部件框类型

##1 IGRShapeBox.GetParent = 获取父对象

##1 IGRShapeBox.Left = 左
    左 属性
    部件框的左端显示位置。
    数据类型:双精度小精型
    语法:对象.左=双精度小精型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的左端显示位置值，相对于父容器。

##1 IGRShapeBox.Top = 上
    上 属性
    部件框的顶端显示位置。
    数据类型:双精度小数型
    语法:对象.上=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的顶端显示位置值，相对于父容器。

##1 IGRShapeBox.Width = 宽度
    宽度 属性
    列的显示宽度。
    数据类型:双精度小数型
    语法:对象.宽度=双精度小数型
    特征
    可读写
    设计器中可见
    说明
    列的显示宽度，以报表使用的计量单位表示的输出宽度值。此属性代表列在设计时的宽度，当其输出时显示的宽度有可能与设计时的宽度不一致。例如，当明细网格的打印方法为列适应输出区域宽度，则列的宽度将按比例进行伸缩以刚好适应输出页面的输出区域宽度。

##1 IGRShapeBox.Height = 高度
    高度属性
    部件框的显示高度。
    数据类型:双精度小数型
    语法:对象.高度=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的显示高度值。

##1 IGRShapeBox.Anchor = 锚定
    锚定 属性
    指定部件框的哪些边缘锚定到其容器边缘。
    数据类型:整数型
    语法:对象.锚定=整数型(注:锚定方式枚举组合值)
    默认值:左边|上边
    特征
    可读写
    设计器中可见
    说明
    本属性值是 锚定方式枚举
    值的按位组合。默认值是左边和上边
    。
    请参见
    锚定方式枚举

##1 IGRShapeBox.Dock = 停靠
    停靠 属性
    指定部件框停靠到父容器的哪一个边缘。
    数据类型:整数型
    语法:对象.停靠=整数型(注:停靠方式枚举值)
    默认值:无
    特征
    可读写
    设计器中可见
    停靠方式枚举

##1 IGRShapeBox.Center = 居中
    居中 属性
    指定水平与垂直方向的居中对齐方式。
    数据类型:整数型
    语法:对象.居中=整数型(注:居中方式枚举值)
    默认值:无
    特征
    可读写
    设计器中可见
    说明
    指定部件框在容器中水平与垂直方向上的居中对齐方式。

##1 IGRShapeBox.BorderStyles = 边框模式
    边框模式属性
    边框线的显示方式。
    数据类型:整数型(注:边框模式枚举值的组合)
    语法:对象.边框模式=整数型(边框模式枚举值)
    默认值:0
    特征:可读写
    设计器中可见
    说明
    本属性值是边框模式枚举值的按位组合。默认值是 0，不显示任何边框。
    请参见
    边框模式枚举

##1 IGRShapeBox.BorderWidth = 边框宽度
    边框宽度 属性
    边框线的宽度。
    数据类型:整数型
    语法:对象.边框宽度=整数型
    默认值:1
    特征
    可读写
    设计器中可见
    说明
    以屏幕像素作为计量单位，默认是 1。

##1 IGRShapeBox.BorderColor = 边框色
    边框色 属性
    边框线的显示颜色。
    数据类型:整数型
    语法:对象.边框色=整数型
    默认值:黑色
    特征
    可读写
    设计器中可见

##1 IGRShapeBox.AlignColumn = 对齐列
    对齐列属性
    指定部件框水平位置对齐到明细网格列的名称。
    数据类型:文本型
    语法:对象.对齐列=文本型(注:列名称)
    特征:可读写
    设计器中可见
    说明
    如果本属性值不为空时，配合 对齐列方式属性一起指定部件框与列的对齐方式，部件框的水平位置将跟随列位置的改变而改变。
    注意：只有当部件框在分组头与分组尾中时才能使用本属性。

##1 IGRShapeBox.AlignColumnEx = 对齐列扩展
    对齐列扩展 属性
    指定部件框水平位置对齐到明细网格另一个列的名称。
    数据类型:文本型
    语法:对象.对齐列扩展=文本型(注:列名称)
    特征
    可读写
    设计器中可见
    说明
    如果本属性值不为空时，配合 对齐列方式
    属性一起指定部件框与列的对齐方式，部件框的水平位置将跟随列位置的改变而改变。
    对齐列扩展
    与 对齐列可以指定到不同的列，这样部件框就可以跨列对齐到不同的列。如果
    对齐列扩展与 对齐列
    只设定了其中之一的，则部件框只对齐到一个列。如果两者都没有设定，则部件框不会对齐到任何列。

##1 IGRShapeBox.AlignColumnSide = 对齐列方式
    对齐列方式属性
    部件框对齐到明细网格列的方式。
    数据类型:整数型
    语法:对象.对齐列方式=整数型(注:对齐列方式枚举)
    默认值:#对齐列方式枚举.左右两端
    特征
    可读写
    设计器中可见
    说明
    注意：只有当部件框在分组头与分组尾中时才能使用本属性。
    请参见
    对齐列方式枚举

##1 IGRShapeBox.BackStyle = 背景模式
    背景模式 属性
    部件框显示时背景的填充方式。
    数据类型:整数型
    语法:对象.背景模式=整数型(注:背景模式枚举值)
    默认值:#背景模式枚举.透明
    特征:可读写
    设计器中可见
    请参见
    背景模式枚举

##1 IGRShapeBox.PrintType = 打印类别
    打印类别 属性
    部件框的打印输出方式。
    数据类型:整数型
    语法:对象.打印类别=整数型(注:打印类型枚举值)
    特征
    可读写
    设计器中可见
    仅用于打印
    请参见
    打印类别枚举

##1 IGRShapeBox.Visible = 可见性
    可见性属性
    指定列在输出时是否可见。
    数据类型:逻辑型
    语法:对象.可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为假，则本列在屏幕显示与打印生成时将被忽略掉。

##1 IGRShapeBox.Cursor = 光标
    光标属性
    指定在查询显示报表时，在本内容行上显示的鼠标光标。
    数据类型:整数型
    语法:对象.光标=整数型(注:显示光标枚举值)
    默认值:默认光标
    特征
    可读写
    设计器中可见

##1 IGRShapeBox.GetAsTextBox = 获取为文字框

##1 IGRShapeBox.GetAsChart = 获取为图表

##1 IGRShapeBox.GetAsStaticBox = 获取为静态文字框

##1 IGRShapeBox.GetAsShapeBox = 获取为图形框

##1 IGRShapeBox.GetAsSystemVarBox = 获取为系统变量框

##1 IGRShapeBox.GetAsFieldBox = 获取为字段框

##1 IGRShapeBox.GetAsSummaryBox = 获取为统计框

##1 IGRShapeBox.GetAsPictureBox = 获取为图像框

##1 IGRShapeBox.GetAsRichTextBox = 获取为RTF文字框

##1 IGRShapeBox.GetAsMemoBox = 获取为综合文字框

##1 IGRShapeBox.GetAsSubReport = 获取为子报表

##1 IGRShapeBox.GetAsLine = 获取为线段

##1 IGRShapeBox.GetAsBarcode = 获取为条码


##1 IGRShapeBox.SetBounds = 设置边界
    设置边界方法
    设置部件框在其父容器中的边界位置。
    调用格式：〈无返回值〉对象．设置边界（双精度小数型左边，双精度小数型顶边，双精度小数型
    右边，双精度小数型 底边)

##1 IGRShapeBox.BringToFront = 显示到前端
    显示到前端方法
    将部件框带到Z顺序的前面。
    调用格式：
    〈无返回值〉对象．显示到前端（）
    说明
    此部件框将在同一容器中的其它部件框之后输出显示，如果前面输出的部件框与其在位置上有重叠，则此部件框将覆盖前面输出的部件框。

##1 IGRShapeBox.SendToBack = 显示到后端
    显示到后端方法
    将部件框发送到Z顺序的后面。
    调用格式：
    〈无返回值〉对象．显示到后端（）
    说明
    此部件框将在同一容器中的其它部件框之前输出显示，如果后输出的部件框与其在位置上有重叠，则后输出的部件框将覆盖此部件框。

##0 IGRShapeBox.LoadCursorFile = 
方法 LoadCursor

##1 IGRShapeBox.ShapeType = 图形类型
    图形类型属性
    指定图形的类型。
    语法:对象.图形类型=整数型(图形类型枚举值)
    默认值矩形
    特征
    可读写
    设计器中可见

    图形类型枚举
    指定图形部件框的具体类型。

    成员名称		    说明
    圆			    圆。
    椭圆		    椭圆。
    直线		    直线。
    矩形		    矩形。
    圆角矩形		    圆角矩形。
    圆角正方形		    圆角正方形。
    正方形		    正方形。

##1 IGRShapeBox.PenStyle = 画笔样式
    画笔样式属性
    指定画线条的画笔类型。
    语法:对象.画笔样式=整数型(画笔样式枚举值)
    默认值    grpsSolid
    特征
    可读写
    设计器中可见

    请参见

    画笔样式枚举
    画线条时，指定画线笔的类型。

    成员名称		    说明
    不应用		    不画线。
    段线		    画段虚线。
    点划线		    画点段虚线。
    双点划线		    画双点段虚线。
    虚线		    画点虚线。
    凹框线		    画内框线。
    实线		    画实线。

##1 IGRShapeBox.PenWidth = 画笔宽度
    画笔宽度属性
    指定画线条的画笔的宽度。
    语法:对象.画笔宽度=整数型
    默认值    1
    特征
    可读写
    设计器中可见
    说明
    以屏幕像素表示属性值。

##1 IGRShapeBox.PenColor = 画笔颜色
    画笔颜色属性
    画图形线条的颜色。
    语法:对象.画笔颜色=整数型
    默认值黑色
    特征
    可读写

##1 IGRShapeBox.FillColor = 填充色
    填充色属性
    封闭图形对象的内部填充色。
    语法:对象.填充色=整数型
    默认值:黑色特征
    可读写
    设计器中可见

##1 IGRShapeBox.FillStyle = 填充方式
    填充方式属性
    封闭图形对象的内部填充方式。
    语法:对象.填充方式 = 整数型号(填充方式枚举值)
    默认值    grbkTransparent
    特征
    可读写
    设计器中可见

    背景模式枚举
    指定部件再显示时用来填充其所占区域背景的方式。

    成员名称		 说明
    通常		 部件框使用背景色填充他占据的矩形区域。
    透明		 部件框背景透明，允许任何背景图像或其他部件框透过自身显示。

##1 IGRShapeBox.LineType = 线类型

##1 IGRShapeBox.CornerDx = 圆角宽度
    圆角宽度属性
    圆角矩形框的圆角椭圆宽度。
    语法:对象.圆角宽度=整数型
    默认值    4
    特征
    可读写
    设计器中可见

##1 IGRShapeBox.CornerDy = 圆角高度
    圆角高度属性
    圆角矩形框的圆角椭圆高度。
    语法:对象.圆角高度=整数型
    默认值    4
    特征
    可读写
    设计器中可见

##0 GRShapeType = 图形类型枚举
    图形类型枚举

    指定图形部件框的具体类型。

    成员名称		    说明
    圆		    圆。
    椭圆		    椭圆。
    直线		    直线。
    矩形		    矩形。
    圆角矩形		    圆角矩形。
    圆角正方形		    圆角正方形。
    正方形		    正方形。

##1 tagGRShapeBoxType = 图形类型枚举
tagGRShapeBoxType
    图形类型枚举

    指定图形部件框的具体类型。

    成员名称		    说明
    圆			    圆。
    椭圆		    椭圆。
    直线		    直线。
    矩形		    矩形。
    圆角矩形		    圆角矩形。
    圆角正方形		    圆角正方形。
    正方形		    正方形。

##1 tagGRShapeBoxType.grsbtCircle = 圆


##1 tagGRShapeBoxType.grsbtEllipse = 椭圆


##1 tagGRShapeBoxType.grsbtRectangle = 矩形


##1 tagGRShapeBoxType.grsbtRoundRect = 圆角矩形


##1 tagGRShapeBoxType.grsbtRoundSquare = 圆角正方形


##1 tagGRShapeBoxType.grsbtSquare = 正方形


##1 tagGRShapeBoxType.grsbtLine = 线


##0 GRPenStyle = 画笔样式枚举
GRPenStyle
    画笔样式枚举

    画线条时，指定画线笔的类型。

    成员名称		    说明
    不应用		    不画线。
    段线		    画段虚线。
    点划线		    画点段虚线。
    双点划线		    画双点段虚线。
    虚线		    画点虚线。
    凹框线		    画内框线。
    实线		    画实线。

##1 tagGRPenStyle = 画笔样式枚举
tagGRPenStyle
    画笔样式枚举

    画线条时，指定画线笔的类型。

    成员名称		    说明
    不应用		    不画线。
    段线		    画段虚线。
    点划线		    画点段虚线。
    双点划线		    画双点段虚线。
    虚线		    画点虚线。
    凹框线		    画内框线。
    实线		    画实线。

##1 tagGRPenStyle.grpsSolid = 实线


##1 tagGRPenStyle.grpsDash = 段线


##1 tagGRPenStyle.grpsDot = 虚线


##1 tagGRPenStyle.grpsDashDot = 点划线


##1 tagGRPenStyle.grpsDashDotDot = 双点划线


##1 tagGRPenStyle.grpsClear = 不应用


##1 tagGRPenStyle.grpsInsideFrame = 凹框线


##0 GRLineType = 线段类型枚举


##0 tagGRLineType = 线段类型枚举


##0 tagGRLineType.grltBottomLeftToBottomRight = 


##1 IGRSystemVarBox = 系统变量框
    系统变量框接口
    表示系统变量框。
    说明
    用来显示系统变量值的部件框，在设计时设定某种系统变量，在系统变量框中可以定义值的输出格式。系统变量框可以使用在任何部件框容器中，例如页号、页总数一般使用在页眉与页脚中。

##1 IGRSystemVarBox.Tag = 标签
    标签 属性
    部件框的标识值。
    数据类型:整数型
    语法:对象.标签=整数型
    默认值:0
    特征
    可读写
    设计器中可见
    说明
    可以按自己意愿任意使用本属性，如可以将此属性作为对象的身份标识,相当于语言中各种组件的标记属性。

##1 IGRSystemVarBox.Name = 名称
    名称属性
    指定单元格的名称标识。
    数据类型:文本型
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见
    说明
    注意：当为内容格或当为标题格而不是组标题格时，即格存在对应列，格的名称与列的名称保持一致。当改变格的名称也同时改变列的名称，反之改变列的名称也同时改变格的名称。

##1 IGRSystemVarBox.BackColor = 背景色
    背景色 属性
    指定单元格的背景色。
    数据类型:整数型
    语法:对象.背景色=整数型
    特征
    可读写
    设计器中可见

##1 IGRSystemVarBox.ForeColor = 文字色
    文字色属性
    指定单元格的输出文本的文字颜色。
    数据类型:整数型
    语法:对象.文字色=整数型
    默认值:0(注:黑色)
    特征
    可读写
    设计器中可见
    说明
    注意：只有在格是非自由格时，才允许使用本属性。

##1 IGRSystemVarBox.GetFont = 获取字体
    获取字体 属性
    获取报表对象的缺省字体对象的引用。
    调用格式：
    〈字体〉对象．获取字体（）
    特征
    只读
    设计器中可见

##1 IGRSystemVarBox.ControlType = 部件框类型

##1 IGRSystemVarBox.GetParent = 获取父对象

##1 IGRSystemVarBox.Left = 左
    左 属性
    部件框的左端显示位置。
    数据类型:双精度小精型
    语法:对象.左=双精度小精型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的左端显示位置值，相对于父容器。

##1 IGRSystemVarBox.Top = 上
    上 属性
    部件框的顶端显示位置。
    数据类型:双精度小数型
    语法:对象.上=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的顶端显示位置值，相对于父容器。

##1 IGRSystemVarBox.Width = 宽度
    宽度 属性
    列的显示宽度。
    数据类型:双精度小数型
    语法:对象.宽度=双精度小数型
    特征
    可读写
    设计器中可见
    说明
    列的显示宽度，以报表使用的计量单位表示的输出宽度值。此属性代表列在设计时的宽度，当其输出时显示的宽度有可能与设计时的宽度不一致。例如，当明细网格的打印方法为列适应输出区域宽度，则列的宽度将按比例进行伸缩以刚好适应输出页面的输出区域宽度。

##1 IGRSystemVarBox.Height = 高度
    高度属性
    部件框的显示高度。
    数据类型:双精度小数型
    语法:对象.高度=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的显示高度值。

##1 IGRSystemVarBox.Anchor = 锚定
    锚定 属性
    指定部件框的哪些边缘锚定到其容器边缘。
    数据类型:整数型
    语法:对象.锚定=整数型(注:锚定方式枚举组合值)
    默认值:左边|上边
    特征
    可读写
    设计器中可见
    说明
    本属性值是 锚定方式枚举
    值的按位组合。默认值是左边和上边
    。
    请参见
    锚定方式枚举

##1 IGRSystemVarBox.Dock = 停靠
    停靠 属性
    指定部件框停靠到父容器的哪一个边缘。
    数据类型:整数型
    语法:对象.停靠=整数型(注:停靠方式枚举值)
    默认值:无
    特征
    可读写
    设计器中可见
    停靠方式枚举

##1 IGRSystemVarBox.Center = 居中
    居中 属性
    指定水平与垂直方向的居中对齐方式。
    数据类型:整数型
    语法:对象.居中=整数型(注:居中方式枚举值)
    默认值:无
    特征
    可读写
    设计器中可见
    说明
    指定部件框在容器中水平与垂直方向上的居中对齐方式。

##1 IGRSystemVarBox.BorderStyles = 边框模式
    边框模式属性
    边框线的显示方式。
    数据类型:整数型(注:边框模式枚举值的组合)
    语法:对象.边框模式=整数型(边框模式枚举值)
    默认值:0
    特征:可读写
    设计器中可见
    说明
    本属性值是边框模式枚举值的按位组合。默认值是 0，不显示任何边框。
    请参见
    边框模式枚举

##1 IGRSystemVarBox.BorderWidth = 边框宽度
    边框宽度 属性
    边框线的宽度。
    数据类型:整数型
    语法:对象.边框宽度=整数型
    默认值:1
    特征
    可读写
    设计器中可见
    说明
    以屏幕像素作为计量单位，默认是 1。

##1 IGRSystemVarBox.BorderColor = 边框色
    边框色 属性
    边框线的显示颜色。
    数据类型:整数型
    语法:对象.边框色=整数型
    默认值:黑色
    特征
    可读写
    设计器中可见

##1 IGRSystemVarBox.AlignColumn = 对齐列
    对齐列属性
    指定部件框水平位置对齐到明细网格列的名称。
    数据类型:文本型
    语法:对象.对齐列=文本型(注:列名称)
    特征:可读写
    设计器中可见
    说明
    如果本属性值不为空时，配合 对齐列方式属性一起指定部件框与列的对齐方式，部件框的水平位置将跟随列位置的改变而改变。
    注意：只有当部件框在分组头与分组尾中时才能使用本属性。

##1 IGRSystemVarBox.AlignColumnEx = 对齐列扩展
    对齐列扩展 属性
    指定部件框水平位置对齐到明细网格另一个列的名称。
    数据类型:文本型
    语法:对象.对齐列扩展=文本型(注:列名称)
    特征
    可读写
    设计器中可见
    说明
    如果本属性值不为空时，配合 对齐列方式
    属性一起指定部件框与列的对齐方式，部件框的水平位置将跟随列位置的改变而改变。
    对齐列扩展
    与 对齐列可以指定到不同的列，这样部件框就可以跨列对齐到不同的列。如果
    对齐列扩展与 对齐列
    只设定了其中之一的，则部件框只对齐到一个列。如果两者都没有设定，则部件框不会对齐到任何列。

##1 IGRSystemVarBox.AlignColumnSide = 对齐列方式
    对齐列方式属性
    部件框对齐到明细网格列的方式。
    数据类型:整数型
    语法:对象.对齐列方式=整数型(注:对齐列方式枚举)
    默认值:#对齐列方式枚举.左右两端
    特征
    可读写
    设计器中可见
    说明
    注意：只有当部件框在分组头与分组尾中时才能使用本属性。
    请参见
    对齐列方式枚举

##1 IGRSystemVarBox.BackStyle = 背景模式
    背景模式 属性
    部件框显示时背景的填充方式。
    数据类型:整数型
    语法:对象.背景模式=整数型(注:背景模式枚举值)
    默认值:#背景模式枚举.透明
    特征:可读写
    设计器中可见
    请参见
    背景模式枚举

##1 IGRSystemVarBox.PrintType = 打印类别
    打印类别 属性
    部件框的打印输出方式。
    数据类型:整数型
    语法:对象.打印类别=整数型(注:打印类型枚举值)
    特征
    可读写
    设计器中可见
    仅用于打印
    请参见
    打印类别枚举

##1 IGRSystemVarBox.Visible = 可见性
    可见性属性
    指定列在输出时是否可见。
    数据类型:逻辑型
    语法:对象.可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为假，则本列在屏幕显示与打印生成时将被忽略掉。

##1 IGRSystemVarBox.Cursor = 光标
    光标属性
    指定在查询显示报表时，在本内容行上显示的鼠标光标。
    数据类型:整数型
    语法:对象.光标=整数型(注:显示光标枚举值)
    默认值:默认光标
    特征
    可读写
    设计器中可见

##1 IGRSystemVarBox.GetAsTextBox = 获取为文字框

##1 IGRSystemVarBox.GetAsChart = 获取为图表

##1 IGRSystemVarBox.GetAsStaticBox = 获取为静态文字框

##1 IGRSystemVarBox.GetAsShapeBox = 获取为图形框

##1 IGRSystemVarBox.GetAsSystemVarBox = 获取为系统变量框

##1 IGRSystemVarBox.GetAsFieldBox = 获取为字段框

##1 IGRSystemVarBox.GetAsSummaryBox = 获取为统计框

##1 IGRSystemVarBox.GetAsPictureBox = 获取为图像框

##1 IGRSystemVarBox.GetAsRichTextBox = 获取为RTF文字框

##1 IGRSystemVarBox.GetAsMemoBox = 获取为综合文字框

##1 IGRSystemVarBox.GetAsSubReport = 获取为子报表

##1 IGRSystemVarBox.GetAsLine = 获取为线段

##1 IGRSystemVarBox.SetBounds = 设置边界
    设置边界方法
    设置部件框在其父容器中的边界位置。
    调用格式：〈无返回值〉对象．设置边界（双精度小数型左边，双精度小数型顶边，双精度小数型
    右边，双精度小数型 底边)

##1 IGRSystemVarBox.BringToFront = 显示到前端
    显示到前端方法
    将部件框带到Z顺序的前面。
    调用格式：
    〈无返回值〉对象．显示到前端（）
    说明
    此部件框将在同一容器中的其它部件框之后输出显示，如果前面输出的部件框与其在位置上有重叠，则此部件框将覆盖前面输出的部件框。

##1 IGRSystemVarBox.SendToBack = 显示到后端
    显示到后端方法
    将部件框发送到Z顺序的后面。
    调用格式：
    〈无返回值〉对象．显示到后端（）
    说明
    此部件框将在同一容器中的其它部件框之前输出显示，如果后输出的部件框与其在位置上有重叠，则后输出的部件框将覆盖此部件框。

##1 IGRSystemVarBox.LoadCursorFile = 
方法 LoadCursor

##1 IGRSystemVarBox.WordWrap = 文字绕行
    文字绕行属性
    指定文字是否折行输出的标志。
    数据类型:逻辑型
    语法:对象.文字绕行=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为真，文字可以折行输出，否则不论文字多少，只在一行中输出文字。
    注意：只有在格不是自由格时，才允许使用本属性。

##1 IGRSystemVarBox.EndEllipsis = 省略点文字

##1 IGRSystemVarBox.CanGrow = 可伸展
    可伸展属性
    指定内容格在运行时是否可以伸展高度。
    数据类型:逻辑型
    语法:对象.可伸展=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRSystemVarBox.CanShrink = 可收缩
    可收缩 属性
    指定内容格在运行时是否可以收缩高度。
    数据类型:逻辑型
    语法:对象.可收缩=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRSystemVarBox.ShrinkFontToFit = 缩小适应
    缩小适应属性
    在文字框的显示区域不能完整显示出文字内容时，指定是否自动缩小文字大小让文字完整显示出来。
    语法:对象.缩小适应=逻辑型
    默认值
    假
    特征
    可读写
    设计器中可见
    仅用于打印

##1 IGRSystemVarBox.TextAlign = 文字对齐方式
    文字对齐方式 属性
    指定显示文本的文字对齐方式。
    数据类型:整数型
    语法:对象.文字对齐方式=整数型(注:文字对齐方式枚举值)
    特征
    可读写
    设计器中可见
    说明
    注意：只有在格不是自由格时，才允许使用本属性。

##1 IGRSystemVarBox.DisplayText = 显示文字
    显示文字 属性
    获取或设置部件框的输出显示文本。
    语法:对象.显示文字=文本型
    特征
    可读写
    仅运行时可用
    说明
    获取或设置部件框的输出显示文本。只有在运行时才能使用本属性，当不能由Grid++Report根据字段的值自动产生显示文本时，在请求字段显示文字事件中为字段的显示文字属性赋一个新的显示文本。
    例如当需要将金额的负数值显示为红字时，需要将数字显示文字前面的负号去掉，就必须响应请求字段显示文字事件并使用显示文字属性。
    请参见

##1 IGRSystemVarBox.ShowMoneyLabel = 显示金额标签

##1 IGRSystemVarBox.ShowMoneyLine = 显示金额线

##1 IGRSystemVarBox.GetDisplayTextScript = 显示文字脚本
    显示文字脚本 属性
    表示报表请求文字框显示文字事件对应的脚本语言代码。
    语法:对象.显示文字脚本=文本型
    特征
    可读写
    设计器中可见
    请参见
    文字框接口| 报表.请求文字框显示文字事件

##1 IGRSystemVarBox.SystemVar = 系统变量
    系统变量属性

    指定应用的系统变量类型。
    语法:对象.系统变量=整数型(系统变量枚举值)
    默认值:当前页号
    特征
    可读写
    设计器中可见
    请参见
    系统变量枚举
    指定系统变量部件框应用的系统变量类型。

    成员名称		    说明
    当前日期时间	    计算机的当前日期时间。
    一级分组行号	    一级分组的当前分组项的序号，从1开始计数。
    二级分组行号	    二级分组的当前分组项的序号，从1开始计数。
    三级分组行号	    三级分组的当前分组项的序号，从1开始计数。
    总页数		    总页数。
    当前页号		    当前页号。
    记录号		    明细记录的当前记录号，从1开始计数。
    行号		    明细网格的当前行号，从1开始计数。

##1 IGRSystemVarBox.Format = 格式串
    系统变量值生成显示文字所应用的格式串。

    BSTR Format
    特征
    可读写
    设计器中可见
    请参见
    IGRSystemVarBox接口 |IGRSystemVarBox成员 |
    属性特征说明

##0 GRSystemVarType = 系统变量枚举
GRSystemVarType
    系统变量枚举
    指定系统变量部件框应用的系统变量类型。

    成员名称		    说明
    当前日期时间	    计算机的当前日期时间。
    一级分组行号	    一级分组的当前分组项的序号，从1开始计数。
    二级分组行号	    二级分组的当前分组项的序号，从1开始计数。
    三级分组行号	    三级分组的当前分组项的序号，从1开始计数。
    总页数		    总页数。
    当前页号		    当前页号。
    记录号		    明细记录的当前记录号，从1开始计数。
    行号		    明细网格的当前行号，从1开始计数。

##1 tagGRSystemVar = 系统变量枚举
tagGRSystemVar
    系统变量枚举
    指定系统变量部件框应用的系统变量类型。

    成员名称		    说明
    当前日期时间	    计算机的当前日期时间。
    一级分组行号	    一级分组的当前分组项的序号，从1开始计数。
    二级分组行号	    二级分组的当前分组项的序号，从1开始计数。
    三级分组行号	    三级分组的当前分组项的序号，从1开始计数。
    总页数		    总页数。
    当前页号		    当前页号。
    记录号		    明细记录的当前记录号，从1开始计数。
    行号		    明细网格的当前行号，从1开始计数。

##1 tagGRSystemVar.grsvCurrentDateTime = 当前日期时间


##1 tagGRSystemVar.grsvPageCount = 总页数


##1 tagGRSystemVar.grsvPageNumber = 当前页号
tagGRSystemVar.grsvPageNumber
    当前页号属性
    当前显示页的页号。页号从一开始计数。
    语法:对象.当前页号 = 整数型
    特征
    可读写
    仅运行时可用

##1 tagGRSystemVar.grsvRecordNo = 记录号
tagGRSystemVar.grsvRecordNo
    记录号属性
    指示当前记录的记录号，记录号从1开始。
    语法:对象.记录号
    特征
    只读
    仅运行时可用

##1 tagGRSystemVar.grsvGroup1RowNo = 一级分组行号


##1 tagGRSystemVar.grsvGroup2RowNo = 二级分组行号


##1 tagGRSystemVar.grsvGroup3RowNo = 三级分组行号


##1 tagGRSystemVar.grsvRowNo = 行号


##1 IGRFieldBox = 字段框
    字段框接口
    表示字段部件框。关联一个记录集的字段，显示字段的值。
    说明
    用来显示字段内容的部件框，在设计时关联一个字段对象，在输出显示时根据输出格式信息将字段对象在当前记录的显示文本画出来。字段框一般使用在明细网格的自由内容格、分组头、分组尾中。
    请参见
    字段接口

##1 IGRFieldBox.Tag = 标签
    标签 属性
    部件框的标识值。
    数据类型:整数型
    语法:对象.标签=整数型
    默认值:0
    特征
    可读写
    设计器中可见
    说明
    可以按自己意愿任意使用本属性，如可以将此属性作为对象的身份标识,相当于语言中各种组件的标记属性。

##1 IGRFieldBox.Name = 名称
    名称属性
    指定单元格的名称标识。
    数据类型:文本型
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见
    说明
    注意：当为内容格或当为标题格而不是组标题格时，即格存在对应列，格的名称与列的名称保持一致。当改变格的名称也同时改变列的名称，反之改变列的名称也同时改变格的名称。

##1 IGRFieldBox.BackColor = 背景色
    背景色 属性
    指定单元格的背景色。
    数据类型:整数型
    语法:对象.背景色=整数型
    特征
    可读写
    设计器中可见

##1 IGRFieldBox.ForeColor = 文字色
    文字色属性
    指定单元格的输出文本的文字颜色。
    数据类型:整数型
    语法:对象.文字色=整数型
    默认值:0(注:黑色)
    特征
    可读写
    设计器中可见
    说明
    注意：只有在格是非自由格时，才允许使用本属性。

##1 IGRFieldBox.GetFont = 获取字体
    获取字体 属性
    获取报表对象的缺省字体对象的引用。
    调用格式：
    〈字体〉对象．获取字体（）
    特征
    只读
    设计器中可见

##1 IGRFieldBox.ControlType = 部件框类型

##1 IGRFieldBox.GetParent = 获取父对象

##1 IGRFieldBox.Left = 左
    左 属性
    部件框的左端显示位置。
    数据类型:双精度小精型
    语法:对象.左=双精度小精型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的左端显示位置值，相对于父容器。

##1 IGRFieldBox.Top = 上
    上 属性
    部件框的顶端显示位置。
    数据类型:双精度小数型
    语法:对象.上=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的顶端显示位置值，相对于父容器。

##1 IGRFieldBox.Width = 宽度
    宽度 属性
    列的显示宽度。
    数据类型:双精度小数型
    语法:对象.宽度=双精度小数型
    特征
    可读写
    设计器中可见
    说明
    列的显示宽度，以报表使用的计量单位表示的输出宽度值。此属性代表列在设计时的宽度，当其输出时显示的宽度有可能与设计时的宽度不一致。例如，当明细网格的打印方法为列适应输出区域宽度，则列的宽度将按比例进行伸缩以刚好适应输出页面的输出区域宽度。

##1 IGRFieldBox.Height = 高度
    高度属性
    部件框的显示高度。
    数据类型:双精度小数型
    语法:对象.高度=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的显示高度值。

##1 IGRFieldBox.Anchor = 锚定
    锚定 属性
    指定部件框的哪些边缘锚定到其容器边缘。
    数据类型:整数型
    语法:对象.锚定=整数型(注:锚定方式枚举组合值)
    默认值:左边|上边
    特征
    可读写
    设计器中可见
    说明
    本属性值是 锚定方式枚举
    值的按位组合。默认值是左边和上边
    。
    请参见
    锚定方式枚举

##1 IGRFieldBox.Dock = 停靠
    停靠 属性
    指定部件框停靠到父容器的哪一个边缘。
    数据类型:整数型
    语法:对象.停靠=整数型(注:停靠方式枚举值)
    默认值:无
    特征
    可读写
    设计器中可见
    停靠方式枚举

##1 IGRFieldBox.Center = 居中
    居中 属性
    指定水平与垂直方向的居中对齐方式。
    数据类型:整数型
    语法:对象.居中=整数型(注:居中方式枚举值)
    默认值:无
    特征
    可读写
    设计器中可见
    说明
    指定部件框在容器中水平与垂直方向上的居中对齐方式。

##1 IGRFieldBox.BorderStyles = 边框模式
    边框模式属性
    边框线的显示方式。
    数据类型:整数型(注:边框模式枚举值的组合)
    语法:对象.边框模式=整数型(边框模式枚举值)
    默认值:0
    特征:可读写
    设计器中可见
    说明
    本属性值是边框模式枚举值的按位组合。默认值是 0，不显示任何边框。
    请参见
    边框模式枚举

##1 IGRFieldBox.BorderWidth = 边框宽度
    边框宽度 属性
    边框线的宽度。
    数据类型:整数型
    语法:对象.边框宽度=整数型
    默认值:1
    特征
    可读写
    设计器中可见
    说明
    以屏幕像素作为计量单位，默认是 1。

##1 IGRFieldBox.BorderColor = 边框色
    边框色 属性
    边框线的显示颜色。
    数据类型:整数型
    语法:对象.边框色=整数型
    默认值:黑色
    特征
    可读写
    设计器中可见

##1 IGRFieldBox.AlignColumn = 对齐列
    对齐列属性
    指定部件框水平位置对齐到明细网格列的名称。
    数据类型:文本型
    语法:对象.对齐列=文本型(注:列名称)
    特征:可读写
    设计器中可见
    说明
    如果本属性值不为空时，配合 对齐列方式属性一起指定部件框与列的对齐方式，部件框的水平位置将跟随列位置的改变而改变。
    注意：只有当部件框在分组头与分组尾中时才能使用本属性。

##1 IGRFieldBox.AlignColumnEx = 对齐列扩展
    对齐列扩展 属性
    指定部件框水平位置对齐到明细网格另一个列的名称。
    数据类型:文本型
    语法:对象.对齐列扩展=文本型(注:列名称)
    特征
    可读写
    设计器中可见
    说明
    如果本属性值不为空时，配合 对齐列方式
    属性一起指定部件框与列的对齐方式，部件框的水平位置将跟随列位置的改变而改变。
    对齐列扩展 与 对齐列可以指定到不同的列，这样部件框就可以跨列对齐到不同的列。如果对齐列扩展与 对齐列 只设定了其中之一的，则部件框只对齐到一个列。如果两者都没有设定，则部件框不会对齐到任何列。

##1 IGRFieldBox.AlignColumnSide = 对齐列方式
    对齐列方式属性
    部件框对齐到明细网格列的方式。
    数据类型:整数型
    语法:对象.对齐列方式=整数型(注:对齐列方式枚举)
    默认值:#对齐列方式枚举.左右两端
    特征
    可读写
    设计器中可见
    说明
    注意：只有当部件框在分组头与分组尾中时才能使用本属性。
    请参见
    对齐列方式枚举

##1 IGRFieldBox.BackStyle = 背景模式
    背景模式 属性
    部件框显示时背景的填充方式。
    数据类型:整数型
    语法:对象.背景模式=整数型(注:背景模式枚举值)
    默认值:#背景模式枚举.透明
    特征:可读写
    设计器中可见
    请参见
    背景模式枚举

##1 IGRFieldBox.PrintType = 打印类别
    打印类别 属性
    部件框的打印输出方式。
    数据类型:整数型
    语法:对象.打印类别=整数型(注:打印类型枚举值)
    特征
    可读写
    设计器中可见
    仅用于打印
    请参见
    打印类别枚举

##1 IGRFieldBox.Visible = 可见性
    可见性属性
    指定列在输出时是否可见。
    数据类型:逻辑型
    语法:对象.可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为假，则本列在屏幕显示与打印生成时将被忽略掉。

##1 IGRFieldBox.Cursor = 光标
    光标属性
    指定在查询显示报表时，在本内容行上显示的鼠标光标。
    数据类型:整数型
    语法:对象.光标=整数型(注:显示光标枚举值)
    默认值:默认光标
    特征
    可读写
    设计器中可见

##1 IGRFieldBox.GetAsTextBox = 获取为文字框

##1 IGRFieldBox.GetAsChart = 获取为图表

##1 IGRFieldBox.GetAsStaticBox = 获取为静态文字框

##1 IGRFieldBox.GetAsShapeBox = 获取为图形框

##1 IGRFieldBox.GetAsSystemVarBox = 获取为系统变量框

##1 IGRFieldBox.GetAsFieldBox = 获取为字段框

##1 IGRFieldBox.GetAsSummaryBox = 获取为统计框

##1 IGRFieldBox.GetAsPictureBox = 获取为图像框

##1 IGRFieldBox.GetAsRichTextBox = 获取为RTF文字框

##1 IGRFieldBox.GetAsMemoBox = 获取为综合文字框

##1 IGRFieldBox.GetAsSubReport = 获取为子报表

##1 IGRFieldBox.GetAsLine = 获取为线段

##1 IGRFieldBox.GetAsBarcode = 获取为条码


##1 IGRFieldBox.SetBounds = 设置边界
    设置边界方法
    设置部件框在其父容器中的边界位置。
    调用格式：〈无返回值〉对象．设置边界（双精度小数型左边，双精度小数型顶边，双精度小数型
    右边，双精度小数型 底边)

##1 IGRFieldBox.BringToFront = 显示到前端
    显示到前端方法
    将部件框带到Z顺序的前面。
    调用格式：
    〈无返回值〉对象．显示到前端（）
    说明
    此部件框将在同一容器中的其它部件框之后输出显示，如果前面输出的部件框与其在位置上有重叠，则此部件框将覆盖前面输出的部件框。

##1 IGRFieldBox.SendToBack = 显示到后端
    显示到后端方法
    将部件框发送到Z顺序的后面。
    调用格式：
    〈无返回值〉对象．显示到后端（）
    说明
    此部件框将在同一容器中的其它部件框之前输出显示，如果后输出的部件框与其在位置上有重叠，则后输出的部件框将覆盖此部件框。

##0 IGRFieldBox.LoadCursorFile = 
方法 LoadCursor

##1 IGRFieldBox.WordWrap = 文字绕行
    文字绕行属性
    指定文字是否折行输出的标志。
    数据类型:逻辑型
    语法:对象.文字绕行=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为真，文字可以折行输出，否则不论文字多少，只在一行中输出文字。
    注意：只有在格不是自由格时，才允许使用本属性。

##1 IGRFieldBox.EndEllipsis = 省略点文字

##1 IGRFieldBox.CanGrow = 可伸展
    可伸展属性
    指定内容格在运行时是否可以伸展高度。
    数据类型:逻辑型
    语法:对象.可伸展=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRFieldBox.CanShrink = 可收缩
属性 CanShrink
    IGRFieldBox.CanShrink
    可收缩 属性
    指定内容格在运行时是否可以收缩高度。
    数据类型:逻辑型
    语法:对象.可收缩=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRFieldBox.ShrinkFontToFit = 缩小适应
    缩小适应属性
    在文字框的显示区域不能完整显示出文字内容时，指定是否自动缩小文字大小让文字完整显示出来。
    语法:对象.缩小适应=逻辑型
    默认值
    假
    特征
    可读写
    设计器中可见
    仅用于打印

##1 IGRFieldBox.TextAlign = 文字对齐方式
    文字对齐方式 属性
    指定显示文本的文字对齐方式。
    数据类型:整数型
    语法:对象.文字对齐方式=整数型(注:文字对齐方式枚举值)
    特征
    可读写
    设计器中可见
    说明
    注意：只有在格不是自由格时，才允许使用本属性。

##1 IGRFieldBox.DisplayText = 显示文字
    显示文字 属性
    获取或设置部件框的输出显示文本。
    语法:对象.显示文字=文本型
    特征
    可读写
    仅运行时可用
    说明
    获取或设置部件框的输出显示文本。只有在运行时才能使用本属性，当不能由Grid++Report根据字段的值自动产生显示文本时，在请求字段显示文字事件中为字段的显示文字属性赋一个新的显示文本。
    例如当需要将金额的负数值显示为红字时，需要将数字显示文字前面的负号去掉，就必须响应请求字段显示文字事件并使用显示文字属性。
    请参见

##1 IGRFieldBox.ShowMoneyLabel = 显示金额标签

##1 IGRFieldBox.ShowMoneyLine = 显示金额线

##1 IGRFieldBox.GetDisplayTextScript = 显示文字脚本
    显示文字脚本 属性
    表示报表请求文字框显示文字事件对应的脚本语言代码。
    语法:对象.显示文字脚本=文本型
    特征
    可读写
    设计器中可见
    请参见
    文字框接口|
    报表.请求文字框显示文字事件

##1 IGRFieldBox.DataField = 数据字段
    数据字段 属性
    获取或设置关联字段对象的名称。
    语法:对象.数据字段=文本型
    特征
    可读写
    设计器中可见
    请参见
    字段框接口|
    字段接口

##1 IGRSummaryBox = 统计框
    统计框接口
    表示统计框。
    说明
    用来显示统计数据的部件框，在设计时设定某种统计函数，除计数（Count）函数外，其余统计函数都需要关联一个字段对象。在统计框中可以定义统计值的输出格式。统计框一般使用在分组头、分组尾中。有时为了统计全部记录的统计数据，可以将部件框使用在报表尾，报表头中。

##1 IGRSummaryBox.Tag = 标签
    标签 属性
    部件框的标识值。
    数据类型:整数型
    语法:对象.标签=整数型
    默认值:0
    特征
    可读写
    设计器中可见
    说明
    可以按自己意愿任意使用本属性，如可以将此属性作为对象的身份标识,相当于语言中各种组件的标记属性。

##1 IGRSummaryBox.Name = 名称
    名称属性
    指定单元格的名称标识。
    数据类型:文本型
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见
    说明
    注意：当为内容格或当为标题格而不是组标题格时，即格存在对应列，格的名称与列的名称保持一致。当改变格的名称也同时改变列的名称，反之改变列的名称也同时改变格的名称。

##1 IGRSummaryBox.BackColor = 背景色
    背景色 属性
    指定单元格的背景色。
    数据类型:整数型
    语法:对象.背景色=整数型
    特征
    可读写
    设计器中可见

##1 IGRSummaryBox.ForeColor = 文字色
    文字色属性
    指定单元格的输出文本的文字颜色。
    数据类型:整数型
    语法:对象.文字色=整数型
    默认值:0(注:黑色)
    特征
    可读写
    设计器中可见
    说明
    注意：只有在格是非自由格时，才允许使用本属性。

##1 IGRSummaryBox.GetFont = 获取字体
    获取字体 属性
    获取报表对象的缺省字体对象的引用。
    调用格式：
    〈字体〉对象．获取字体（）
    特征
    只读
    设计器中可见

##1 IGRSummaryBox.ControlType = 部件框类型

##1 IGRSummaryBox.GetParent = 获取父对象

##1 IGRSummaryBox.Left = 左
    左 属性
    部件框的左端显示位置。
    数据类型:双精度小精型
    语法:对象.左=双精度小精型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的左端显示位置值，相对于父容器。

##1 IGRSummaryBox.Top = 上
    上 属性
    部件框的顶端显示位置。
    数据类型:双精度小数型
    语法:对象.上=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的顶端显示位置值，相对于父容器。

##1 IGRSummaryBox.Width = 宽度
    宽度 属性
    列的显示宽度。
    数据类型:双精度小数型
    语法:对象.宽度=双精度小数型
    特征
    可读写
    设计器中可见
    说明
    列的显示宽度，以报表使用的计量单位表示的输出宽度值。此属性代表列在设计时的宽度，当其输出时显示的宽度有可能与设计时的宽度不一致。例如，当明细网格的打印方法为列适应输出区域宽度，则列的宽度将按比例进行伸缩以刚好适应输出页面的输出区域宽度。

##1 IGRSummaryBox.Height = 高度
    高度属性
    部件框的显示高度。
    数据类型:双精度小数型
    语法:对象.高度=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的显示高度值。

##1 IGRSummaryBox.Anchor = 锚定
    锚定 属性
    指定部件框的哪些边缘锚定到其容器边缘。
    数据类型:整数型
    语法:对象.锚定=整数型(注:锚定方式枚举组合值)
    默认值:左边|上边
    特征
    可读写
    设计器中可见
    说明
    本属性值是 锚定方式枚举
    值的按位组合。默认值是左边和上边
    。
    请参见
    锚定方式枚举

##1 IGRSummaryBox.Dock = 停靠
    停靠 属性
    指定部件框停靠到父容器的哪一个边缘。
    数据类型:整数型
    语法:对象.停靠=整数型(注:停靠方式枚举值)
    默认值:无
    特征
    可读写
    设计器中可见
    停靠方式枚举

##1 IGRSummaryBox.Center = 居中
    居中 属性
    指定水平与垂直方向的居中对齐方式。
    数据类型:整数型
    语法:对象.居中=整数型(注:居中方式枚举值)
    默认值:无
    特征
    可读写
    设计器中可见
    说明
    指定部件框在容器中水平与垂直方向上的居中对齐方式。

##1 IGRSummaryBox.BorderStyles = 边框模式
    边框模式属性
    边框线的显示方式。
    数据类型:整数型(注:边框模式枚举值的组合)
    语法:对象.边框模式=整数型(边框模式枚举值)
    默认值:0
    特征:可读写
    设计器中可见
    说明
    本属性值是边框模式枚举值的按位组合。默认值是 0，不显示任何边框。
    请参见
    边框模式枚举

##1 IGRSummaryBox.BorderWidth = 边框宽度
    边框宽度 属性
    边框线的宽度。
    数据类型:整数型
    语法:对象.边框宽度=整数型
    默认值:1
    特征
    可读写
    设计器中可见
    说明
    以屏幕像素作为计量单位，默认是 1。

##1 IGRSummaryBox.BorderColor = 边框色
    边框色 属性
    边框线的显示颜色。
    数据类型:整数型
    语法:对象.边框色=整数型
    默认值:黑色
    特征
    可读写
    设计器中可见

##1 IGRSummaryBox.AlignColumn = 对齐列
    对齐列属性
    指定部件框水平位置对齐到明细网格列的名称。
    数据类型:文本型
    语法:对象.对齐列=文本型(注:列名称)
    特征:可读写
    设计器中可见
    说明
    如果本属性值不为空时，配合 对齐列方式属性一起指定部件框与列的对齐方式，部件框的水平位置将跟随列位置的改变而改变。
    注意：只有当部件框在分组头与分组尾中时才能使用本属性。

##1 IGRSummaryBox.AlignColumnEx = 对齐列扩展
    对齐列扩展 属性
    指定部件框水平位置对齐到明细网格另一个列的名称。
    数据类型:文本型
    语法:对象.对齐列扩展=文本型(注:列名称)
    特征
    可读写
    设计器中可见
    说明
    如果本属性值不为空时，配合 对齐列方式
    属性一起指定部件框与列的对齐方式，部件框的水平位置将跟随列位置的改变而改变。
    对齐列扩展 与 对齐列可以指定到不同的列，这样部件框就可以跨列对齐到不同的列。如果 对齐列扩展与 对齐列 只设定了其中之一的，则部件框只对齐到一个列。如果两者都没有设定，则部件框不会对齐到任何列。

##1 IGRSummaryBox.AlignColumnSide = 对齐列方式
    对齐列方式属性
    部件框对齐到明细网格列的方式。
    数据类型:整数型
    语法:对象.对齐列方式=整数型(注:对齐列方式枚举)
    默认值:#对齐列方式枚举.左右两端
    特征
    可读写
    设计器中可见
    说明
    注意：只有当部件框在分组头与分组尾中时才能使用本属性。
    请参见
    对齐列方式枚举

##1 IGRSummaryBox.BackStyle = 背景模式
    背景模式 属性
    部件框显示时背景的填充方式。
    数据类型:整数型
    语法:对象.背景模式=整数型(注:背景模式枚举值)
    默认值:#背景模式枚举.透明
    特征:可读写
    设计器中可见
    请参见
    背景模式枚举

##1 IGRSummaryBox.PrintType = 打印类别
    部件框的打印输出方式。
    数据类型:整数型
    语法:对象.打印类别=整数型(注:打印类型枚举值)
    特征
    可读写
    设计器中可见
    仅用于打印
    请参见
    打印类别枚举

##1 IGRSummaryBox.Visible = 可见性
    可见性属性
    指定列在输出时是否可见。
    数据类型:逻辑型
    语法:对象.可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为假，则本列在屏幕显示与打印生成时将被忽略掉。

##1 IGRSummaryBox.Cursor = 光标
    光标属性
    指定在查询显示报表时，在本内容行上显示的鼠标光标。
    数据类型:整数型
    语法:对象.光标=整数型(注:显示光标枚举值)
    默认值:默认光标
    特征
    可读写
    设计器中可见

##1 IGRSummaryBox.GetAsTextBox = 获取为文字框

##1 IGRSummaryBox.GetAsChart = 获取为图表

##1 IGRSummaryBox.GetAsStaticBox = 获取为静态文字框

##1 IGRSummaryBox.GetAsShapeBox = 获取为图形框

##1 IGRSummaryBox.GetAsSystemVarBox = 获取为系统变量框

##1 IGRSummaryBox.GetAsFieldBox = 获取为字段框

##1 IGRSummaryBox.GetAsSummaryBox = 获取为统计框

##1 IGRSummaryBox.GetAsPictureBox = 获取为图像框

##1 IGRSummaryBox.GetAsRichTextBox = 获取为RTF文字框

##1 IGRSummaryBox.GetAsMemoBox = 获取为综合文字框

##1 IGRSummaryBox.GetAsSubReport = 获取为子报表

##1 IGRSummaryBox.GetAsLine = 获取为线段

##1 IGRSummaryBox.GetAsBarcode = 获取为条码


##1 IGRSummaryBox.SetBounds = 设置边界
    设置边界方法
    设置部件框在其父容器中的边界位置。
    调用格式：〈无返回值〉对象．设置边界（双精度小数型左边，双精度小数型顶边，双精度小数型
    右边，双精度小数型 底边)

##1 IGRSummaryBox.BringToFront = 显示到前端
    显示到前端方法
    将部件框带到Z顺序的前面。
    调用格式：
    〈无返回值〉对象．显示到前端（）
    说明
    此部件框将在同一容器中的其它部件框之后输出显示，如果前面输出的部件框与其在位置上有重叠，则此部件框将覆盖前面输出的部件框。

##1 IGRSummaryBox.SendToBack = 显示到后端
    显示到后端方法
    将部件框发送到Z顺序的后面。
    调用格式：
    〈无返回值〉对象．显示到后端（）
    说明
    此部件框将在同一容器中的其它部件框之前输出显示，如果后输出的部件框与其在位置上有重叠，则后输出的部件框将覆盖此部件框。

##0 IGRSummaryBox.LoadCursorFile = 
方法 LoadCursor

##1 IGRSummaryBox.WordWrap = 文字绕行
    文字绕行属性
    指定文字是否折行输出的标志。
    数据类型:逻辑型
    语法:对象.文字绕行=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为真，文字可以折行输出，否则不论文字多少，只在一行中输出文字。
    注意：只有在格不是自由格时，才允许使用本属性。

##1 IGRSummaryBox.EndEllipsis = 省略点文字
属性 EndEllipsis

##1 IGRSummaryBox.CanGrow = 可伸展
    可伸展属性
    指定内容格在运行时是否可以伸展高度。
    数据类型:逻辑型
    语法:对象.可伸展=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRSummaryBox.CanShrink = 可收缩
    可收缩 属性
    指定内容格在运行时是否可以收缩高度。
    数据类型:逻辑型
    语法:对象.可收缩=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRSummaryBox.ShrinkFontToFit = 缩小适应
    缩小适应属性
    在文字框的显示区域不能完整显示出文字内容时，指定是否自动缩小文字大小让文字完整显示出来。
    语法:对象.缩小适应=逻辑型
    默认值
    假
    特征
    可读写
    设计器中可见
    仅用于打印

##1 IGRSummaryBox.TextAlign = 文字对齐方式
    文字对齐方式 属性
    指定显示文本的文字对齐方式。
    数据类型:整数型
    语法:对象.文字对齐方式=整数型(注:文字对齐方式枚举值)
    特征
    可读写
    设计器中可见
    说明
    注意：只有在格不是自由格时，才允许使用本属性。

##1 IGRSummaryBox.DisplayText = 显示文字
    显示文字 属性
    获取或设置部件框的输出显示文本。
    语法:对象.显示文字=文本型
    特征
    可读写
    仅运行时可用
    说明
    获取或设置部件框的输出显示文本。只有在运行时才能使用本属性，当不能由Grid++Report根据字段的值自动产生显示文本时，在请求字段显示文字事件中为字段的显示文字属性赋一个新的显示文本。
    例如当需要将金额的负数值显示为红字时，需要将数字显示文字前面的负号去掉，就必须响应请求字段显示文字事件并使用显示文字属性。
    请参见

##1 IGRSummaryBox.ShowMoneyLabel = 显示金额标签

##1 IGRSummaryBox.ShowMoneyLine = 显示金额线

##1 IGRSummaryBox.GetDisplayTextScript = 显示文字脚本
    显示文字脚本 属性
    表示报表请求文字框显示文字事件对应的脚本语言代码。
    语法:对象.显示文字脚本=文本型
    特征
    可读写
    设计器中可见
    请参见
    文字框接口| 报表.请求文字框显示文字事件

##1 IGRSummaryBox.SummaryFun = 统计函数
    统计函数属性
    指定应用的统计函数。
    语法:对象.统计函数=整数型(统计函数枚举值)
    默认值:合计
    特征
    可读写

    统计函数 枚举
    指定统计部件框应用的统计函数。

    成员名称		    说明
    平均		    统计某个字段的平均值。
    数目		    统计明细记录的个数。
    最大值		    找出某个字段的最大值。
    最小值		    找出某个字段的最小值。
    合计		    统计某个字段的合计值。

##1 IGRSummaryBox.DataField = 数据字段
    数据字段属性
    关联的数据字段对象名称。
    语法:对象.数据字段=文本型
    特征
    可读写

##1 IGRSummaryBox.Format = 格式串
    统计值生成显示文字所应用的格式串。
    BSTR Format
    特征
    可读写
    设计器中可见
    请参见
    IGRSummaryBox接口|IGRSummaryBox成员|
    属性特征说明

##1 IGRSummaryBox.Value = 值
    再生成过程中，统计部件框的当前统计值。
    FLOAT Value
    特征
    可读写
    设计器中可见
    仅运行时可用
    请参见
    IGRSummaryBox接口|IGRSummaryBox成员|
    属性特征说明

##0 GRSummaryFun = 统计函数枚举


##1 tagGRSummaryFun = 统计函数枚举


##1 tagGRSummaryFun.grsfSum = 合计


##1 tagGRSummaryFun.grsfAvg = 平均


##1 tagGRSummaryFun.grsfCount = 数目
tagGRSummaryFun.grsfCount
    数目属性
    指示拥有列的个数。
    特征
    只读

##1 tagGRSummaryFun.grsfMin = 最小值


##1 tagGRSummaryFun.grsfMax = 最大值


##1 IGRPictureBox = 图像框
    图像框接口
    表示图像部件框。
    说明
    用来显示各种类型的图像数据的部件框，图像数据可以直接保存在报表模板文件中，也可以在运行时从磁盘文件、二进制字段和内存中载入。

##1 IGRPictureBox.Tag = 标签
    标签 属性
    部件框的标识值。
    数据类型:整数型
    语法:对象.标签=整数型
    默认值:0
    特征
    可读写
    设计器中可见
    说明
    可以按自己意愿任意使用本属性，如可以将此属性作为对象的身份标识,相当于语言中各种组件的标记属性。

##1 IGRPictureBox.Name = 名称
    名称属性
    指定单元格的名称标识。
    数据类型:文本型
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见
    说明
    注意：当为内容格或当为标题格而不是组标题格时，即格存在对应列，格的名称与列的名称保持一致。当改变格的名称也同时改变列的名称，反之改变列的名称也同时改变格的名称。

##1 IGRPictureBox.BackColor = 背景色
    背景色 属性
    指定单元格的背景色。
    数据类型:整数型
    语法:对象.背景色=整数型
    特征
    可读写
    设计器中可见

##1 IGRPictureBox.ForeColor = 文字色
    文字色属性
    指定单元格的输出文本的文字颜色。
    数据类型:整数型
    语法:对象.文字色=整数型
    默认值:0(注:黑色)
    特征
    可读写
    设计器中可见
    说明
    注意：只有在格是非自由格时，才允许使用本属性。

##1 IGRPictureBox.GetFont = 获取字体
    获取字体 属性
    获取报表对象的缺省字体对象的引用。
    调用格式：
    〈字体〉对象．获取字体（）
    特征
    只读
    设计器中可见

##1 IGRPictureBox.ControlType = 部件框类型

##1 IGRPictureBox.GetParent = 获取父对象

##1 IGRPictureBox.Left = 左
    左 属性
    部件框的左端显示位置。
    数据类型:双精度小精型
    语法:对象.左=双精度小精型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的左端显示位置值，相对于父容器。

##1 IGRPictureBox.Top = 上
    上 属性
    部件框的顶端显示位置。
    数据类型:双精度小数型
    语法:对象.上=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的顶端显示位置值，相对于父容器。

##1 IGRPictureBox.Width = 宽度
    宽度 属性
    列的显示宽度。
    数据类型:双精度小数型
    语法:对象.宽度=双精度小数型
    特征
    可读写
    设计器中可见
    说明
    列的显示宽度，以报表使用的计量单位表示的输出宽度值。此属性代表列在设计时的宽度，当其输出时显示的宽度有可能与设计时的宽度不一致。例如，当明细网格的打印方法为列适应输出区域宽度，则列的宽度将按比例进行伸缩以刚好适应输出页面的输出区域宽度。

##1 IGRPictureBox.Height = 高度
    高度属性
    部件框的显示高度。
    数据类型:双精度小数型
    语法:对象.高度=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的显示高度值。

##1 IGRPictureBox.Anchor = 锚定
    锚定 属性
    指定部件框的哪些边缘锚定到其容器边缘。
    数据类型:整数型
    语法:对象.锚定=整数型(注:锚定方式枚举组合值)
    默认值:左边|上边
    特征
    可读写
    设计器中可见
    说明
    本属性值是 锚定方式枚举
    值的按位组合。默认值是左边和上边
    。
    请参见
    锚定方式枚举

##1 IGRPictureBox.Dock = 停靠
    停靠 属性
    指定部件框停靠到父容器的哪一个边缘。
    数据类型:整数型
    语法:对象.停靠=整数型(注:停靠方式枚举值)
    默认值:无
    特征
    可读写
    设计器中可见
    停靠方式枚举

##1 IGRPictureBox.Center = 居中
    居中 属性
    指定水平与垂直方向的居中对齐方式。
    数据类型:整数型
    语法:对象.居中=整数型(注:居中方式枚举值)
    默认值:无
    特征
    可读写
    设计器中可见
    说明
    指定部件框在容器中水平与垂直方向上的居中对齐方式。

##1 IGRPictureBox.BorderStyles = 边框模式
    边框模式属性
    边框线的显示方式。
    数据类型:整数型(注:边框模式枚举值的组合)
    语法:对象.边框模式=整数型(边框模式枚举值)
    默认值:0
    特征:可读写
    设计器中可见
    说明
    本属性值是边框模式枚举值的按位组合。默认值是 0，不显示任何边框。
    请参见
    边框模式枚举

##1 IGRPictureBox.BorderWidth = 边框宽度
    边框宽度 属性
    边框线的宽度。
    数据类型:整数型
    语法:对象.边框宽度=整数型
    默认值:1
    特征
    可读写
    设计器中可见
    说明
    以屏幕像素作为计量单位，默认是 1。

##1 IGRPictureBox.BorderColor = 边框色
    边框色 属性
    边框线的显示颜色。
    数据类型:整数型
    语法:对象.边框色=整数型
    默认值:黑色
    特征
    可读写
    设计器中可见

##1 IGRPictureBox.AlignColumn = 对齐列
    对齐列属性
    指定部件框水平位置对齐到明细网格列的名称。
    数据类型:文本型
    语法:对象.对齐列=文本型(注:列名称)
    特征:可读写
    设计器中可见
    说明
    如果本属性值不为空时，配合 对齐列方式属性一起指定部件框与列的对齐方式，部件框的水平位置将跟随列位置的改变而改变。
    注意：只有当部件框在分组头与分组尾中时才能使用本属性。

##1 IGRPictureBox.AlignColumnEx = 对齐列扩展
    对齐列扩展 属性
    指定部件框水平位置对齐到明细网格另一个列的名称。
    数据类型:文本型
    语法:对象.对齐列扩展=文本型(注:列名称)
    特征
    可读写
    设计器中可见
    说明
    如果本属性值不为空时，配合 对齐列方式
    属性一起指定部件框与列的对齐方式，部件框的水平位置将跟随列位置的改变而改变。
    对齐列扩展与 对齐列可以指定到不同的列，这样部件框就可以跨列对齐到不同的列。如果对齐列扩展与 对齐列 只设定了其中之一的，则部件框只对齐到一个列。如果两者都没有设定，则部件框不会对齐到任何列。

##1 IGRPictureBox.AlignColumnSide = 对齐列方式
    对齐列方式属性
    部件框对齐到明细网格列的方式。
    数据类型:整数型
    语法:对象.对齐列方式=整数型(注:对齐列方式枚举)
    默认值:#对齐列方式枚举.左右两端
    特征
    可读写
    设计器中可见
    说明
    注意：只有当部件框在分组头与分组尾中时才能使用本属性。
    请参见
    对齐列方式枚举

##1 IGRPictureBox.BackStyle = 背景模式
    背景模式 属性
    部件框显示时背景的填充方式。
    数据类型:整数型
    语法:对象.背景模式=整数型(注:背景模式枚举值)
    默认值:#背景模式枚举.透明
    特征:可读写
    设计器中可见
    请参见
    背景模式枚举

##1 IGRPictureBox.PrintType = 打印类别
    打印类别 属性
    部件框的打印输出方式。
    数据类型:整数型
    语法:对象.打印类别=整数型(注:打印类型枚举值)
    特征
    可读写
    设计器中可见
    仅用于打印
    请参见
    打印类别枚举

##1 IGRPictureBox.Visible = 可见性
    可见性属性
    指定列在输出时是否可见。
    数据类型:逻辑型
    语法:对象.可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为假，则本列在屏幕显示与打印生成时将被忽略掉。

##1 IGRPictureBox.Cursor = 光标
    光标属性
    指定在查询显示报表时，在本内容行上显示的鼠标光标。
    数据类型:整数型
    语法:对象.光标=整数型(注:显示光标枚举值)
    默认值:默认光标
    特征
    可读写
    设计器中可见

##1 IGRPictureBox.GetAsTextBox = 获取为文字框

##1 IGRPictureBox.GetAsChart = 获取为图表

##1 IGRPictureBox.GetAsStaticBox = 获取为静态文字框

##1 IGRPictureBox.GetAsShapeBox = 获取为图形框

##1 IGRPictureBox.GetAsSystemVarBox = 获取为系统变量框

##1 IGRPictureBox.GetAsFieldBox = 获取为字段框

##1 IGRPictureBox.GetAsSummaryBox = 获取为统计框

##1 IGRPictureBox.GetAsPictureBox = 获取为图像框

##1 IGRPictureBox.GetAsRichTextBox = 获取为RTF文字框

##1 IGRPictureBox.GetAsMemoBox = 获取为综合文字框

##1 IGRPictureBox.GetAsSubReport = 获取为子报表

##1 IGRPictureBox.GetAsLine = 获取为线段

##1 IGRPictureBox.GetAsBarcode = 获取为条码

##1 IGRPictureBox.SetBounds = 设置边界
    设置边界方法
    设置部件框在其父容器中的边界位置。
    调用格式：〈无返回值〉对象．设置边界（双精度小数型左边，双精度小数型顶边，双精度小数型
    右边，双精度小数型 底边)

##1 IGRPictureBox.BringToFront = 显示到前端
    显示到前端方法
    将部件框带到Z顺序的前面。
    调用格式：
    〈无返回值〉对象．显示到前端（）
    说明
    此部件框将在同一容器中的其它部件框之后输出显示，如果前面输出的部件框与其在位置上有重叠，则此部件框将覆盖前面输出的部件框。

##1 IGRPictureBox.SendToBack = 显示到后端
    显示到后端方法
    将部件框发送到Z顺序的后面。
    调用格式：
    〈无返回值〉对象．显示到后端（）
    说明
    此部件框将在同一容器中的其它部件框之前输出显示，如果后输出的部件框与其在位置上有重叠，则后输出的部件框将覆盖此部件框。

##0 IGRPictureBox.LoadCursorFile = 
方法 LoadCursor

##1 IGRPictureBox.Alignment = 对齐方式
    指定图像在图像框中的显示对齐方式。
    GRPictureAlignmentAlignment
    默认值
    grpaCenter
    特征
    可读写
    设计器中可见
    请参见

##1 IGRPictureBox.SizeMode = 缩放方式
    缩放方式属性
    指定图像在图像框中显示时的伸缩方式。
    语法:对象.缩放方式=整数型(图像缩放方式枚举值)
    默认值 伸缩
    特征
    可读写
    设计器中可见

##1 IGRPictureBox.DataField = 数据字段
    数据字段属性
    关联字段对象的名称。
    语法:对象.数据字段=文本型
    特征
    可读写
    设计器中可见

##1 IGRPictureBox.GetPicture = 获取图像

##1 IGRPictureBox.ImageIndex = 图像序号
    图像序号属性
    指定图像框关联图像集合中某个图像的序号。
    语法:对象.图像序号=整数型
    默认值  0
    特征
    可读写
    设计器中可见
    说明
    图像的序号从1开始，0表示不关联。Grid++Report在报表引擎中定义了一些系统内建图像，其图像序号通过枚举系统图像的枚举项来指定，也可以通过设定本属性为某个枚举项的值来关联一个系统图像。

##1 IGRPictureBox.LoadFromFile = 从文件加载
    从文件加载方法
    运行时从磁盘文件中载入图像文件。
    调用格式：〈无返回值〉对象．从文件加载（文本型文件名）
    参数:载入图像文件的路径与文件名。
    说明
    载入图像文件的时机:
    1.  如果图像框位于报表头、报表尾、页眉与页脚中，应在报表主对象的 初始化事件响应函数中执行载入文件。
    2.  如果图像框位于明细网格的内容格中，应在报表主对象的
    处理记录事件响应函数中执行载入文件。
    3.  如果图像框位于明细网格的分组头或分组尾中，应在报表主对象的开始分组或分组结束事件响应函数中执行载入文件。

##1 IGRPictureBox.AttachSystemImage = 链接系统图像
    关联一个系统图像到本图像框,从而在本图像框中显示一个系统图像。
    void AttachSystemImage(GRSystemImageSystemImage);
    参数
    GRSystemImage SystemImage
    指定系统图像。

##1 IGRPictureBox.SetPicture = 设置图像

##0 GRPictureAlignment = 图像对齐方式枚举
    图像对齐方式枚举
    指定图像框中图像显示的对齐方式。

    成员名称		    说明
    左下角		    图像的左下角紧靠图像框的左下角显示。
    右下角		    图像的右下角紧靠图像框的右下角显示。
    居中		    图像居中显示在图像框中。
    左上角		    图像的左上角紧靠图像框的左上角显示。
    右上角		    图像的右上角紧靠图像框的右上角显示。

    请参见

##1 tagGRPictureAlignment = 图像对齐方式枚举
tagGRPictureAlignment
    图像对齐方式枚举
    指定图像框中图像显示的对齐方式。

    成员名称		    说明
    左下角		    图像的左下角紧靠图像框的左下角显示。
    右下角		    图像的右下角紧靠图像框的右下角显示。
    居中		    图像居中显示在图像框中。
    左上角		    图像的左上角紧靠图像框的左上角显示。
    右上角		    图像的右上角紧靠图像框的右上角显示。

    请参见

##1 tagGRPictureAlignment.grpaTopLeft = 左上角


##1 tagGRPictureAlignment.grpaTopRight = 右上角


##1 tagGRPictureAlignment.grpaCenter = 居中
    居中 属性
    指定水平与垂直方向的居中对齐方式。
    数据类型:整数型
    语法:对象.居中=整数型(注:居中方式枚举值)
    默认值:无
    特征
    可读写
    设计器中可见
    说明
    指定部件框在容器中水平与垂直方向上的居中对齐方式。

##1 tagGRPictureAlignment.grpaBottomLeft = 左下角


##1 tagGRPictureAlignment.grpaBottomRight = 右下角


##0 GRPictureSizeMode = 图像缩放方式枚举
GRPictureSizeMode
    图像缩放方式枚举
    指定图像框中图像的显示缩放方式。

    成员名称		    说明
    剪裁		    图像不进行缩放，按原始尺寸显示。
    完整显示		    如果图像不能在图像框中完全显示，根据图像框的大小图像保持宽高比例伸缩至某一方向完全铺满。反之图像保持原始尺寸显示。
    伸缩铺满		    图像伸缩到完全显示到图像框中。
    伸缩		    根据图像框的大小图像保持宽高比例伸缩至某一方向完全铺满。

##1 tagGRPictureSizeMode = 图像缩放方式枚举
tagGRPictureSizeMode
    图像缩放方式枚举
    指定图像框中图像的显示缩放方式。

    成员名称		    说明
    剪裁		    图像不进行缩放，按原始尺寸显示。
    完整显示		    如果图像不能在图像框中完全显示，根据图像框的大小图像保持宽高比例伸缩至某一方向完全铺满。反之图像保持原始尺寸显示。
    伸缩铺满		    图像伸缩到完全显示到图像框中。
    伸缩		    根据图像框的大小图像保持宽高比例伸缩至某一方向完全铺满。

##1 tagGRPictureSizeMode.grpsmClip = 剪裁


##1 tagGRPictureSizeMode.grpsmStretch = 伸缩铺满


##1 tagGRPictureSizeMode.grpsmZoom = 伸缩


##1 tagGRPictureSizeMode.grpsmEnsureFullView = 完整显示


##0 GRSystemImage = 系统图像枚举
GRSystemImage
    系统图像枚举
    指定报表引擎中的系统内建图像。

    成员名称		    说明
    选中3D		    值为-3，3D形式的选中标志。
    未选中3D		    值为-4，3D形式的非选中标志。
    肯定		    值为-5，肯定标志。
    向下箭头		    值为-7，朝下箭头标志。
    向上箭头		    值为-8，朝上箭头标志。
    选中		    值为-1，选中标志。
    否定		    值为-6，否定标志。
    未选中		    值为-2，非选中标志。
    说明
    Grid++Report 在报表引擎中定义了一些系统内建图像。图片框可以将其图像序号指定为某个枚举项的值来关联某个系统图像，从而在图像框中显示系统图像。另也可以调用图像框接口的链接系统图像()方法来关联系统图像。

##1 tagGRSystemImage = 系统图像枚举
tagGRSystemImage
    系统图像枚举
    指定报表引擎中的系统内建图像。

    成员名称		    说明
    选中3D		    值为-3，3D形式的选中标志。
    未选中3D		    值为-4，3D形式的非选中标志。
    肯定		    值为-5，肯定标志。
    向下箭头		    值为-7，朝下箭头标志。
    向上箭头		    值为-8，朝上箭头标志。
    选中		    值为-1，选中标志。
    否定		    值为-6，否定标志。
    未选中		    值为-2，非选中标志。
    说明
    Grid++Report 在报表引擎中定义了一些系统内建图像。图片框可以将其图像序号指定为某个枚举项的值来关联某个系统图像，从而在图像框中显示系统图像。另也可以调用图像框接口的链接系统图像()方法来关联系统图像。

##1 tagGRSystemImage.grsiChecked = 选中


##1 tagGRSystemImage.grsiUnchecked = 未选中


##1 tagGRSystemImage.grsi3DChecked = 选中3D


##1 tagGRSystemImage.grsi3DUnchecked = 未选中3D


##1 tagGRSystemImage.grsiAffirm = 肯定


##1 tagGRSystemImage.grsiNegative = 否定


##1 tagGRSystemImage.grsiArrowDown = 向下箭头


##1 tagGRSystemImage.grsiArrowUp = 向上箭头


##1 IGRRichTextBox = 丰富格式文字框
    丰富格式文字框接口
    表示RTF格式文本部件框。
    用来定义RTF格式文本部件框，RTF格式文本数据可以直接保存在报表模板文件中，也可以在运行时从磁盘文件、二进制字段和内存中载入。

##1 IGRRichTextBox.Tag = 标签
    标签 属性
    部件框的标识值。
    数据类型:整数型
    语法:对象.标签=整数型
    默认值:0
    特征
    可读写
    设计器中可见
    说明
    可以按自己意愿任意使用本属性，如可以将此属性作为对象的身份标识,相当于语言中各种组件的标记属性。

##1 IGRRichTextBox.Name = 名称
    名称属性
    指定单元格的名称标识。
    数据类型:文本型
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见
    说明
    注意：当为内容格或当为标题格而不是组标题格时，即格存在对应列，格的名称与列的名称保持一致。当改变格的名称也同时改变列的名称，反之改变列的名称也同时改变格的名称。

##1 IGRRichTextBox.BackColor = 背景色
    背景色 属性
    指定单元格的背景色。
    数据类型:整数型
    语法:对象.背景色=整数型
    特征
    可读写
    设计器中可见

##1 IGRRichTextBox.ForeColor = 文字色
    文字色属性
    指定单元格的输出文本的文字颜色。
    数据类型:整数型
    语法:对象.文字色=整数型
    默认值:0(注:黑色)
    特征
    可读写
    设计器中可见
    说明
    注意：只有在格是非自由格时，才允许使用本属性。

##1 IGRRichTextBox.GetFont = 获取字体
    获取字体 属性
    获取报表对象的缺省字体对象的引用。
    调用格式：
    〈字体〉对象．获取字体（）
    特征
    只读
    设计器中可见

##1 IGRRichTextBox.ControlType = 部件框类型

##1 IGRRichTextBox.GetParent = 获取父对象

##1 IGRRichTextBox.Left = 左
    左 属性
    部件框的左端显示位置。
    数据类型:双精度小精型
    语法:对象.左=双精度小精型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的左端显示位置值，相对于父容器。

##1 IGRRichTextBox.Top = 上
    上 属性
    部件框的顶端显示位置。
    数据类型:双精度小数型
    语法:对象.上=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的顶端显示位置值，相对于父容器。

##1 IGRRichTextBox.Width = 宽度
    宽度 属性
    列的显示宽度。
    数据类型:双精度小数型
    语法:对象.宽度=双精度小数型
    特征
    可读写
    设计器中可见
    说明
    列的显示宽度，以报表使用的计量单位表示的输出宽度值。此属性代表列在设计时的宽度，当其输出时显示的宽度有可能与设计时的宽度不一致。例如，当明细网格的打印方法为列适应输出区域宽度，则列的宽度将按比例进行伸缩以刚好适应输出页面的输出区域宽度。

##1 IGRRichTextBox.Height = 高度
    高度属性
    部件框的显示高度。
    数据类型:双精度小数型
    语法:对象.高度=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的显示高度值。

##1 IGRRichTextBox.Anchor = 锚定
    锚定 属性
    指定部件框的哪些边缘锚定到其容器边缘。
    数据类型:整数型
    语法:对象.锚定=整数型(注:锚定方式枚举组合值)
    默认值:左边|上边
    特征
    可读写
    设计器中可见
    说明
    本属性值是 锚定方式枚举
    值的按位组合。默认值是左边和上边
    。
    请参见
    锚定方式枚举

##1 IGRRichTextBox.Dock = 停靠
    停靠 属性
    指定部件框停靠到父容器的哪一个边缘。
    数据类型:整数型
    语法:对象.停靠=整数型(注:停靠方式枚举值)
    默认值:无
    特征
    可读写
    设计器中可见
    停靠方式枚举

##1 IGRRichTextBox.Center = 居中
    居中 属性
    指定水平与垂直方向的居中对齐方式。
    数据类型:整数型
    语法:对象.居中=整数型(注:居中方式枚举值)
    默认值:无
    特征
    可读写
    设计器中可见
    说明
    指定部件框在容器中水平与垂直方向上的居中对齐方式。

##1 IGRRichTextBox.BorderStyles = 边框模式
    边框模式属性
    边框线的显示方式。
    数据类型:整数型(注:边框模式枚举值的组合)
    语法:对象.边框模式=整数型(边框模式枚举值)
    默认值:0
    特征:可读写
    设计器中可见
    说明
    本属性值是边框模式枚举值的按位组合。默认值是0，不显示任何边框。
    请参见
    边框模式枚举

##1 IGRRichTextBox.BorderWidth = 边框宽度
    边框宽度 属性
    边框线的宽度。
    数据类型:整数型
    语法:对象.边框宽度=整数型
    默认值:1
    特征
    可读写
    设计器中可见
    说明
    以屏幕像素作为计量单位，默认是
    1。

##1 IGRRichTextBox.BorderColor = 边框色
    边框色 属性
    边框线的显示颜色。
    数据类型:整数型
    语法:对象.边框色=整数型
    默认值:黑色
    特征
    可读写
    设计器中可见

##1 IGRRichTextBox.AlignColumn = 对齐列
    对齐列属性
    指定部件框水平位置对齐到明细网格列的名称。
    数据类型:文本型
    语法:对象.对齐列=文本型(注:列名称)
    特征:可读写
    设计器中可见
    说明
    如果本属性值不为空时，配合 对齐列方式属性一起指定部件框与列的对齐方式，部件框的水平位置将跟随列位置的改变而改变。
    注意：只有当部件框在分组头与分组尾中时才能使用本属性。

##1 IGRRichTextBox.AlignColumnEx = 对齐列扩展
    对齐列扩展 属性
    指定部件框水平位置对齐到明细网格另一个列的名称。
    数据类型:文本型
    语法:对象.对齐列扩展=文本型(注:列名称)
    特征
    可读写
    设计器中可见
    说明
    如果本属性值不为空时，配合 对齐列方式属性一起指定部件框与列的对齐方式，部件框的水平位置将跟随列位置的改变而改变。
    对齐列扩展与对齐列可以指定到不同的列，这样部件框就可以跨列对齐到不同的列。如果对齐列扩展与对齐列只设定了其中之一的，则部件框只对齐到一个列。如果两者都没有设定，则部件框不会对齐到任何列。

##1 IGRRichTextBox.AlignColumnSide = 对齐列方式
    对齐列方式属性
    部件框对齐到明细网格列的方式。
    数据类型:整数型
    语法:对象.对齐列方式=整数型(注:对齐列方式枚举)
    默认值:#对齐列方式枚举.左右两端
    特征
    可读写
    设计器中可见
    说明
    注意：只有当部件框在分组头与分组尾中时才能使用本属性。
    请参见
    对齐列方式枚举

##1 IGRRichTextBox.BackStyle = 背景模式
    背景模式 属性
    部件框显示时背景的填充方式。
    数据类型:整数型
    语法:对象.背景模式=整数型(注:背景模式枚举值)
    默认值:#背景模式枚举.透明
    特征:可读写
    设计器中可见
    请参见
    背景模式枚举

##1 IGRRichTextBox.PrintType = 打印类别
    打印类别 属性
    部件框的打印输出方式。
    数据类型:整数型
    语法:对象.打印类别=整数型(注:打印类型枚举值)
    特征
    可读写
    设计器中可见
    仅用于打印
    请参见
    打印类别枚举

##1 IGRRichTextBox.Visible = 可见性
    可见性属性
    指定列在输出时是否可见。
    数据类型:逻辑型
    语法:对象.可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为假，则本列在屏幕显示与打印生成时将被忽略掉。

##1 IGRRichTextBox.Cursor = 光标
    光标属性
    指定在查询显示报表时，在本内容行上显示的鼠标光标。
    数据类型:整数型
    语法:对象.光标=整数型(注:显示光标枚举值)
    默认值:默认光标
    特征
    可读写
    设计器中可见

##1 IGRRichTextBox.GetAsTextBox = 获取为文字框

##1 IGRRichTextBox.GetAsChart = 获取为图表

##1 IGRRichTextBox.GetAsStaticBox = 获取为静态文字框

##1 IGRRichTextBox.GetAsShapeBox = 获取为图形框

##1 IGRRichTextBox.GetAsSystemVarBox = 获取为系统变量框

##1 IGRRichTextBox.GetAsFieldBox = 获取为字段框

##1 IGRRichTextBox.GetAsSummaryBox = 获取为统计框

##1 IGRRichTextBox.GetAsPictureBox = 获取为图像框

##1 IGRRichTextBox.GetAsRichTextBox = 获取为RTF文字框

##1 IGRRichTextBox.GetAsMemoBox = 获取为综合文字框

##1 IGRRichTextBox.GetAsSubReport = 获取为子报表

##1 IGRRichTextBox.GetAsLine = 获取为线段

##1 IGRRichTextBox.GetAsBarcode = 获取为条码


##1 IGRRichTextBox.SetBounds = 设置边界
    设置边界方法
    设置部件框在其父容器中的边界位置。
    调用格式：〈无返回值〉对象．设置边界（双精度小数型左边，双精度小数型顶边，双精度小数型
    右边，双精度小数型 底边)

##1 IGRRichTextBox.BringToFront = 显示到前端
    显示到前端方法
    将部件框带到Z顺序的前面。
    调用格式：
    〈无返回值〉对象．显示到前端（）
    说明
    此部件框将在同一容器中的其它部件框之后输出显示，如果前面输出的部件框与其在位置上有重叠，则此部件框将覆盖前面输出的部件框。

##1 IGRRichTextBox.SendToBack = 显示到后端
    显示到后端方法
    将部件框发送到Z顺序的后面。
    调用格式：
    〈无返回值〉对象．显示到后端（）
    说明
    此部件框将在同一容器中的其它部件框之前输出显示，如果后输出的部件框与其在位置上有重叠，则后输出的部件框将覆盖此部件框。

##0 IGRRichTextBox.LoadCursorFile = 
方法 LoadCursor

##1 IGRRichTextBox.CanGrow = 可伸展
    指示部件框高度在运行时是否可以伸展标志。
    VARIANT_BOOL CanGrow
    默认值   FALSE
    特征
    可读写
    设计器中可见
    说明
    如果本属性为真，报表运行时部件框的设计时高度不足以完整显示出拥有的RTF文本，则部件框的高足自动伸展到刚好能完整显示出拥有的RTF文本。


##1 IGRRichTextBox.CanShrink = 可收缩
    指示部件框的高度在运行时是否可以收缩标志。
    VARIANT_BOOL CanShrink
    默认值   FALSE
    特征
    可读写
    设计器中可见
    说明
    如果本属性为真，报表运行时部件框的设计时高度大于完整显示出拥有的RTF文本所需要的高度，则部件框的高度自动收缩到刚好能完整显示出拥有的RTF文本。
    请参见

##1 IGRRichTextBox.DataField = 数据字段
    数据字段属性
    关联字段对象的名称。
    语法:对象.数据字段=文本型
    号
    特征
    可读写
    设计器中可见

##1 IGRRichTextBox.RTF = 数据
    数据属性
    表示拥有RTF文本的数据。
    语法:对象.数据=文本型
    特征
    可读写
    设计器中可见

##1 IGRRichTextBox.LoadFromFile = 从文件加载
    运行时从磁盘文件中载入RTF格式文件。
    void LoadFromFile(BSTRPathFile);
    参数
    BSTR PathFile
    载入RTF文件的路径与文件名。
    说明
    载入RTF文件的时机:
    1.如果RTF文本框位于报表头、报表尾、页眉与页脚中，应在报表主对象的Initialize事件响应函数中执行载入文件。
    2.如果RTF文本框位于明细网格的内容格中，应在报表主对象的ProcessRecord事件响应函数中执行载入文件。
    3.如果RTF文本框位于明细网格的分组头或分组尾中，应在报表主对象的GroupBegin或GroupEnd事件响应函数中执行载入文件。

##1 IGRMemoBox = 综合文字框
    综合文字框接口
    最常用的文字部件框。可以在文字中包含数据域，数据域在运行时被替换为对应的对象或函数的值。另域可以进行算术四则运算。
    说明
    可以用来显示静态文本的部件框，一般在设计时设定要显示的文本，在输出显示时依原样输出。除了显示静态框文字之外，MemoBox更可以显示多种多样的同态内容，通过在文字中定义数据域，数据域在运行时被替换为对应的对象或函数的值。MemoBox的数据域可以关联字段、参数、文字类型部件框、统计函数与系统变量。多个值为数字类型的数据域可以进行数字四则运算。数据域可以设定其显示的格式化字符串，以便得到想要的显示文字。

##1 IGRMemoBox.Tag = 标签
    标签 属性
    部件框的标识值。
    数据类型:整数型
    语法:对象.标签=整数型
    默认值:0
    特征
    可读写
    设计器中可见
    说明
    可以按自己意愿任意使用本属性，如可以将此属性作为对象的身份标识,相当于语言中各种组件的标记属性。

##1 IGRMemoBox.Name = 名称
    名称属性
    指定单元格的名称标识。
    数据类型:文本型
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见
    说明
    注意：当为内容格或当为标题格而不是组标题格时，即格存在对应列，格的名称与列的名称保持一致。当改变格的名称也同时改变列的名称，反之改变列的名称也同时改变格的名称。

##1 IGRMemoBox.BackColor = 背景色
    背景色 属性
    指定单元格的背景色。
    数据类型:整数型
    语法:对象.背景色=整数型
    特征
    可读写
    设计器中可见

##1 IGRMemoBox.ForeColor = 文字色
    文字色属性
    指定单元格的输出文本的文字颜色。
    数据类型:整数型
    语法:对象.文字色=整数型
    默认值:0(注:黑色)
    特征
    可读写
    设计器中可见
    说明
    注意：只有在格是非自由格时，才允许使用本属性。

##1 IGRMemoBox.GetFont = 获取字体
    获取字体 属性
    获取报表对象的缺省字体对象的引用。
    调用格式：
    〈字体〉对象．获取字体（）
    特征
    只读
    设计器中可见

##1 IGRMemoBox.ControlType = 部件框类型

##1 IGRMemoBox.GetParent = 获取父对象

##1 IGRMemoBox.Left = 左
    左 属性
    部件框的左端显示位置。
    数据类型:双精度小精型
    语法:对象.左=双精度小精型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的左端显示位置值，相对于父容器。

##1 IGRMemoBox.Top = 上
    上 属性
    部件框的顶端显示位置。
    数据类型:双精度小数型
    语法:对象.上=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的顶端显示位置值，相对于父容器。

##1 IGRMemoBox.Width = 宽度
    宽度 属性
    列的显示宽度。
    数据类型:双精度小数型
    语法:对象.宽度=双精度小数型
    特征
    可读写
    设计器中可见
    说明
    列的显示宽度，以报表使用的计量单位表示的输出宽度值。此属性代表列在设计时的宽度，当其输出时显示的宽度有可能与设计时的宽度不一致。例如，当明细网格的打印方法为列适应输出区域宽度，则列的宽度将按比例进行伸缩以刚好适应输出页面的输出区域宽度。

##1 IGRMemoBox.Height = 高度
    高度属性
    部件框的显示高度。
    数据类型:双精度小数型
    语法:对象.高度=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的显示高度值。

##1 IGRMemoBox.Anchor = 锚定
    锚定 属性
    指定部件框的哪些边缘锚定到其容器边缘。
    数据类型:整数型
    语法:对象.锚定=整数型(注:锚定方式枚举组合值)
    默认值:左边|上边
    特征
    可读写
    设计器中可见
    说明
    本属性值是 锚定方式枚举
    值的按位组合。默认值是左边和上边
    。
    请参见
    锚定方式枚举

##1 IGRMemoBox.Dock = 停靠
    停靠 属性
    指定部件框停靠到父容器的哪一个边缘。
    数据类型:整数型
    语法:对象.停靠=整数型(注:停靠方式枚举值)
    默认值:无
    特征
    可读写
    设计器中可见
    停靠方式枚举

##1 IGRMemoBox.Center = 居中
    居中 属性
    指定水平与垂直方向的居中对齐方式。
    数据类型:整数型
    语法:对象.居中=整数型(注:居中方式枚举值)
    默认值:无
    特征
    可读写
    设计器中可见
    说明
    指定部件框在容器中水平与垂直方向上的居中对齐方式。

##1 IGRMemoBox.BorderStyles = 边框模式
    边框模式属性
    边框线的显示方式。
    数据类型:整数型(注:边框模式枚举值的组合)
    语法:对象.边框模式=整数型(边框模式枚举值)
    默认值:0
    特征:可读写
    设计器中可见
    说明
    本属性值是边框模式枚举值的按位组合。默认值是0，不显示任何边框。
    请参见
    边框模式枚举

##1 IGRMemoBox.BorderWidth = 边框宽度
    边框宽度 属性
    边框线的宽度。
    数据类型:整数型
    语法:对象.边框宽度=整数型
    默认值:1
    特征
    可读写
    设计器中可见
    说明
    以屏幕像素作为计量单位，默认是1。

##1 IGRMemoBox.BorderColor = 边框色
    边框色 属性
    边框线的显示颜色。
    数据类型:整数型
    语法:对象.边框色=整数型
    默认值:黑色
    特征
    可读写
    设计器中可见

##1 IGRMemoBox.AlignColumn = 对齐列
    对齐列属性
    指定部件框水平位置对齐到明细网格列的名称。
    数据类型:文本型
    语法:对象.对齐列=文本型(注:列名称)
    特征:可读写
    设计器中可见
    说明
    如果本属性值不为空时，配合 对齐列方式属性一起指定部件框与列的对齐方式，部件框的水平位置将跟随列位置的改变而改变。
    注意：只有当部件框在分组头与分组尾中时才能使用本属性。

##1 IGRMemoBox.AlignColumnEx = 对齐列扩展
    对齐列扩展 属性
    指定部件框水平位置对齐到明细网格另一个列的名称。
    数据类型:文本型
    语法:对象.对齐列扩展=文本型(注:列名称)
    特征
    可读写
    设计器中可见
    说明
    如果本属性值不为空时，配合 对齐列方式属性一起指定部件框与列的对齐方式，部件框的水平位置将跟随列位置的改变而改变。
    对齐列扩展与对齐列可以指定到不同的列，这样部件框就可以跨列对齐到不同的列。如果
    对齐列扩展与对齐列只设定了其中之一的，则部件框只对齐到一个列。如果两者都没有设定，则部件框不会对齐到任何列。

##1 IGRMemoBox.AlignColumnSide = 对齐列方式
    对齐列方式属性
    部件框对齐到明细网格列的方式。
    数据类型:整数型
    语法:对象.对齐列方式=整数型(注:对齐列方式枚举)
    默认值:#对齐列方式枚举.左右两端
    特征
    可读写
    设计器中可见
    说明
    注意：只有当部件框在分组头与分组尾中时才能使用本属性。
    请参见
    对齐列方式枚举

##1 IGRMemoBox.BackStyle = 背景模式
    背景模式 属性
    部件框显示时背景的填充方式。
    数据类型:整数型
    语法:对象.背景模式=整数型(注:背景模式枚举值)
    默认值:#背景模式枚举.透明
    特征:可读写
    设计器中可见
    请参见
    背景模式枚举

##1 IGRMemoBox.PrintType = 打印类别
    打印类别 属性
    部件框的打印输出方式。
    数据类型:整数型
    语法:对象.打印类别=整数型(注:打印类型枚举值)
    特征
    可读写
    设计器中可见
    仅用于打印
    请参见
    打印类别枚举

##1 IGRMemoBox.Visible = 可见性
    可见性属性
    指定列在输出时是否可见。
    数据类型:逻辑型
    语法:对象.可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为假，则本列在屏幕显示与打印生成时将被忽略掉。

##1 IGRMemoBox.Cursor = 光标
    光标属性
    指定在查询显示报表时，在本内容行上显示的鼠标光标。
    数据类型:整数型
    语法:对象.光标=整数型(注:显示光标枚举值)
    默认值:默认光标
    特征
    可读写
    设计器中可见

##1 IGRMemoBox.GetAsTextBox = 获取为文字框

##1 IGRMemoBox.GetAsChart = 获取为图表

##1 IGRMemoBox.GetAsStaticBox = 获取为静态文字框

##1 IGRMemoBox.GetAsShapeBox = 获取为图形框

##1 IGRMemoBox.GetAsSystemVarBox = 获取为系统变量框

##1 IGRMemoBox.GetAsFieldBox = 获取为字段框

##1 IGRMemoBox.GetAsSummaryBox = 获取为统计框

##1 IGRMemoBox.GetAsPictureBox = 获取为图像框

##1 IGRMemoBox.GetAsRichTextBox = 获取为RTF文字框

##1 IGRMemoBox.GetAsMemoBox = 获取为综合文字框

##1 IGRMemoBox.GetAsSubReport = 获取为子报表

##1 IGRMemoBox.GetAsLine = 获取为线段

##1 IGRMemoBox.GetAsBarcode = 获取为条码


##1 IGRMemoBox.SetBounds = 设置边界
    设置边界方法
    设置部件框在其父容器中的边界位置。
    调用格式：〈无返回值〉对象．设置边界（双精度小数型左边，双精度小数型顶边，双精度小数型
    右边，双精度小数型 底边)

##1 IGRMemoBox.BringToFront = 显示到前端
    显示到前端方法
    将部件框带到Z顺序的前面。
    调用格式：
    〈无返回值〉对象．显示到前端（）
    说明
    此部件框将在同一容器中的其它部件框之后输出显示，如果前面输出的部件框与其在位置上有重叠，则此部件框将覆盖前面输出的部件框。

##1 IGRMemoBox.SendToBack = 显示到后端
    显示到后端方法
    将部件框发送到Z顺序的后面。
    调用格式：
    〈无返回值〉对象．显示到后端（）
    说明
    此部件框将在同一容器中的其它部件框之前输出显示，如果后输出的部件框与其在位置上有重叠，则后输出的部件框将覆盖此部件框。

##0 IGRMemoBox.LoadCursorFile = 
方法 LoadCursor

##1 IGRMemoBox.WordWrap = 文字绕行
    文字绕行属性
    指定文字是否折行输出的标志。
    数据类型:逻辑型
    语法:对象.文字绕行=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为真，文字可以折行输出，否则不论文字多少，只在一行中输出文字。
    注意：只有在格不是自由格时，才允许使用本属性。

##1 IGRMemoBox.EndEllipsis = 省略点文字

##1 IGRMemoBox.CanGrow = 可伸展
    可伸展属性
    指定内容格在运行时是否可以伸展高度。
    数据类型:逻辑型
    语法:对象.可伸展=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRMemoBox.CanShrink = 可收缩
    可收缩 属性
    指定内容格在运行时是否可以收缩高度。
    数据类型:逻辑型
    语法:对象.可收缩=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRMemoBox.ShrinkFontToFit = 缩小适应
    缩小适应属性
    在文字框的显示区域不能完整显示出文字内容时，指定是否自动缩小文字大小让文字完整显示出来。
    语法:对象.缩小适应=逻辑型
    默认值
    假
    特征
    可读写
    设计器中可见
    仅用于打印

##1 IGRMemoBox.TextAlign = 文字对齐方式
    文字对齐方式 属性
    指定显示文本的文字对齐方式。
    数据类型:整数型
    语法:对象.文字对齐方式=整数型(注:文字对齐方式枚举值)
    特征
    可读写
    设计器中可见
    说明
    注意：只有在格不是自由格时，才允许使用本属性。

##1 IGRMemoBox.DisplayText = 显示文字
    显示文字 属性
    获取或设置部件框的输出显示文本。
    语法:对象.显示文字=文本型
    特征
    可读写
    仅运行时可用
    说明
    获取或设置部件框的输出显示文本。只有在运行时才能使用本属性，当不能由Grid++Report根据字段的值自动产生显示文本时，在请求字段显示文字事件中为字段的显示文字属性赋一个新的显示文本。
    例如当需要将金额的负数值显示为红字时，需要将数字显示文字前面的负号去掉，就必须响应请求字段显示文字事件并使用显示文字属性。
    请参见

##1 IGRMemoBox.ShowMoneyLabel = 显示金额标签

##1 IGRMemoBox.ShowMoneyLine = 显示金额线

##1 IGRMemoBox.GetDisplayTextScript = 显示文字脚本
    显示文字脚本 属性
    表示报表请求文字框显示文字事件对应的脚本语言代码。
    语法:对象.显示文字脚本=文本型
    特征
    可读写
    设计器中可见
    请参见
    文字框接口|
    报表.请求文字框显示文字事件

##1 IGRMemoBox.Text = 文字
    文字属性
    显示文本，文本中可以包含多种树据域。
    语法:对象.文字=文本型
    特征
    可读写
    设计器中可见
    说明
    数据域定义在此文本中，数据域通过“[#”与“#]”扩起来，中间包含的文字可以成功解析为数据域或数据域表达式，则在运行时对应文本将被数据域的值替换，反之文字将以原样输出。

##1 IGRMemoBox.TextOrientation = 文字方向
    文字方向属性
    获取或设置文字的显示方向。
    语法:对象.文字方向=整数型(文字方向枚举值)
    默认值:t
    特征
    可读写
    设计器中可见
    请参见
    文字方向枚举

##1 IGRMemoBox.TextAngle = 文字角度
    文字角度属性
    获取或设置文字的显示角度，以1/10度为计量单位。
    语法:对象.文字角度=整数型
    默认值  0
    特征
    可读写
    设计器中可见
    说明
    综合文字框的文字角度大于0时，只有当文字方向为默认值时才会生效，此时文字只能单行显示，文字对齐方式设定也不起作用，否则将按特定的文字方向显示文字。

##1 IGRMemoBox.CharacterSpacing = 字间距
    字间距属性
    获取或设置输出文字的字间距。
    语法:对象.字间距=整数型
    默认值   0
    特征
    可读写
    设计器中可见
    说明
    当文字按任意角度显示时，字间距与行间距设置不会起作用。

##1 IGRMemoBox.LineSpacing = 行间距
    行间距属性
    获取或设置输出文字的行间距。
    语法:对象.行间距=整数型
    默认值   0
    特征
    可读写
    设计器中可见
    说明
    当文字按任意角度显示时，字间距与行间距设置不会起作用。

##1 IGRMemoBox.FirstCharIndent = 首字缩进


##1 IGRMemoBox.ParagraphSpacing = 段间距


##1 IGRMemoBox.LeftIndent = 左边缩进


##1 IGRMemoBox.RightIndent = 右边缩进


##1 IGRMemoBox.TopIndent = 上边缩进


##1 IGRMemoBox.BottomIndent = 下边缩进


##0 GRTextOrientation = 文字方向枚举
GRTextOrientation
    文字方向枚举
    指定综合文字框的各种文字行向。

    成员名称		    说明
    从下至上从左至右1	    按从下到上，从左到右方式显示文字，文字旋转。
    默认		    默认方式，按从左到右，从上到下方式显示文字。
    从上至下从左至右0	    按从上到下，从左到右方式显示文字，文字不旋转。
    从上至下从右至左0	    按从上到下，从右到左方式显示文字，文字不旋转。
    从上至下从右至左1	    按从上到下，从右到左方式显示文字，文字旋转。

    请参见

##1 tagGRTextOrientation = 文字方向枚举
tagGRTextOrientation
    文字方向枚举
    指定综合文字框的各种文字行向。

    成员名称		    说明
    从下至上从左至右1	    按从下到上，从左到右方式显示文字，文字旋转。
    默认		    默认方式，按从左到右，从上到下方式显示文字。
    从上至下从左至右0	    按从上到下，从左到右方式显示文字，文字不旋转。
    从上至下从右至左0	    按从上到下，从右到左方式显示文字，文字不旋转。
    从上至下从右至左1	    按从上到下，从右到左方式显示文字，文字旋转。

    请参见

##1 tagGRTextOrientation.grtoDefault = 默认


##1 tagGRTextOrientation.grtoU2DL2R0 = 从上至下从左至右0


##1 tagGRTextOrientation.grtoD2UL2R1 = 从下至上从左至右1


##1 tagGRTextOrientation.grtoU2DR2L0 = 从上至下从右至左0


##1 tagGRTextOrientation.grtoU2DR2L1 = 从上至下从右至左1


##1 IGRSubReport = 子报表
    子报表接口
    表示子报表部件框。
    说明
    通过关联另一个报表对象，在此报表中显示另外一个报表。子报表受以下规则限制：
    1。子报表只能应用在报表头与报表尾中应用。
    2。子报表所在的节不允许重复打印。
    3。子报表在数据导出时被忽略掉。
    4。子报表本身的页眉与页脚在生成时被忽略掉。

##1 IGRSubReport.Tag = 标签
    标签 属性
    部件框的标识值。
    数据类型:整数型
    语法:对象.标签=整数型
    默认值:0
    特征
    可读写
    设计器中可见
    说明
    可以按自己意愿任意使用本属性，如可以将此属性作为对象的身份标识,相当于语言中各种组件的标记属性。

##1 IGRSubReport.Name = 名称
    名称属性
    指定单元格的名称标识。
    数据类型:文本型
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见
    说明
    注意：当为内容格或当为标题格而不是组标题格时，即格存在对应列，格的名称与列的名称保持一致。当改变格的名称也同时改变列的名称，反之改变列的名称也同时改变格的名称。

##1 IGRSubReport.BackColor = 背景色
    背景色 属性
    指定单元格的背景色。
    数据类型:整数型
    语法:对象.背景色=整数型
    特征
    可读写
    设计器中可见

##1 IGRSubReport.ForeColor = 文字色
    文字色属性
    指定单元格的输出文本的文字颜色。
    数据类型:整数型
    语法:对象.文字色=整数型
    默认值:0(注:黑色)
    特征
    可读写
    设计器中可见
    说明
    注意：只有在格是非自由格时，才允许使用本属性。

##1 IGRSubReport.GetFont = 获取字体
    获取字体 属性
    获取报表对象的缺省字体对象的引用。
    调用格式：
    〈字体〉对象．获取字体（）
    特征
    只读
    设计器中可见

##1 IGRSubReport.ControlType = 部件框类型

##1 IGRSubReport.GetParent = 获取父对象

##1 IGRSubReport.Left = 左
    左 属性
    部件框的左端显示位置。
    数据类型:双精度小精型
    语法:对象.左=双精度小精型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的左端显示位置值，相对于父容器。

##1 IGRSubReport.Top = 上
    上 属性
    部件框的顶端显示位置。
    数据类型:双精度小数型
    语法:对象.上=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的顶端显示位置值，相对于父容器。

##1 IGRSubReport.Width = 宽度
    宽度 属性
    列的显示宽度。
    数据类型:双精度小数型
    语法:对象.宽度=双精度小数型
    特征
    可读写
    设计器中可见
    说明
    列的显示宽度，以报表使用的计量单位表示的输出宽度值。此属性代表列在设计时的宽度，当其输出时显示的宽度有可能与设计时的宽度不一致。例如，当明细网格的打印方法为列适应输出区域宽度，则列的宽度将按比例进行伸缩以刚好适应输出页面的输出区域宽度。

##1 IGRSubReport.Height = 高度
    高度属性
    部件框的显示高度。
    数据类型:双精度小数型
    语法:对象.高度=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的显示高度值。

##1 IGRSubReport.Anchor = 锚定
    锚定 属性
    指定部件框的哪些边缘锚定到其容器边缘。
    数据类型:整数型
    语法:对象.锚定=整数型(注:锚定方式枚举组合值)
    默认值:左边|上边
    特征
    可读写
    设计器中可见
    说明
    本属性值是 锚定方式枚举
    值的按位组合。默认值是左边和上边
    。
    请参见
    锚定方式枚举

##1 IGRSubReport.Dock = 停靠
    停靠 属性
    指定部件框停靠到父容器的哪一个边缘。
    数据类型:整数型
    语法:对象.停靠=整数型(注:停靠方式枚举值)
    默认值:无
    特征
    可读写
    设计器中可见
    停靠方式枚举

##1 IGRSubReport.Center = 居中
    居中 属性
    指定水平与垂直方向的居中对齐方式。
    数据类型:整数型
    语法:对象.居中=整数型(注:居中方式枚举值)
    默认值:无
    特征
    可读写
    设计器中可见
    说明
    指定部件框在容器中水平与垂直方向上的居中对齐方式。

##1 IGRSubReport.BorderStyles = 边框模式
    边框模式属性
    边框线的显示方式。
    数据类型:整数型(注:边框模式枚举值的组合)
    语法:对象.边框模式=整数型(边框模式枚举值)
    默认值:0
    特征:可读写
    设计器中可见
    说明
    本属性值是边框模式枚举值的按位组合。默认值是0，不显示任何边框。
    请参见
    边框模式枚举

##1 IGRSubReport.BorderWidth = 边框宽度
    边框宽度 属性
    边框线的宽度。
    数据类型:整数型
    语法:对象.边框宽度=整数型
    默认值:1
    特征
    可读写
    设计器中可见
    说明
    以屏幕像素作为计量单位，默认是1。

##1 IGRSubReport.BorderColor = 边框色
    边框色 属性
    边框线的显示颜色。
    数据类型:整数型
    语法:对象.边框色=整数型
    默认值:黑色
    特征
    可读写
    设计器中可见

##1 IGRSubReport.AlignColumn = 对齐列
    对齐列属性
    指定部件框水平位置对齐到明细网格列的名称。
    数据类型:文本型
    语法:对象.对齐列=文本型(注:列名称)
    特征:可读写
    设计器中可见
    说明
    如果本属性值不为空时，配合 对齐列方式属性一起指定部件框与列的对齐方式，部件框的水平位置将跟随列位置的改变而改变。
    注意：只有当部件框在分组头与分组尾中时才能使用本属性。

##1 IGRSubReport.AlignColumnEx = 对齐列扩展
    对齐列扩展 属性
    指定部件框水平位置对齐到明细网格另一个列的名称。
    数据类型:文本型
    语法:对象.对齐列扩展=文本型(注:列名称)
    特征
    可读写
    设计器中可见
    说明
    如果本属性值不为空时，配合 对齐列方式属性一起指定部件框与列的对齐方式，部件框的水平位置将跟随列位置的改变而改变。
    对齐列扩展与对齐列可以指定到不同的列，这样部件框就可以跨列对齐到不同的列。如果对齐列扩展与对齐列只设定了其中之一的，则部件框只对齐到一个列。如果两者都没有设定，则部件框不会对齐到任何列。

##1 IGRSubReport.AlignColumnSide = 对齐列方式
    对齐列方式属性
    部件框对齐到明细网格列的方式。
    数据类型:整数型
    语法:对象.对齐列方式=整数型(注:对齐列方式枚举)
    默认值:#对齐列方式枚举.左右两端
    特征
    可读写
    设计器中可见
    说明
    注意：只有当部件框在分组头与分组尾中时才能使用本属性。
    请参见
    对齐列方式枚举

##1 IGRSubReport.BackStyle = 背景模式
    背景模式 属性
    部件框显示时背景的填充方式。
    数据类型:整数型
    语法:对象.背景模式=整数型(注:背景模式枚举值)
    默认值:#背景模式枚举.透明
    特征:可读写
    设计器中可见

    请参见
    背景模式枚举

##1 IGRSubReport.PrintType = 打印类别
    打印类别 属性
    部件框的打印输出方式。
    数据类型:整数型
    语法:对象.打印类别=整数型(注:打印类型枚举值)
    特征
    可读写
    设计器中可见
    仅用于打印

    请参见
    打印类别枚举

##1 IGRSubReport.Visible = 可见性
    可见性属性
    指定列在输出时是否可见。
    数据类型:逻辑型
    语法:对象.可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为假，则本列在屏幕显示与打印生成时将被忽略掉。

##1 IGRSubReport.Cursor = 光标
    光标属性
    指定在查询显示报表时，在本内容行上显示的鼠标光标。
    数据类型:整数型
    语法:对象.光标=整数型(注:显示光标枚举值)
    默认值:默认光标
    特征
    可读写
    设计器中可见

##1 IGRSubReport.GetAsTextBox = 获取为文字框

##1 IGRSubReport.GetAsChart = 获取为图表

##1 IGRSubReport.GetAsStaticBox = 获取为静态文字框

##1 IGRSubReport.GetAsShapeBox = 获取为图形框

##1 IGRSubReport.GetAsSystemVarBox = 获取为系统变量框

##1 IGRSubReport.GetAsFieldBox = 获取为字段框

##1 IGRSubReport.GetAsSummaryBox = 获取为统计框

##1 IGRSubReport.GetAsPictureBox = 获取为图像框

##1 IGRSubReport.GetAsRichTextBox = 获取为RTF文字框

##1 IGRSubReport.GetAsMemoBox = 获取为综合文字框

##1 IGRSubReport.GetAsSubReport = 获取为子报表

##1 IGRSubReport.GetAsLine = 获取为线段

##1 IGRSubReport.GetAsBarcode = 获取为条码

##1 IGRSubReport.SetBounds = 设置边界
    设置边界方法
    设置部件框在其父容器中的边界位置。
    调用格式：〈无返回值〉对象．设置边界（双精度小数型左边，双精度小数型顶边，双精度小数型
    右边，双精度小数型 底边)

##1 IGRSubReport.BringToFront = 显示到前端
    显示到前端方法
    将部件框带到Z顺序的前面。
    调用格式：
    〈无返回值〉对象．显示到前端（）
    说明
    此部件框将在同一容器中的其它部件框之后输出显示，如果前面输出的部件框与其在位置上有重叠，则此部件框将覆盖前面输出的部件框。

##1 IGRSubReport.SendToBack = 显示到后端
    显示到后端方法
    将部件框发送到Z顺序的后面。
    调用格式：
    〈无返回值〉对象．显示到后端（）
    说明
    此部件框将在同一容器中的其它部件框之前输出显示，如果后输出的部件框与其在位置上有重叠，则后输出的部件框将覆盖此部件框。

##0 IGRSubReport.LoadCursorFile = 
方法 LoadCursor

##1 IGRSubReport.GetReport = 获取关联报表

##1 IGRSubReport.CanGrow = 可伸展
    指示子报表的高度在运行时是否可以伸展的标志。

    VARIANT_BOOL CanGrow
    默认值
    TRUE
    特征
    可读写
    设计器中可见

##1 IGRSubReport.CanShrink = 可收缩
    指示子报表的高度在运行时是否可以收缩的标志。
    VARIANT_BOOLCanShrink
    默认值
    FALSE
    特征
    可读写
    设计器中可见

##1 IGRSubReport.ReportFile = 报表模板文件


##1 IGRSubReport.SetReport = 设置关联报表

##0 IGRSections = 报表节集合
    公开报表主对象直接拥有节的集合对象。
    有关此接口所有成员的列表，请参阅IGRSections成员。
    IDispatch
    IGRSections
    说明
    报表主对象直接拥有的节包括页眉，页脚，报表头，报表尾，所以在此集合对象中只能拥有以上四种类型的节。


##1 IGRSections.Add = 
    增加方法
    增加一个子对象并返回新增子对象的接口引用，如果子对象具有具体类型，则此方法有一个类型参数，通过此参数指定子对象的类型。
    调用格式：〈报表节〉
    对象．增加（报表节类型枚举 类型 ）
    返回值:新增报表节对象的接口引用。
    参数
    类型:指定报表节的类型。

##1 IGRSections.Remove = 
    删除方法
    根据子对象的顺序号或名称将子对象移除掉，在输入参数种指定要移除子对象的顺序号或名称。
    调用格式：〈无返回值〉对象．删除（通用型顺序号或名称）参数

##1 IGRSections.RemoveAll = 
    全部删除方法
    清除全部报表节。
    调用格式：〈无返回值〉对象．全部删除（）

##0 GRSectionType = 报表节类型枚举
GRSectionType
    报表节类型枚举
    指定报表节的具体类型。

    成员名称		    说明
    内容行		    明细网格内容行。
    标题行		    明细网格标题行。
    分组尾		    分组尾。
    分组头		    分组头。
    页脚		    页脚。
    页眉		    页眉。
    报表尾		    报表尾。
    报表头		    报表头。

##1 tagGRSectionType = 报表节类型枚举
tagGRSectionType
    报表节类型枚举
    指定报表节的具体类型。

    成员名称		    说明
    内容行		    明细网格内容行。
    标题行		    明细网格标题行。
    分组尾		    分组尾。
    分组头		    分组头。
    页脚		    页脚。
    页眉		    页眉。
    报表尾		    报表尾。
    报表头		    报表头。

##1 tagGRSectionType.grstPageHeader = 页眉
tagGRSectionType.grstPageHeader
    页眉接口
    表示报表的页眉。页眉只在打印生成时显示，紧靠每页上边距的上面显示。
    说明
    页眉在打印生成时，输出在每页的上边距之上；在屏幕查询显示时，页眉被忽略掉，即屏幕查询显示不使用页眉。一个报表只能定义一个页眉。在页眉中一般定义页号，总页数，文档名称，打印时间及其它需要显示在输出纸张页眉区域的信息。

##1 tagGRSectionType.grstReportHeader = 报表头


##1 tagGRSectionType.grstReportFooter = 报表尾
tagGRSectionType.grstReportFooter
    报表尾接口
    表示报表的报表尾。报表尾一般显示在报表的最后面。
    说明
    报表尾在打印生成时，如果不选择每页重复输出，则只在报表的最后输出一次；在屏幕查询显示时，显示在明细网格之下。一个报表可以定义多个报表尾，在一般情况下我们只需定义一个报表尾就可以了。在报表尾中一般定义报表的统计信息及其它只需在报表结束时显示一次的信息。

##1 tagGRSectionType.grstPageFooter = 页脚
tagGRSectionType.grstPageFooter
    页脚接口
    表示报表的页脚。页脚只在打印生成时显示，紧靠每页下边距的下面显示。
    说明
    页脚在打印生成时，输出在每页的上边距之上；在屏幕查询显示时，页脚被忽略掉，即屏幕查询显示不使用页脚。一个报表只能定义一个页脚。在页脚中一般定义页号，总页数，文档名称，打印时间及其它需要显示在输出纸张页脚区域的信息。

##1 tagGRSectionType.grstColumnTitle = 标题行
tagGRSectionType.grstColumnTitle
    标题行接口
    表示明细网格的标题行的接口。其拥有一组标题格，标题格在显示排列上具有层次关系，可以定义多层表头。
    说明
    标题行一般显示在明细网格的最上端，通常只在明细网格开始时输出一次。标题行拥有所有标题格，标题行显示区域被一个个标题格所划分。

##1 tagGRSectionType.grstColumnContent = 内容行
tagGRSectionType.grstColumnContent
    内容行 接口
    表示明细网格的内容行。
    有关此接口所有成员的列表
    说明
    内容行显示在明细网格标题之后，按照明细网格的记录的顺序每个记录生成一次内容行，如果定义有分组，在每个分组开始与结束时，要插入分组头与分组尾。内容行拥有所有内容格，内容行显示区域被一个个内容格所划分。

##1 tagGRSectionType.grstGroupHeader = 分组头
tagGRSectionType.grstGroupHeader
    分组头接口
    表示明细网格分组的分组头。分组头显示在每个分组的第一行。
    说明
    一个报表可以定义一个或多个嵌套分组，每个分组对应一个分组头与一个分组尾。分组头显示在每个分组开始位置，一般在分组头上定义分组的标识信息，分组初始值及其它只需在分组开始时显示一次的信息。

##1 tagGRSectionType.grstGroupFooter = 分组尾
tagGRSectionType.grstGroupFooter
    分组尾 接口
    表示明细网格分组的分组尾。分组尾显示在每个分组的最后一行。
    说明
    一个报表可以定义一个或多个嵌套分组，每个分组对应一个分组头与一个分组尾。分组尾显示在每个分组结束位置，一般在分组尾上定义定义分组的统计信息及其它只需在分组开始时显示一次的信息。


##1 IGRDetailGrid = 明细网格
    表示明细网格对象。绝大多数报表都拥有明细网格，并且明细网格是多数报表的主体。
    说明
    明细网格就是处理报表明细数据生成的实现定义，一般的报表都需要一个明细网格，明细网格一般生成在报表头之后及报表尾之前，一般明细网格构成了一个报表的主体，报表的主要信息输出在明细网格中，明细网格由实现明细数据生成需要的多种子对象组成。

##1 IGRDetailGrid.Tag = 标记
可以按自己意愿任意使用本属性，如可以将此属性作为对象的身份标识。

##1 IGRDetailGrid.BackColor = 背景色
指定明细网格的标题行、内容行、分组头与分组尾的默认背景色。
    说明:此属性作为明细网格拥有的各种子对象的缺省背景色。

##1 IGRDetailGrid.GetFont = 获取字体
获取报表对象的缺省字体对象的引用。

##0 IGRDetailGrid.Name = 名称
标题行的名称标识。

##1 IGRDetailGrid.BorderStyles = 边框模式
指定网格边框线的输出方式。
    默认值
    画左|画上|画右|画下

##1 IGRDetailGrid.BorderWidth = 边框宽度
边框线宽度。
    默认值:1
    说明:以屏幕像素表示属性值。

##1 IGRDetailGrid.BorderColor = 边框色
边框线颜色。
    默认值:#黑色

##1 IGRDetailGrid.FixCols = 锁定列数
查询显示时，指定锁定的列数，左边被锁定的列始终不进行水平滚动。
    默认值  0
    说明: 指定固定列的个数，默认时0。当属性值大于0时，前FixCols个列不跟随水平滚动条的滚动而滚动，而是始终显示在明细网格的左端。
    注意：本属性只应用于查询显示器中。

    请参见

##1 IGRDetailGrid.CenterView = 居中显示
当明细网格的列总宽度小于显示区域宽度时，指定是否水平居中显示明细网格。
    默认值:真
    说明:当列的总宽度小于显示区域的宽度时，当本属性值为真时，在水平方向上将明细网格居中显示，反之则靠左边显示。

##1 IGRDetailGrid.RowLineColor = 行线颜色
指定行分隔线的颜色。

##1 IGRDetailGrid.ColLineColor = 列线颜色
指定列分隔线的颜色。
    默认值:黑色

##1 IGRDetailGrid.PageColumnDirection = 页栏方向
在输出多栏报表时，数据行生成到输出位置的方向。

##1 IGRDetailGrid.PageColumnCount = 页栏数
在水平方向上均分打印输出区域的个数，也就是报表栏数。
    说明:值范围：1-50

##1 IGRDetailGrid.PageColumnSpacing = 页栏间距
指定多栏报表的栏间距，以报表的计量单位表示。
    默认值   0
    特征
    可读写
    设计器中可见
    仅用于打印

##1 IGRDetailGrid.ShowColLine = 显示列线
指定是否显示网格列分隔线。

##1 IGRDetailGrid.ShowRowLine = 显示行线
指定是否显示网格行分隔线。
    默认值:真

##1 IGRDetailGrid.PrintAdaptMethod = 打印适应策略
打印输出时，根据输出页面的情况，指定列的输出策略。
    默认值:缩小适应

##1 IGRDetailGrid.PrintAdaptRepeat = 打印重复策略
当打印策略为‘另起新页’或‘另起新页并重复固定列’时，报表头与报表尾是否在新页中再次输出。
    默认值:真

##1 IGRDetailGrid.NewPage = 换新页方式
打印生成时，指定强制换新页的方式。
    默认值:不应用

##1 IGRDetailGrid.AppendBlankRow = 追加空白行
打印输出时，是否在页的剩余区域补充显示空白内容行的标志。
    默认值:假

##1 IGRDetailGrid.GrowToBottom = 伸展到页底
指示是否将明细网格的下边框延伸到页的底部。
    默认值:假

##1 IGRDetailGrid.ColLineWidth = 列线宽度
网格列线的宽度，以屏幕像素为计量单位。
    默认值   1

##1 IGRDetailGrid.RowLineWidth = 行线宽度
网格行线的宽度，以屏幕像素为计量单位。
    默认值   1

##1 IGRDetailGrid.IsCrossTab = 交叉表方式
指定明细网格是否按交叉表方式去生成。

##1 IGRDetailGrid.GetColumnContent = 获取内容行
明细网格拥有的内容行的接口引用。
    说明: 在输出时，每条明细记录将根据内容行定义输出一次。

##1 IGRDetailGrid.GetColumnTitle = 获取标题行
获取明细网格拥有的标题行对象的接口引用。

##1 IGRDetailGrid.GetColumns = 获取列集合
获取网格拥有的列集合对象的接口引用。

##1 IGRDetailGrid.GetGroups = 获取分组集合
获取网格拥有的分组集合对象的接口引用。

##1 IGRDetailGrid.GetRecordset = 获取数据集
获取网格拥有的记录集对象的接口引用。

##0 IGRDetailGrid.GetMasterRecordset = 


##1 IGRDetailGrid.GetCrossTab = 是否为交叉表方式
获取交叉表定义对象的接口引用。
只有当 交叉表方式 属性为真时，明细网格才会拥有交叉表定义对象，本属性才会取到不为空的值。

##1 IGRDetailGrid.AddColumn = 增加列
增加一个新列。
    返回值:新增列对象的接口引用。

##1 IGRDetailGrid.AddColumn.Name = 名称
列的名称标识。

##1 IGRDetailGrid.AddColumn.Title = 标题
列的标题文本。

##1 IGRDetailGrid.AddColumn.DataField = 关联字段
列关联的字段名称。

##1 IGRDetailGrid.AddColumn.Width = 列宽度
列的宽度。

##1 IGRDetailGrid.ClearColumns = 清空列
删除所有的列。

##1 IGRDetailGrid.FindGroupTitleCell = 查找组标题格
根据名称找到组标题格对象的接口引用。

##1 IGRDetailGrid.FindGroupTitleCell.Name = 标题格名称
指定要查找组标题格的名称。

##1 IGRDetailGrid.AddGroupTitle = 增加组标题格
增加一个新组标题格。
    返回值:标题格, 返回新增组标题格对象的接口引用。

##1 IGRDetailGrid.AddGroupTitle.Name = 名称
指定新增组标题格的名称。

##1 IGRDetailGrid.AddGroupTitle.Title = 标题
指定新增组标题格的显示文本。

##1 IGRDetailGrid.ClearGroupTitles = 清空组标题格
删除全部组标题格。

##1 IGRDetailGrid.ColumnMoveToEnd = 移动列到最后
将列地显示顺序移动到最后。

##1 IGRDetailGrid.ColumnMoveToEnd.ColumnIndex = 列名称或序号
指定列的标识，可以是列的名称，也可以识列的顺序号。

##1 IGRDetailGrid.StartNewGroup = 开始新分组
在报表生成时，开始生成一个新的分组项。
    说明:只能在报表生成时的处理记录事件中调用本方法，目的是为了生成自定义的分组。

##1 IGRDetailGrid.StartNewGroup.GroupIndex = 分组名称序号
指定分组对象的标识，可以是分组对象的名称，也可以是分组对象的顺序号。

##0 GRPageColumnDirection = 页栏显示方向枚举
GRPageColumnDirection
    页栏显示方向枚举
    在明细网格打印生成时，如果生成多栏报表，指定明细网格的各种行的在各页栏中的输出次序。
    成员名称
    说明
    左到右上到下	按从左到右，再从上到下的顺序在页栏中打印输出。
    上到下左到右	按从上到下，再从左到右的顺序在页栏中打印输出。

##1 tagGRPageColumnDirection = 页栏显示方向枚举
tagGRPageColumnDirection
    页栏显示方向枚举
    在明细网格打印生成时，如果生成多栏报表，指定明细网格的各种行的在各页栏中的输出次序。
    成员名称
    说明
    左到右上到下	    按从左到右，再从上到下的顺序在页栏中打印输出。
    上到下左到右	    按从上到下，再从左到右的顺序在页栏中打印输出。

##1 tagGRPageColumnDirection.grpcdDownAcross = 上到下左到右


##1 tagGRPageColumnDirection.grpcdAcrossDown = 左到右上到下


##0 GRColumnPrintAdaptMethod = 打印策略枚举
GRColumnPrintAdaptMethod
    打印策略枚举
    打印生成时，明细网格列对输出页面的适应方法。

    成员名称		    说明
    丢弃		    在打印输出时，超出页面输出范围的列内容将被忽略掉，即不输出显示。
    缩放适应		    在打印输出时，如果列的总宽度超出页面输出范围，与grcpamResizeToFit相同，反之按设计时宽度输出。
    缩小适应		    在打印输出时，根据列的宽度按比列将所有要输出的列的总宽度调整到页面输出区域的宽度。
    横向分页		    在打印输出时，超出页面输出范围的列内容将另起新页输出显示。
    横向分页并重复锁定列    在打印输出时，超出页面输出范围的列内容将另起新页输出显示，且左边的固定列在每页中重复输出。
    绕行		    在打印输出时，超出页面输出范围的列内容将另起新行输出显示。

    说明
    在打印输出到纸张页面中，输出列的总宽度与页面的输出宽度（除掉左右页边距的宽度）很可能不一样，系统可以采用几种方法来处理列的输出。如采用调整列的宽度以适应输出区域的宽度，则系统根据每个列的设计宽度按比列调整其打印输出宽度，使所有打印输出列的打印输出总宽度与打印输出区域宽度保持一样；如果列的设计总宽度小于输出区域宽度，所有列的打印宽度将放大，反之则缩小。

##1 tagGRColumnPrintAdaptMethod = 打印策略枚举
tagGRColumnPrintAdaptMethod
    打印策略枚举
    打印生成时，明细网格列对输出页面的适应方法。

    成员名称		    说明
    丢弃		    在打印输出时，超出页面输出范围的列内容将被忽略掉，即不输出显示。
    缩放适应		    在打印输出时，如果列的总宽度超出页面输出范围，与grcpamResizeToFit相同，反之按设计时宽度输出。
    缩小适应		    在打印输出时，根据列的宽度按比列将所有要输出的列的总宽度调整到页面输出区域的宽度。
    横向分页		    在打印输出时，超出页面输出范围的列内容将另起新页输出显示。
    横向分页并重复锁定列    在打印输出时，超出页面输出范围的列内容将另起新页输出显示，且左边的固定列在每页中重复输出。
    绕行		    在打印输出时，超出页面输出范围的列内容将另起新行输出显示。

    说明
    在打印输出到纸张页面中，输出列的总宽度与页面的输出宽度（除掉左右页边距的宽度）很可能不一样，系统可以采用几种方法来处理列的输出。如采用调整列的宽度以适应输出区域的宽度，则系统根据每个列的设计宽度按比列调整其打印输出宽度，使所有打印输出列的打印输出总宽度与打印输出区域宽度保持一样；如果列的设计总宽度小于输出区域宽度，所有列的打印宽度将放大，反之则缩小。

##1 tagGRColumnPrintAdaptMethod.grcpamDiscard = 丢弃


##1 tagGRColumnPrintAdaptMethod.grcpamWrap = 绕行


##1 tagGRColumnPrintAdaptMethod.grcpamResizeToFit = 缩放适应


##1 tagGRColumnPrintAdaptMethod.grcpamShrinkToFit = 缩小适应
tagGRColumnPrintAdaptMethod.grcpamShrinkToFit
    缩小适应属性
    在文字框的显示区域不能完整显示出文字内容时，指定是否自动缩小文字大小让文字完整显示出来。
    语法:对象.缩小适应=逻辑型
    默认值
    假
    特征
    可读写
    设计器中可见
    仅用于打印

##1 tagGRColumnPrintAdaptMethod.grcpamToNewPage = 先上下横向分页


##1 tagGRColumnPrintAdaptMethod.grcpamToNewPageEx = 先左右横向分页


##1 tagGRColumnPrintAdaptMethod.grcpamToNewPageRFC = 先上下横向分页并重复锁定列


##1 tagGRColumnPrintAdaptMethod.grcpamToNewPageRFCEx = 先左右横向分页并重复锁定列


##0 GRNewPageStyle = 换新页方式枚举
GRNewPageStyle
    换新页方式枚举
    在打印生成报表节时，指定是否强制产生新页的方式。

    成员名称		    说明
    节后		    报表节在打印输出之后要求产生新页，保证本节之后的后续节在新页中输出。
    节前		    报表节在打印输出之前要求产生新页，保证本节在新页中输出。
    节前节后		    报表节在打印输出之前与之后要求产生新页。
    不应用		    报表节不强制产生新页。

##1 tagGRNewPageStyle = 换新页方式枚举
tagGRNewPageStyle
    换新页方式枚举
    在打印生成报表节时，指定是否强制产生新页的方式。

    成员名称		    说明
    节后		    报表节在打印输出之后要求产生新页，保证本节之后的后续节在新页中输出。
    节前		    报表节在打印输出之前要求产生新页，保证本节在新页中输出。
    节前节后		    报表节在打印输出之前与之后要求产生新页。
    不应用		    报表节不强制产生新页。

##1 tagGRNewPageStyle.grnpsNone = 不应用


##1 tagGRNewPageStyle.grnpsBefore = 节前


##1 tagGRNewPageStyle.grnpsAfter = 节后


##1 tagGRNewPageStyle.grnpsBeforeAfter = 节前节后


##1 IGRColumnContent = 内容行
    表示明细网格的内容行。
    有关此接口所有成员的列表
    说明
    内容行显示在明细网格标题之后，按照明细网格的记录的顺序每个记录生成一次内容行，如果定义有分组，在每个分组开始与结束时，要插入分组头与分组尾。内容行拥有所有内容格，内容行显示区域被一个个内容格所划分。

##1 IGRColumnContent.BackColor = 背景色
    背景色 属性
    指定单元格的背景色。
    数据类型:整数型
    语法:对象.背景色=整数型
    特征
    可读写
    设计器中可见

##1 IGRColumnContent.GetFont = 获取字体
    获取字体 属性
    获取报表对象的缺省字体对象的引用。
    调用格式：
    〈字体〉对象．获取字体（）
    特征
    只读
    设计器中可见

##1 IGRColumnContent.GetControls = 获取部件框集合

##1 IGRColumnContent.Height = 高度
    高度属性
    部件框的显示高度。
    数据类型:双精度小数型
    语法:对象.高度=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的显示高度值。

##1 IGRColumnContent.Name = 名称
    名称属性
    指定单元格的名称标识。
    数据类型:文本型
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见
    说明
    注意：当为内容格或当为标题格而不是组标题格时，即格存在对应列，格的名称与列的名称保持一致。当改变格的名称也同时改变列的名称，反之改变列的名称也同时改变格的名称。

##1 IGRColumnContent.CanGrow = 可伸展
    可伸展属性
    指定内容格在运行时是否可以伸展高度。
    数据类型:逻辑型
    语法:对象.可伸展=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRColumnContent.CanShrink = 可收缩
    可收缩 属性
    指定内容格在运行时是否可以收缩高度。
    数据类型:逻辑型
    语法:对象.可收缩=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRColumnContent.GetParent = 获取父对象

##1 IGRColumnContent.SectionType = 节类型
    节类型 属性
    指示报表节的具体类型。
    数据类型:整数型
    语法:对象.节类型=整数型
    特征
    只读
    请参见
    报表节类型枚举

##1 IGRColumnContent.Visible = 可见性
    可见性属性
    指定列在输出时是否可见。
    数据类型:逻辑型
    语法:对象.可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为假，则本列在屏幕显示与打印生成时将被忽略掉。

##1 IGRColumnContent.FormatScript = 格式化脚本
    格式化脚本属性
    表示报表 格式化报表节事件对应的脚本语言代码。
    语法:对象.格式化脚本=文本型
    特征
    可读写
    设计器中可见

##1 IGRColumnContent.GetDetailGrid = 获取明细网格

##1 IGRColumnContent.KeepTogether = 保持同页
    保持同页属性
    是否保持本节输出显示在同一页标志。
    语法:对象.保持同页=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    仅用于打印

##1 IGRColumnContent.Cursor = 光标
属性 Cursor
    IGRColumnContent.Cursor
    光标属性
    指定在查询显示报表时，在本内容行上显示的鼠标光标。
    数据类型:整数型
    语法:对象.光标=整数型(注:显示光标枚举值)
    默认值:默认光标
    特征
    可读写
    设计器中可见

##1 IGRColumnContent.AlternatingBackColor = 交替背景色
    交替背景色属性
    指定间隔输出内容行的交替背景色。
    数据类型:整数型
    语法:对象.交替背景色=整数型
    默认值:与背景色相同
    特征
    可读写
    设计器中可见
    说明
    如果本属性值与背景色(BackColor)属性值不相同，输出时用背景色与交替背景色轮流作为内容行的背景色，此时各个内容格本身的背景色将被忽略掉。

##1 IGRColumnContent.GetContentCells = 获取内容格集合
    获取内容格集合属性
    获取拥有的内容格集合对象的接口引用。
    调用格式：〈内容格集合〉对象．获取内容格集合（）
    特征
    只读

##1 IGRColumnContent.RowsPerPage = 每页行数
    每页行数属性
    打印生成时，指定在一页中显示的行数。
    数据类型:整数型
    语法:对象.每页行数=整数型
    默认值:0
    特征
    可读写
    设计器中可见
    仅用于打印
    说明
    指定打印生成时一页中显示的内容行个数。当本属性等于0 时，按照内容行的设计高度输出显示内容行，每页中显示内容行的个数为页中可以容纳行的个数。当本属性大于0时，每页中显示的内容行个数为 RowsPerPage。默认为0。

##1 IGRColumnContent.AdjustRowHeight = 调整行高
    调整行高属性
    指定在每页输出固定行数时，是否自动调整行的高度。
    数据类型:整数型
    语法:对象.调整行高=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    仅用于打印
    说明
    本属性只有当‘每页行数(RowsPerPage)’属性的值大于0 时才有效。如果本属性为真，在生成打印页面时，自动调整每行的高度，使页面的输出区域刚好被行充满。反之则按设计的高度输出。

##0 IGRColumnContent.LoadCursorFile = 
方法 LoadCursor

##1 IGRColumnSection = 列行
    列行 接口
    明细网格的标题行与内容行的基接口。表示标题行与内容行的共同属性与方法。

##1 IGRColumnSection.BackColor = 背景色
    背景色 属性
    指定单元格的背景色。
    数据类型:整数型
    语法:对象.背景色=整数型
    特征
    可读写
    设计器中可见

##1 IGRColumnSection.GetFont = 获取字体
    获取字体 属性
    获取报表对象的缺省字体对象的引用。
    调用格式：
    〈字体〉对象．获取字体（）
    特征
    只读
    设计器中可见

##1 IGRColumnSection.GetControls = 获取部件框集合

##1 IGRColumnSection.Height = 高度
    高度属性
    部件框的显示高度。
    数据类型:双精度小数型
    语法:对象.高度=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的显示高度值。

##1 IGRColumnSection.Name = 名称
    名称属性
    指定单元格的名称标识。
    数据类型:文本型
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见
    说明
    注意：当为内容格或当为标题格而不是组标题格时，即格存在对应列，格的名称与列的名称保持一致。当改变格的名称也同时改变列的名称，反之改变列的名称也同时改变格的名称。

##1 IGRColumnSection.CanGrow = 可伸展
    可伸展属性
    指定内容格在运行时是否可以伸展高度。
    数据类型:逻辑型
    语法:对象.可伸展=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRColumnSection.CanShrink = 可收缩
    可收缩 属性
    指定内容格在运行时是否可以收缩高度。
    数据类型:逻辑型
    语法:对象.可收缩=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRColumnSection.GetParent = 获取父对象

##1 IGRColumnSection.SectionType = 节类型
    节类型 属性
    指示报表节的具体类型。
    数据类型:整数型
    语法:对象.节类型=整数型
    特征
    只读
    请参见
    报表节类型枚举

##1 IGRColumnSection.Visible = 可见性
    可见性属性
    指定列在输出时是否可见。
    数据类型:逻辑型
    语法:对象.可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为假，则本列在屏幕显示与打印生成时将被忽略掉。

##1 IGRColumnSection.FormatScript = 格式化脚本
    格式化脚本属性
    表示报表 格式化报表节事件对应的脚本语言代码。
    语法:对象.格式化脚本=文本型
    特征
    可读写
    设计器中可见

##1 IGRColumnSection.GetDetailGrid = 获取明细网格

##1 IGRColumnSection.KeepTogether = 保持同页
    保持同页 属性
    指定是否保持整个行打印生成在同一页。
    数据类型:逻辑型
    语法:对象.保持同页=逻辑型
    默认值:真
    特征:可读写
    设计器中可见
    仅用于打印
    说明
    如果本属性值为真，在当前页中不能够完整显示本节时，换新页并将本节在新页中输出。反之本节有可能被分割输出在两页中。

##1 IGRColumnContentCells = 内容格集合
    内容格集合接口
    公开内容行的所有内容格的集合对象。
    说明
    内容格伴随列的创建而创建，伴随列的移除而移除，所以在此集合对象中不提供增加与移除集合元素的方法。

##1 IGRColumnContentCells.GetItem = 获取项目
    获取项目
    方法
    根据列的顺序号或名称得到列的接口引用。
    调用格式：〈列〉对象．获取项目（通用型列名称或者序号）
    特征
    只读
    说明
    在读取时要传入一个通用型类型的参数，指定列的顺序号或名称，列的顺序号从一开始。名称在匹配时不区分字母大小写。

##0 IGRColumnContentCells.Get_NewEnum = 


##1 IGRColumnContentCells.Count = 数目
    数目属性
    指示拥有内容格的个数。
    特征
    只读

##1 IGRColumnContentCells.IndexByName = 根据名称得序号
    根据名称得序号
    方法
    根据内容格的名称取得其顺序号，如果不存在与名称匹配的内容格，则返回值为-1。内容格的名称不区分字母的大小写。
    调用格式：〈整数型〉对象．根据名称得序号（文本型内容格名称）
    如果存在名称匹配的内容格，返回内容格的顺序号，否则返回-1。

##1 IGRColumnContentCell = 内容格
    内容格接口
    表示明细网格的内容行中每个列对应的内容格，内容行拥有一组内容格。
    有关此接口所有成员的列表，请参阅IGRColumnContentCell
    成员。
    派生关系
    父类: 单元格
    说明
    每当增加一个明细网格的列之后，都会在内容行添加一个对应的显示单元格，此种显示单元格称为内容格。一般每个内容格关联一个字段，用来显示字段的内容。如果把内容格设为自由格，则内容格成为部件框容器，可以向内容格添加部件框。

##1 IGRColumnContentCell.Name = 名称
    名称属性
    指定单元格的名称标识。
    数据类型:文本型
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见
    说明
    注意：当为内容格或当为标题格而不是组标题格时，即格存在对应列，格的名称与列的名称保持一致。当改变格的名称也同时改变列的名称，反之改变列的名称也同时改变格的名称。

##1 IGRColumnContentCell.BackColor = 背景色
    背景色 属性
    指定单元格的背景色。
    数据类型:整数型
    语法:对象.背景色=整数型
    特征
    可读写
    设计器中可见

##1 IGRColumnContentCell.ForeColor = 文字色
    文字色属性
    指定单元格的输出文本的文字颜色。
    数据类型:整数型
    语法:对象.文字色=整数型
    默认值:0(注:黑色)
    特征
    可读写
    设计器中可见
    说明
    注意：只有在格是非自由格时，才允许使用本属性。

##1 IGRColumnContentCell.GetFont = 获取字体
    获取字体 属性
    获取报表对象的缺省字体对象的引用。
    调用格式：
    〈字体〉对象．获取字体（）
    特征
    只读
    设计器中可见

##1 IGRColumnContentCell.WordWrap = 文字绕行
    文字绕行属性
    指定文字是否折行输出的标志。
    数据类型:逻辑型
    语法:对象.文字绕行=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为真，文字可以折行输出，否则不论文字多少，只在一行中输出文字。
    注意：只有在格不是自由格时，才允许使用本属性。

##1 IGRColumnContentCell.EndEllipsis = 省略点显示文字
    省略点显示文字属性
    指定是否用省略号表示超出单元格范围的文字。
    数据类型:逻辑型
    语法:对象.省略点显示文字=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为真，用省略号（...）表示超出格范围的文字。
    注意：只有在格不是自由格时，才允许使用本属性。

##1 IGRColumnContentCell.TextAlign = 文字对齐方式
    文字对齐方式 属性
    指定显示文本的文字对齐方式。
    数据类型:整数型
    语法:对象.文字对齐方式=整数型(注:文字对齐方式枚举值)
    特征
    可读写
    设计器中可见
    说明
    注意：只有在格不是自由格时，才允许使用本属性。

##1 IGRColumnContentCell.FreeCell = 自由格
属性 FreeCell
    IGRColumnContentCell.FreeCell
    自由格属性
    指定本单元格是否为自由格。
    数据类型:逻辑型
    语法:对象.自由格=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见
    说明
    当本属性为真时，格为自由格，单元格成为部件框容器，可以添加任意个数，自由排列的部件框到格中；当本属性为假时，单元格不是部件框容器，不能向格中插入部件框，格本身可以显示输出文本。

##1 IGRColumnContentCell.GetControls = 获取部件框集合

##1 IGRColumnContentCell.GetColumn = 获取列

##1 IGRColumnContentCell.PrintType = 打印类别
    打印类别 属性
    部件框的打印输出方式。
    数据类型:整数型
    语法:对象.打印类别=整数型(注:打印类型枚举值)
    特征
    可读写
    设计器中可见
    仅用于打印

    请参见
    打印类别枚举

##1 IGRColumnContentCell.ShowMoneyLabel = 显示财务金额标签
    显示财务金额标签属性
    指定是否在此单元格中显示金额标签。
    语法:对象.显示财务金额标签=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见
    说明
    注意：只有在格不是自由格时，才允许使用本属性。

##1 IGRColumnContentCell.ShowMoneyLine = 显示财务金额线
    显示财务金额线属性
    指定是否在此单元格中将值显示成金额线格式。
    数据类型:逻辑型
    语法:对象.显示财务金额线=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见
    说明
    注意：只有在格不是自由格时，才允许使用本属性。

##1 IGRColumnContentCell.ShrinkFontToFit = 缩小适应
    缩小适应属性
    在文字框的显示区域不能完整显示出文字内容时，指定是否自动缩小文字大小让文字完整显示出来。
    语法:对象.缩小适应=逻辑型
    默认值
    假
    特征
    可读写
    设计器中可见
    仅用于打印

##1 IGRColumnContentCell.GetParent = 获取父对象

##1 IGRColumnContentCell.DataField = 数据字段
    数据字段 属性
    指定本内容格关联的记录集字段的名称，在运行时将显示关联字段的显示文字。
    数据类型:文本型
    语法:对象.数据类型=文本型
    特征
    可读写
    设计器中可见
    说明
    注意：本属性只能在内容格为非自由格时使用。

##1 IGRColumnContentCell.CanGrow = 可伸展
    可伸展属性
    指定内容格在运行时是否可以伸展高度。
    数据类型:逻辑型
    语法:对象.可伸展=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRColumnContentCell.CanShrink = 可收缩
    可收缩 属性
    指定内容格在运行时是否可以收缩高度。
    数据类型:逻辑型
    语法:对象.可收缩=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRColumnContentCell.Cursor = 光标
    指定在查询显示报表时，在本内容格上显示的鼠标光标。
    GRDisplay CursorCursor
    默认值
    grdc Default
    特征
    可读写
    设计器中可见
    说明
    如果本属性为grdc Default，内容格将把内容行的光标作为默认光标。

##0 IGRColumnContentCell.LoadCursorFile = 
方法 LoadCursor

##1 IGRColumnCell = 单元格
    单元格接口
    明细网格中单元格接口的基接口。
    说明
    明细网格的标题行与内容行的显示区域划分为一个个的单元格，单元格可以直接显示文字，也可以作为部件框容器使用，作为部件框容器的单元格称为自由格。标题行中的单元格称为标题格，内容行中的单元格称为内容格。

##1 IGRColumnCell.Name = 名称
    名称属性
    指定单元格的名称标识。
    数据类型:文本型
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见
    说明
    注意：当为内容格或当为标题格而不是组标题格时，即格存在对应列，格的名称与列的名称保持一致。当改变格的名称也同时改变列的名称，反之改变列的名称也同时改变格的名称。

##1 IGRColumnCell.BackColor = 背景色
    背景色 属性
    指定单元格的背景色。
    数据类型:整数型
    语法:对象.背景色=整数型
    特征
    可读写
    设计器中可见

##1 IGRColumnCell.ForeColor = 文字色
    文字色属性
    指定单元格的输出文本的文字颜色。
    数据类型:整数型
    语法:对象.文字色=整数型
    默认值:0(注:黑色)
    特征
    可读写
    设计器中可见
    说明
    注意：只有在格是非自由格时，才允许使用本属性。

##1 IGRColumnCell.GetFont = 获取字体
    获取字体 属性
    获取报表对象的缺省字体对象的引用。
    调用格式：
    〈字体〉对象．获取字体（）
    特征
    只读
    设计器中可见

##1 IGRColumnCell.WordWrap = 文字绕行
    文字绕行属性
    指定文字是否折行输出的标志。
    数据类型:逻辑型
    语法:对象.文字绕行=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为真，文字可以折行输出，否则不论文字多少，只在一行中输出文字。
    注意：只有在格不是自由格时，才允许使用本属性。

##1 IGRColumnCell.EndEllipsis = 省略点显示文字
    省略点显示文字属性
    指定是否用省略号表示超出单元格范围的文字。
    数据类型:逻辑型
    语法:对象.省略点显示文字=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为真，用省略号（...）表示超出格范围的文字。
    注意：只有在格不是自由格时，才允许使用本属性。

##1 IGRColumnCell.TextAlign = 文字对齐方式
    文字对齐方式 属性
    指定显示文本的文字对齐方式。
    数据类型:整数型
    语法:对象.文字对齐方式=整数型(注:文字对齐方式枚举值)
    特征
    可读写
    设计器中可见
    说明
    注意：只有在格不是自由格时，才允许使用本属性。

##1 IGRColumnCell.FreeCell = 自由格
    自由格属性
    指定本单元格是否为自由格。
    数据类型:逻辑型
    语法:对象.自由格=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见
    说明
    当本属性为真时，格为自由格，单元格成为部件框容器，可以添加任意个数，自由排列的部件框到格中；当本属性为假时，单元格不是部件框容器，不能向格中插入部件框，格本身可以显示输出文本。

##1 IGRColumnCell.GetControls = 获取部件框集合

##1 IGRColumnCell.GetColumn = 获取列

##1 IGRColumnCell.PrintType = 打印类别
    打印类别 属性
    指定单元格的打印生成类别。
    数据类型:整数型
    语法:对象.打印类别=整数型(注:打印类型枚举值)
    默认值:套打内容
    特征:可读写
    设计器中可见
    说明
    注意：只有在格不是自由格时，才允许使用本属性。

##1 IGRColumnCell.ShowMoneyLabel = 显示财务金额标签
    显示财务金额标签属性
    指定是否在此单元格中显示金额标签。
    语法:对象.显示财务金额标签=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见
    说明
    注意：只有在格不是自由格时，才允许使用本属性。

##1 IGRColumnCell.ShowMoneyLine = 显示财务金额线
属性 ShowMoneyLine
    IGRColumnCell.ShowMoneyLine
    显示财务金额线属性
    指定是否在此单元格中将值显示成金额线格式。
    数据类型:逻辑型
    语法:对象.显示财务金额线=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见
    说明
    注意：只有在格不是自由格时，才允许使用本属性。

##1 IGRColumn = 列
    列接口
    表示明细网格的列。明细网格拥有一组列，整个明细网格在垂直方向上按列切分。
    有关此接口所有成员的列表，请参阅IGRColumn成员。

##1 IGRColumn.Tag = 标记


##1 IGRColumn.Name = 名称
    名称 属性
    列的名称标识，必须保证每个列的名称唯一。
    数据类型:文本型
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见
    说明
    列的名称标识，必须保证每个列的名称唯一。列、对应标题格与对应内容格三者的名称始终保持一致，改变其中任一个的名称也会同时改变另外两者的名称。

##1 IGRColumn.Visible = 可见性
    可见性属性
    指定列在输出时是否可见。
    数据类型:逻辑型
    语法:对象.可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为假，则本列在屏幕显示与打印生成时将被忽略掉。

##1 IGRColumn.Width = 宽度
    宽度 属性
    列的显示宽度。
    数据类型:双精度小数型
    语法:对象.宽度=双精度小数型
    特征
    可读写
    设计器中可见
    说明
    列的显示宽度，以报表使用的计量单位表示的输出宽度值。此属性代表列在设计时的宽度，当其输出时显示的宽度有可能与设计时的宽度不一致。例如，当明细网格的打印方法为列适应输出区域宽度，则列的宽度将按比例进行伸缩以刚好适应输出页面的输出区域宽度。

##1 IGRColumn.GetTitleCell = 获取标题格

##1 IGRColumn.GetContentCell = 获取内容格

##1 IGRColumn.GetParent = 获取父对象

##1 IGRColumnTitleCell = 标题格
    标题格 接口
    表示明细网格的标题行中的标题格。每个列对应一个标题格，一个拥有下级标题格的标题格称为组标题格，组标题格不与某个具体的列唯一对应。
    说明
    每当增加一个明细网格的列之后，都会在标题行添加一个对应的显示单元格。当我们需要定义多层标题时，具有下级标题的标题也要在标题行添加一个对应的显示单元格，这两种类型的单元格称为标题格。一般在明细网格的标题格中定义列的标题文字。如果把标题格设为自由格，则标题格成为部件框容器，可以向标题格添加部件框。

##1 IGRColumnTitleCell.Name = 名称
    名称属性
    指定单元格的名称标识。
    数据类型:文本型
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见
    说明
    注意：当为内容格或当为标题格而不是组标题格时，即格存在对应列，格的名称与列的名称保持一致。当改变格的名称也同时改变列的名称，反之改变列的名称也同时改变格的名称。

##1 IGRColumnTitleCell.BackColor = 背景色
    背景色 属性
    指定单元格的背景色。
    数据类型:整数型
    语法:对象.背景色=整数型
    特征
    可读写
    设计器中可见

##1 IGRColumnTitleCell.ForeColor = 文字色
    文字色属性
    指定单元格的输出文本的文字颜色。
    数据类型:整数型
    语法:对象.文字色=整数型
    默认值:0(注:黑色)
    特征
    可读写
    设计器中可见
    说明
    注意：只有在格是非自由格时，才允许使用本属性。

##1 IGRColumnTitleCell.GetFont = 获取字体
    获取字体 属性
    获取报表对象的缺省字体对象的引用。
    调用格式：
    〈字体〉对象．获取字体（）
    特征
    只读
    设计器中可见

##1 IGRColumnTitleCell.WordWrap = 文字绕行
    文字绕行属性
    指定文字是否折行输出的标志。
    数据类型:逻辑型
    语法:对象.文字绕行=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为真，文字可以折行输出，否则不论文字多少，只在一行中输出文字。
    注意：只有在格不是自由格时，才允许使用本属性。

##1 IGRColumnTitleCell.EndEllipsis = 省略点显示文字
    省略点显示文字属性
    指定是否用省略号表示超出单元格范围的文字。
    数据类型:逻辑型
    语法:对象.省略点显示文字=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为真，用省略号（...）表示超出格范围的文字。
    注意：只有在格不是自由格时，才允许使用本属性。

##1 IGRColumnTitleCell.TextAlign = 文字对齐方式
    文字对齐方式 属性
    指定显示文本的文字对齐方式。
    数据类型:整数型
    语法:对象.文字对齐方式=整数型(注:文字对齐方式枚举值)
    特征
    可读写
    设计器中可见
    说明
    注意：只有在格不是自由格时，才允许使用本属性。

##1 IGRColumnTitleCell.FreeCell = 自由格
    自由格属性
    指定本单元格是否为自由格。
    数据类型:逻辑型
    语法:对象.自由格=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见
    说明
    当本属性为真时，格为自由格，单元格成为部件框容器，可以添加任意个数，自由排列的部件框到格中；当本属性为假时，单元格不是部件框容器，不能向格中插入部件框，格本身可以显示输出文本。

##1 IGRColumnTitleCell.GetControls = 获取部件框集合

##1 IGRColumnTitleCell.GetColumn = 获取列

##1 IGRColumnTitleCell.PrintType = 打印类别
    打印类别 属性
    部件框的打印输出方式。
    数据类型:整数型
    语法:对象.打印类别=整数型(注:打印类型枚举值)
    特征
    可读写
    设计器中可见
    仅用于打印
    请参见
    打印类别枚举

##1 IGRColumnTitleCell.ShowMoneyLabel = 显示财务金额标签
    显示财务金额标签属性
    指定是否在此单元格中显示金额标签。
    语法:对象.显示财务金额标签=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见
    说明
    注意：只有在格不是自由格时，才允许使用本属性。

##1 IGRColumnTitleCell.ShowMoneyLine = 显示财务金额线
    显示财务金额线属性
    指定是否在此单元格中将值显示成金额线格式。
    数据类型:逻辑型
    语法:对象.显示财务金额线=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见
    说明
    注意：只有在格不是自由格时，才允许使用本属性。

##1 IGRColumnTitleCell.Visible = 可见性
    可见性 属性
    指定是否显示本标题格。
    数据类型:逻辑型
    语法:对象.可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    当标题格不是组标题格时，本属性与其对应的列的 可见性
    属性保持一致。当标题格是组标题格时，当本属性为假时，本组标题格所包含的所有列在输出时都将被忽略掉，而不管所包含的列自身的 可见性
    属性为何值。

##1 IGRColumnTitleCell.GroupTitle = 获取标题行
    是否组标题格 属性
    指定本标题格是否为组标题格。
    数据类型:文本型
    特征:只读
    说明
    本属性为真，标题格称为组标题格。组标题格不是由列自动创建，也不与一个列关联。组标题格包含数个下级标题格，从而使网格标题具有层次关系。

##1 IGRColumnTitleCell.Text = 文字
    文字 属性
    指定标题格的显示文本。
    数据类型:文本型
    语法:对象.文字=文本型
    特征:可读写
    设计器中可见
    说明
    注意：本属性只能在标题格为非自由格时使用。

##1 IGRColumnTitleCell.Height = 高度
    高度属性
    部件框的显示高度。
    数据类型:双精度小数型
    语法:对象.高度=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的显示高度值。

##1 IGRColumnTitleCell.GetParent = 获取父对象

##1 IGRColumnTitleCell.GetSubTitles = 获取下级标题格集合

##1 IGRColumnTitleCell.EncloseColumn = 包含列
    包含列方法
    将一个列对应的标题格包含到此组标题格中，新包含进来的列标题格在显示顺序上处于本组的最后。
    调用格式：〈无返回值〉对象．包含列（通用型列索引）
    参数
    列索引:指定被包含列的名称或顺序号。
    说明
    只有当标题格为组标题格时，才能调用本方法。

##1 IGRColumnTitleCell.AddSubGroupTitle = 增加下级组标题格
    增加下级组标题格方法
    在此组标题格中增加一个下级组标题格。
    调用格式：〈标题格〉对象．增加下级组标题格（文本型
    名称，文本型标题）
    返回值:标题格
    新增下级组标题格对象的接口引用。
    参数
    名称
    新增组标题格的名称标识。
    标题
    新增组标题格的显示文本。
    说明
    在一个组标题格中，如果还需要包括下级组标题格，则调用本方法进行定义。

##1 IGRColumnTitle = 标题行
    标题行接口
    表示明细网格的标题行的接口。其拥有一组标题格，标题格在显示排列上具有层次关系，可以定义多层表头。
    说明
    标题行一般显示在明细网格的最上端，通常只在明细网格开始时输出一次。标题行拥有所有标题格，标题行显示区域被一个个标题格所划分。

##1 IGRColumnTitle.BackColor = 背景色
    背景色 属性
    指定单元格的背景色。
    数据类型:整数型
    语法:对象.背景色=整数型
    特征
    可读写
    设计器中可见

##1 IGRColumnTitle.GetFont = 获取字体
    获取字体 属性
    获取报表对象的缺省字体对象的引用。
    调用格式：
    〈字体〉对象．获取字体（）
    特征
    只读
    设计器中可见

##1 IGRColumnTitle.GetControls = 获取部件框集合

##1 IGRColumnTitle.Height = 高度
    高度属性
    部件框的显示高度。
    数据类型:双精度小数型
    语法:对象.高度=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的显示高度值。

##1 IGRColumnTitle.Name = 名称
    名称属性
    指定单元格的名称标识。
    数据类型:文本型
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见
    说明
    注意：当为内容格或当为标题格而不是组标题格时，即格存在对应列，格的名称与列的名称保持一致。当改变格的名称也同时改变列的名称，反之改变列的名称也同时改变格的名称。

##1 IGRColumnTitle.CanGrow = 可伸展
    可伸展属性
    指定内容格在运行时是否可以伸展高度。
    数据类型:逻辑型
    语法:对象.可伸展=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRColumnTitle.CanShrink = 可收缩
    可收缩 属性
    指定内容格在运行时是否可以收缩高度。
    数据类型:逻辑型
    语法:对象.可收缩=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRColumnTitle.GetParent = 获取父对象

##1 IGRColumnTitle.SectionType = 节类型
    节类型 属性
    指示报表节的具体类型。
    数据类型:整数型
    语法:对象.节类型=整数型
    特征
    只读
    请参见
    报表节类型枚举

##1 IGRColumnTitle.Visible = 可见性
    可见性属性
    指定列在输出时是否可见。
    数据类型:逻辑型
    语法:对象.可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为假，则本列在屏幕显示与打印生成时将被忽略掉。

##1 IGRColumnTitle.FormatScript = 格式化脚本
    格式化脚本属性
    表示报表 格式化报表节事件对应的脚本语言代码。
    语法:对象.格式化脚本=文本型
    特征
    可读写
    设计器中可见

##1 IGRColumnTitle.GetDetailGrid = 获取明细网格

##1 IGRColumnTitle.KeepTogether = 保持同页
    保持同页属性
    是否保持本节输出显示在同一页标志。
    语法:对象.保持同页=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    仅用于打印

##1 IGRColumnTitle.GetTitleCells = 获取标题格集合

##1 IGRColumnTitle.RepeatStyle = 重复方式
    重复方式属性
    在打印生成时，指定明细网格标题的重复输出方式。
    数据类型:整数型
    语法:对象.重复方式=整数型(注:重复方式枚举值)
    默认值:不应用
    特征
    可读写
    设计器中可见
    仅用于打印
    说明
    一般标题行只在明细网格的开始位置输出显示一次，当指定重复方式之后，标题行就可以多次输出。
    重复方式枚举

##1 IGRColumnTitleCells = 标题格集合
    标题格集合接口
    标题行的拥有的标题格集合对象的接口。
    与列对应的标题格伴随列的创建而创建，伴随列的移除而移除，但组标题格不存在唯一对应的列，其创建与移除独立于列，所以在此集合对象中不提供增加与移除集合元素的通常方法，但提供增加组标题格与删除组标题格方法专门用来增加与移除组标题格。

##1 IGRColumnTitleCells.Count = 数目
    数目 属性
    指示拥有标题格的个数。
    特征
    只读

##1 IGRColumnTitleCells.GetItem = 获取项目
    获取项目 方法
    根据列的顺序号或名称得到列的接口引用。
    调用格式：〈列〉对象．获取项目（通用型列名称或者序号）
    特征
    只读
    说明
    在读取时要传入一个通用型类型的参数，指定列的顺序号或名称，列的顺序号从一开始。名称在匹配时不区分字母大小写。

##0 IGRColumnTitleCells.Get_NewEnum = 


##1 IGRColumnTitleCells.IndexByName = 根据名称得序号
    根据名称得序号方法
    根据标题格的名称取得其顺序号，如果不存在与名称匹配的标题格，则返回-1。标题格的名称不区分字母大小写。
    调用格式：〈整数型〉对象．根据名称得序号（文本型名称）
    如果有匹配的标题格，返回其顺序号，否则返回-1。
    参数
    名称
    指定查找标题格的名称。

##1 IGRColumnTitleCells.AddGroup = 增加组标题格
    增加组标题格方法
    增加一个组标题格。
    调用格式：〈标题格〉对象．增加组标题格（文本型名称，文本型标题）
    新增组标题格的接口引用。

    参数
    名称	    新增组标题格的名称。
    标题	    新增组标题格的显示文本。

##1 IGRColumnTitleCells.RemoveGroup = 删除组标题格
    删除组标题格方法
    根据组标题格的顺序号或名称移除一个组标题格。
    调用格式：〈无返回值〉对象．删除组标题格（通用型名称或序号）
    参数
    名称或序号
    指示准备移除的组标题格的顺序号或名称。
    说明
    根据组标题格的顺序号或名称移除一个组标题格。只有当指定名称或序号的标题格存在，并且此标题格是组标题格时，才能成功移除标题格。

##0 GRRepeatStyle = 重复方式枚举
GRRepeatStyle
    重复方式枚举
    指定明细网格标题的重复输出方式。

    成员名称		    说明
    不应用		    明细网格标题不重复输出。
    分组头		    明细网格标题在每个分组投行之后重复输出。
    页			    明细网格标题在每页重复输出。
    页栏		    明细网格标题在每个页栏重复输出。

    说明
    如果为不重复输出方式，则只在明细网格打印生成的开始时输出一次标题。如果为每页重复方式或每页列重复方式,则在明细网格打印生成的开始时与产生新页或新页列时输出标题。如果为在分组头上重复方式，则在明细网格打印生成的开始时不输出报表头，而是在每个分组头输出后输出标题。

##1 tagGRRepeatStyle = 重复方式枚举
tagGRRepeatStyle
    重复方式枚举
    指定明细网格标题的重复输出方式。

    成员名称		    说明
    不应用		    明细网格标题不重复输出。
    分组头		    明细网格标题在每个分组投行之后重复输出。
    页			    明细网格标题在每页重复输出。
    页栏		    明细网格标题在每个页栏重复输出。

    说明
    如果为不重复输出方式，则只在明细网格打印生成的开始时输出一次标题。如果为每页重复方式或每页列重复方式,则在明细网格打印生成的开始时与产生新页或新页列时输出标题。如果为在分组头上重复方式，则在明细网格打印生成的开始时不输出报表头，而是在每个分组头输出后输出标题。

##1 tagGRRepeatStyle.grrsNone = 不应用


##1 tagGRRepeatStyle.grrsOnPage = 页


##1 tagGRRepeatStyle.grrsOnPageColumn = 页栏


##1 tagGRRepeatStyle.grrsOnGroupHeader = 分组头
tagGRRepeatStyle.grrsOnGroupHeader
    分组头接口
    表示明细网格分组的分组头。分组头显示在每个分组的第一行。
    说明
    一个报表可以定义一个或多个嵌套分组，每个分组对应一个分组头与一个分组尾。分组头显示在每个分组开始位置，一般在分组头上定义分组的标识信息，分组初始值及其它只需在分组开始时显示一次的信息。

##1 IGRColumns = 列集合
    列集合接口
    公开明细网格的所有列的集合对象。

##1 IGRColumns.GetItem = 获取项目
    获取项目  方法
    根据列的顺序号或名称得到列的接口引用。
    调用格式：〈列〉对象．获取项目（通用型列名称或者序号）
    特征
    只读
    说明
    在读取时要传入一个通用型类型的参数，指定列的顺序号或名称，列的顺序号从一开始。名称在匹配时不区分字母大小写。

##0 IGRColumns.Get_NewEnum = 


##1 IGRColumns.Count = 数目
    数目属性
    指示拥有列的个数。
    特征
    只读

##1 IGRColumns.Add = 增加
    增加方法
    增加一个列并返回新增列的接口引用。
    调用格式：〈列〉对象．增加（）
    新增列的接口引用。

##1 IGRColumns.Remove = 删除
    删除方法
    根据列的顺序号或名称将列移除。
    调用格式：〈无返回值〉对象．删除（通用型列名称或序号）
    指定列的顺序号或名称。

##1 IGRColumns.IndexByName = 根据名称得序号
    根据名称得序号方法
    根据列的名称取得其顺序号，如果不存在与名称匹配的列，则返回值为-1。列的名称不区分字母的大小写。
    调用格式：〈整数型〉对象．根据名称得序号（文本型列名称）
    如果存在名称匹配的列，返回列的顺序号，否则返回-1。

##1 IGRColumns.RemoveAll = 全部删除
    全部删除 方法
    清除全部列。

##1 IGRGroups = 分组集合
    公开明细网格的所分组的集合对象。


##1 IGRGroups.GetItem = 获取项目
    根据列的顺序号或名称得到列的接口引用。
    说明
    在读取时要传入一个通用型类型的参数，指定列的顺序号或名称，列的顺序号从一开始。名称在匹配时不区分字母大小写。

##0 IGRGroups.Get_NewEnum = 


##1 IGRGroups.Count = 数目
    数目 属性
    指示拥有分组的个数。
    特征
    只读

##1 IGRGroups.Add = 增加
    增加 方法
    增加一个分组并返回新增分组的接口引用。
    返回值

##1 IGRGroups.Remove = 删除
    删除方法
    根据分组的顺序号或名称将分组移除，在输入参数种指定要移除分组的顺序号或名称。
    调用格式：〈无返回值〉对象．删除（通用型I顺序号或名称）
    参数:指定分组的顺序号或名称。

##1 IGRGroups.IndexByName = 根据名称得序号
    根据名称得序号方法
    根据分组的名称取得其顺序号，如果不存在与名称匹配的分组，则返回-1。分组的名称不区分字母的大小写。
    调用格式：〈整数型〉对象．根据名称得序号（文本型名称）
    返回值:如果有匹配的分组，返回其顺序号，否则返回-1。
    参数
    名称:指定分组的名称。

##1 IGRGroups.RemoveAll = 全部删除
    全部删除方法
    清除全部分组。
    调用格式：
    〈无返回值〉对象．全部删除（）

##1 IGRRecordset = 数据集
    数据集接口
    表示明细网格的记录集。拥有一组字段，在报表运行时可以读取与添加记录数据。

##1 IGRRecordset.Tag = 标记
标记

##1 IGRRecordset.GetFields = 获取字段集合
获取拥有的字段集合对象的接口引用。

##1 IGRRecordset.ConnectionString = 链接串
与数据源连接的参数文字串,具体请参见相关数据库的说明。

##1 IGRRecordset.QuerySQL = 查询SQL
从数据源中取数的SQL语句,具体要求请根据特定数据库SQL语法而定。

##1 IGRRecordset.SkipQuery = 忽略数据绑定
指示在生成报表时，是否忽略从数据源取数的属性设置。

##1 IGRRecordset.RecordCount = 记录数
指示记录集中的记录条数。

##1 IGRRecordset.RecordNo = 记录号
指示当前记录的记录号，记录号从1开始。

##1 IGRRecordset.SortFields = 排序字段
指定在报表生成时对记录进行排序的依据字段。
    说明: 如果设置了本属性，在记录集记录填充完成之后和对记录进行处理之前，报表引擎会根据排序字段对记录进行排序。如果要按多个字段进行排序，字段名称之间用‘;’隔开。

##1 IGRRecordset.SortAsc = 升序排序
指定是否按升序排列记录,本属性为真,则排序时按升序排序,返之则按降序排序。

##1 IGRRecordset.SortCaseSensitive = 大小写区分排序
当排序字段为字符型时，指定排序比较是否为大小写字符敏感。
    默认值:假

##1 IGRRecordset.Editable = 可编辑
指定记录集在报表运行时是否为可编辑。
    默认值:真

##0 IGRRecordset.RelationFields = 主从关联字段


##0 IGRRecordset.FullRelate = 


##1 IGRRecordset.FetchRecordScript = 请求记录事件脚本
请求记录事件脚本

##1 IGRRecordset.BeforePostRecordScript = 提交记录前脚本
表示报表 提交记录之前事件对应的脚本语言代码。

##1 IGRRecordset.ProcessRecordScript = 生成记录处理脚本
表示报表 记录记录事件对应的脚本语言代码。

##1 IGRRecordset.PageProcessRecordScript = 打印生成记录处理脚本
表示报表页处理记录事件对应的脚本语言代码。

##1 IGRRecordset.Append = 追加
添加一条记录。
     说明
    在调用追加方法之后，然后向各个字段赋值，最后调用提交方法将新记录提交。新记录只有提交之后才会存储打记录集中。此方法只能在 请求记录事件响应函数中使用。

##1 IGRRecordset.Edit = 编辑
使当前记录进入可编辑状态，从而可以改变字段的值。
    说明
    只有当报表处于运行时且记录集是可以编辑的，才能成功使当前记录进入可编辑状态。在记录进入可编辑状态之后，可以给各个字段赋值，最后调用 提交
    方法将编辑后的记录保存到记录集中；也可以调用取消方法取消编辑改变，将当前记录还原为原来的数据。
    注意：不能在记录编辑状态中改变不定长字符字段与二进制字段的值。

##1 IGRRecordset.Cancel = 取消
取消当前记录的可编辑状态，并还原记录的原来数据。

##1 IGRRecordset.Post = 提交
提交新增记录。
     说明
    在调用追加方法之后，然后向各个字段赋值，最后调用提交方法将新记录提交。新记录只有提交之后才会存储打记录集中。此方法只能在 请求记录数据事件响应函数中使用。

##1 IGRRecordset.First = 第一条
使第一条记录成为当前记录。
    调用格式：〈无返回值〉对象．第一条（）

##1 IGRRecordset.Next = 下一条
使当前记录的下一条记录成为当前记录。
    说明
    如果当前记录已经是最后一条记录，调用下一条方法将使记录集游标位于记录尾。

##1 IGRRecordset.Prior = 上一条
使当前记录的上一条记录成为当前记录。
    说明
    如果当前记录已经是第一条记录，调用本方法将使记录集游标位于记录头。

##1 IGRRecordset.Last = 最后一条
使最后一条记录成为当前记录。

##1 IGRRecordset.MoveBy = 相对移动
将游标向前或向后移动指定个数的记录。

##1 IGRRecordset.MoveBy.Delta = 移动距离
当前记录移动偏移量，为正向前移动，为负向后移动。

##1 IGRRecordset.Bof = 记录头
判断记录集的游标是否位于第一条记录之前。游标位于第一条记录之前，返回真，否则返回假。

说明

当游标位于第一条记录之前，各个字段的值为第一条记录的数据。当记录集中不存在记录时，始终返回真。

##1 IGRRecordset.Eof = 记录尾
判断记录集的游标是否位于最后一条记录之后。
游标位于最后一条记录之后，返回真，否则返回假。

说明

当游标位于最后一条记录之后，各个字段的值为最后一条记录的数据。当记录集中不存在记录时，始终返回真。

##1 IGRRecordset.MoveTo = 移动到
将记录集的当前记录设为指定记录号的记录。

##1 IGRRecordset.MoveTo.RecordNo = 记录号
指定移动到目标记录的记录号。

##1 IGRRecordset.Empty = 清空
请空记录集中的全部记录。

##1 IGRRecordset.AddField = 增加字段
增加一个字段。
    返回值:字段,返回新增字段对象的接口引用。

##1 IGRRecordset.AddField.Name = 字段名称
指定字段的名称标识。

##1 IGRRecordset.AddField.FieldType = 字段类型
指定字段的类型。

##1 IGRRecordset.RemoveAllFields = 清空字段
删除所有的字段定义。

##1 IGRRecordset.Resort = 重排序
对记录集中的记录进行重新排序。
    调用格式：
    〈逻辑型〉对象．重排序（文本型排序字段，逻辑型 是否升序排序，逻辑型是否大小写敏感）
    参数
    排序字段:指定排序字段，如果要按多个字段进行排序，字段名称之间用‘;’隔开。
    是否升序排序:指定是否按升序进行排序。
    

##1 IGRRecordset.Resort.Fields = 排序字段
指定排序字段，如果要按多个字段进行排序，字段名称之间用‘;’隔开。

##1 IGRRecordset.Resort.Ascending = 是否升序排序
指定是否按升序进行排序,为真为升序，为假为降序。

##1 IGRRecordset.Resort.CaseSensitive = 是否大小写敏感
指定字符进行排序比较时是否大小写敏感。

##1 IGRFields = 字段集合
IGRFields
    字段集合 接口
    公开记录集的所有字段的集合对象。

##1 IGRFields.GetItem = 获取项目
根据列的顺序号或名称得到列的接口引用。
    说明: 在读取时要传入一个通用型类型的参数，指定列的顺序号或名称，列的顺序号从一开始。名称在匹配时不区分字母大小写。

##1 IGRFields.GetItem.Index = 列名称或者序号


##0 IGRFields.Get_NewEnum = 


##1 IGRFields.Count = 数目
指示拥有字段的个数。

##1 IGRFields.Add = 增加
根据字段类型参数增加一个字段并返回新增字段的接口引用。

##1 IGRFields.Remove = 删除
根据字段的顺序号或名称将字段移除，在输入参数种指定要移除字段的顺序号或名称。

##1 IGRFields.Remove.Index = 顺序号或名称
指定字段的顺序号或名称。

##1 IGRFields.IndexByName = 根据名称得序号
根据字段的名称取得其顺序号，如果不存在与名称匹配的字段，则返回-1。字段的名称不区分字母的大小写。 如果有匹配的字段，返回其顺序号，否则返回-1。

##1 IGRFields.IndexByName.Name = 名称
指定字段的名称。

##1 IGRFields.RemoveAll = 全部删除
删除报表数据集全部字段。

##1 IGRField = 字段
    字段接口
    定义各种类型的数据字段的类。
    说明
    定义记录的每个数据项，字段存储的数据类型由子段的类型确定。在运行时，记录的读写就是通过各个字段值的读写实现。在编辑记录时，不允许对不定长字符字段与二进制字段进行改变。

##1 IGRField.Tag = 标识


##1 IGRField.Name = 名称
获取或设置字段的名称标识。

##1 IGRField.FieldType = 字段类型
获取或设置字段的数据类型。
    默认值:字符

##1 IGRField.IsNull = 为空
获取字段值是否为空的标志。

##1 IGRField.DisplayText = 显示文字
获取或设置部件框的输出显示文本。
    说明: 获取或设置部件框的输出显示文本。只有在运行时才能使用本属性，当不能由Grid++Report根据字段的值自动产生显示文本时，在请求字段显示文字事件中为字段的显示文字属性赋一个新的显示文本。
    例如当需要将金额的负数值显示为红字时，需要将数字显示文字前面的负号去掉，就必须响应请求字段显示文字事件并使用显示文字属性。

    请参见

##1 IGRField.GetValue = 获取值
获取字段在运行时的值。

##1 IGRField.Format = 格式串
获取或设置将字段值转换为显示文本时所应用的格式文字串。
    说明
    本属性只对布尔、整数、浮点数、货币及日期时间类型的字段有效。
   
下表列出数字格式串中字符的含义：
字符 含义 
0 数字占位符。显示一个数字或 0。如果表达式在格式字符串中出现 0 的位置上有数字，则显示该数字；否则在该位置显示 0。 如果数字的位数少于格式表达式中 0 的个数（小数点任一侧），则显示前导零或尾随零。如果数字的小数点分隔符右侧的位数多于格式表达式中小数点分隔符右侧零的个数，则将数字舍入到与零的个数相同的小数位置。如果数字的小数点分隔符左侧的位数多于格式表达式中小数点分隔符左侧零的个数，则不做任何修改地显示额外的数字。
 
# 数字占位符。显示一个数字或不显示任何数字。如果表达式在格式字符串中出现 # 字符的位置上有数字，则显示该数字；否则该位置不显示任何数字。 
该符号与 0 数字占位符的作用相似，不同的是当数字的位数少于格式表达式中小数点分隔符任一侧 # 字符的个数时，不显示前导零和尾随零
 
. 小数点占位符。小数点占位符确定小数点分隔符两侧显示的数字个数。如果格式表达式中该符号的左侧只包含 # 字符，则小于 1 的数字将以小数点分隔符开头。若要显示与小数一起显示的前导零，请将零用作小数点分隔符左侧的第一个数字占位符。在某些区域设置中，逗号用作小数点分隔符。格式化输出中用作小数点占位符的实际字符取决于系统所识别的数字格式。这样，即使所在的区域使用逗号作为小数点占位符，也应该使用句点作为格式中的小数点占位符。格式化的字符串将以相应于区域设置的正确格式显示。 

, 千分位分隔符。只要千分位分隔符在格式串中出现,超过 1000 的数据就会显示千分位。 

% 百分比占位符。用 100 乘以数据再格式化，并在最后显示百分比符号(%)。 

( 与 ) 负数括号显示占位符。在格式化负数时，负数符号不会生成，而是在左右两端加上“(”与“)”。 

$ 货币符号占位符。根据 Windows 系统当前的区域设置得到对应货币表示符号，并显示在货币符号占位符出现的位置。 

$$ 汉字大写金额占位符。当格式串仅为两个$符号时，数字将以大写金额的方式显示，格式化之前数字保留两位小数，按四舍五入规则截除多余小数位。 
如 1234.8765 显示为“壹千贰佰叁拾肆元捌角捌分”。
 
$$$ 汉字大写金额数字占位符。当格式串中同时包含三个连在一起的$符号时，表示数字将被格式化成纯大写金额数字。 这种方式与“$$”的区别就是输出中不包含“拾佰千”等金额位文字，且连续出现的 0 也会重复输出，通过格式串的其它部分还可以指定小数位数。这种格式显示可用于发票等需要套打大写金额的地方。

如对 1234.8765 应用“$$$0.00”，会显示为“壹贰叁肆捌捌”。
 
; 分别定义正数值，负数值与零值的显示格式占位符。见下面详细说明。 
其它字符 根据其出现位置，会追加在格式化出来的数字文字的左端或右端。 

正数、负数与零分别设定显示格式

如果对正数值，负数值与零值要按照不同的格式规则进行格式化时，可以为每种类型数字设定不同的显示格式，每种类型数字的显示格式通过“;”分隔。第一部分为正数的显示格式，第二部分为负数的显示格式，第三部分为零的显示格式。如果负数的显示格式或零的显示格式没有设置，这其应用正数的显示格式。

举例：实现零值不显示的显示格式为“#,##0.00;;#”，正数的显示格式为“#,##0.00”；负数的显示格式为空，负数与正数应用相同的显示格式。零的显示格式为“#”，所以 0 不会格式化出任何文字，从而实现 0 值不显示。
------------------------------------------------------------------------------------

下表列出日期时间格式串中字符的含义：

字符 含义 
: 时间分隔符。在某些区域设置中，可以使用其他字符表示时间分隔符。时间分隔符在格式化时间值时分隔小时、分钟和秒。格式化输出中用作时间分隔符的实际字符由系统的 LocaleID 值确定。 
/ 日期分隔符。在某些区域设置中，可以使用其他字符表示日期分隔符。日期分隔符在格式化日期值时分隔日、月和年。格式化输出中用作日期分隔符的实际字符由您的区域设置确定。 
d 将日显示为不带前导零的数字（如 1）。 
dd 将日显示为带前导零的数字（如 01）。 
ddd 将日显示为缩写形式（例如 Sun）。 
dddd 将日显示为全名（例如 Sunday）。 
M 将月份显示为不带前导零的数字（如一月表示为 1）。 
MM 将月份显示为带前导零的数字（例如 01/12/01）。 
MMM 将月份显示为缩写形式（例如 Jan）。 
MMMM 将月份显示为完整月份名（例如 January）。 
h 使用 12 小时制将小时显示为不带前导零的数字（例如 1:15:15 PM）。 
hh 使用 12 小时制将小时显示为带前导零的数字（例如 01:15:15 PM）。 
H 使用 24 小时制将小时显示为不带前导零的数字（例如 1:15:15）。 
HH 使用 24 小时制将小时显示为带前导零的数字（例如 01:15:15）。 
m 将分钟显示为不带前导零的数字（例如 12:1:15）。 
mm 将分钟显示为带前导零的数字（例如 12:01:15）。 
s 将秒显示为不带前导零的数字（例如 12:15:5）。 
ss 将秒显示为带前导零的数字（例如 12:15:05）。 
tt 使用 12 小时制，并对中午之前任一小时显示大写的 AM；对中午到 11:59 P.M 之间的任一小时显示大写的 PM。 
y 将年份 (0-9) 显示为不带前导零的数字。 
yy 以带前导零的两位数字格式显示年份（如果适用）。 
yyy 以四位数字格式显示年份。 
yyyy 以四位数字格式显示年份。 
其它字符 根据其出现位置，原样输出在对应的位置。 
----------------------------------------------------------------------------
关于格式串的说明

因为布尔(逻辑)类型数据只有两种可能值:真或假，所以布尔格式也很简单，通过“:”将整个格式串分隔成两部分，左边部分就是真值的显示文字，右边部分就是假值的显示文字。如果某一部分没有定义，对应的值也不会格式化出显示文字。

##1 IGRField.AsBoolean = 逻辑值
获取或设置字段的用布尔类型表示的值。

##1 IGRField.AsCurrency = 货币值
获取或设置字段的用货币类型表示的值。

##1 IGRField.AsDateTime = 日期时间值
获取或设置字段的用日期时间类型表示的值。

##1 IGRField.AsFloat = 浮点数值
获取或设置字段的用浮点数类型表示的值。

##1 IGRField.AsInteger = 整数值
获取或设置字段的用整数类型表示的值。

##1 IGRField.AsString = 字符值
获取或设置字段的用字符串类型表示的值。

##1 IGRField.DataSize = 数据大小
获取存储二进制字段值的数据缓冲区的大小，以字节为计量单位。
    说明:本属性只对二进制类型的字段有效，存储字段值的数据缓冲区的字节大小。用DataBuffer 属性可以得到数据缓冲区的内存指针。

##1 IGRField.DataBuffer = 数据空间
获取存储二进制字段值的数据缓冲区内存地址指针。
    说明: 本属性只对二进制类型的字段有效，存储字段值的数据缓冲区内存地址指针。用DataSize属性可以得到数据缓冲区的大小。

    请参见

##1 IGRField.Length = 长度
获取或设置字符类型字段的字符长度，为0
    表示不定长类型字符类型字段。
    ULONG Length
    默认值   0
    说明
    不定长字符类型字段可以保存任意长度的字符数据，但在编辑记录时，不定长字符类型字段的值不允许改变。

    请参见

##1 IGRField.RTrimBlankChars = 截除右边空格
指定是否自动截除字符型字段右边的空格字符。
默认值：假
说明

此属性仅对字符型字段有效。数据库中定长类型的字符字段会用空格补足字符位数，这样的文字在进行水平居中显示时就得不到想要的居中效果，如果将此属性置为真，就可以自动截除右边的空格文字，也就可以得到很好的居中效果。

##1 IGRField.DBFieldName = 数据源字段名称
指定字段对应的数据源字段名称。
说明:当以拉模式从数据源提取报表数据时，将按此属性值进行报表字段与数据源字段进行匹配。如果此属性没有定义，则默认与名称保持一致。

##1 IGRField.GetDisplayTextScript = 显示文字脚本
显示文字脚本

##1 IGRField.Clear = 清空
将字段的值设为空。
    说明
    应只在报表主对象的请求记录事件与提交记录之前事件响应函数中调用此方法。

    请参见
    IGRField接口 |IGRField成员 |IGRField.IsNull属性 |IGridppReport.FetchRecord事件 |IGridppReport.BeforePostRecord事件

##1 IGRField.LoadFromFile = 从文件载入
运行时从文件中载入二进制字段的值。
    注意：本方法只对二进制类型(易语言字节集型)的字段有效。

##1 IGRField.LoadFromFile.PathFile = 文件名
指定载入文件的完整路径名称。

##1 IGRField.RunningDBField = 运行时数据源字段名称
获取在报表运行时与数据源字段进行匹配的字段名称。
说明

当定义了数据源字段名称 的属性值，这取得值为 数据源字段名称 属性的值，否则为 名称 属性的值。

##1 IGRField.SetValue = 设置值
设置字段在运行时的值。

##1 IGRField.SetValue.属性值 = 字段值
通用型数据。

##0 LONG_PTR = 


##1 IGRCrossTab = 交叉表


##1 IGRCrossTab.Tag = 标记


##1 IGRCrossTab.PercentFormat = 百分比格式
指定比重百分比数据的格式化文字。

##1 IGRCrossTab.HTotalAtFirst = 横向合计在前
指定是否将横向合计栏显示在前面。

##1 IGRCrossTab.HCrossFields = 横向交叉数据字段
指定横向交叉的数据字段名称，多个字段之间用';'号隔开。

##1 IGRCrossTab.VCrossFields = 横向交叉数据字段名称
指定横向交叉的数据字段名称，多个字段之间用';'号隔开。
该属性对交叉表定义是必须的，只有定义了该属性交叉表才能成功生成。

##1 IGRCrossTab.ListCols = 项目列数
指定明细网格中显示纵向交叉数据位于前面的列数。

##1 IGRCrossTab.TotalCols = 合计列数
指定明细网格中定义横向合计的列数，明细网格最后几列属于横向合计列。

##1 IGRCrossTab.HPercentColumns = 合计横向求比率列
指定按纵向计算比重百分比的列名称，多个列名称以‘;’隔开。

##1 IGRCrossTab.VPercentColumns = 纵向求比率列
指定按纵向计算比重百分比的列名称，多个列名称以‘;’隔开。

##1 IGRCrossTab.TotalHPercentColumns = 合计横向求比率列
指定横向合计比重百分比的列名称，多个列名称以‘;’隔开。

##1 IGRCrossTab.TotalVPercentColumns = 合计纵向求比率列
指定纵向合计比重百分比的列名称，多个列名称以‘;’隔开。

##1 IGRCrossTab.HCrossPeriodType = 横向交叉期间类型
横向交叉的按期间交叉的期间类型。

##1 IGRCrossTab.BeginDateParameter = 开始日期参数
指定交叉期间的开始日期对应的参数对象名称

##1 IGRCrossTab.EndDateParameter = 结束日期参数
指定交叉期间的结束日期对应的参数对象名称。

##1 IGRCrossTab.GetRecordset = 获取交叉表数据集
获取用于存储交叉表运行结果的记录集对象引用，此记录集不同于明细网格的记录集。

##1 IGRCrossTab.HBeginAddItem = 准备提供横向交叉项目数据
准备提供横向交叉项目数据。
首先调用 准备提供横向交叉项目数据 开始添加横向交叉项目数据；然后向明细网格的记录集添加记录数据，只用向横向交叉字段提供数据；最后调用完成添加横向交叉项目数据 方法结束添加横向交叉项目数据。 

通过以上任务可以将不存在于数据中的横向交叉项目添加进来。以上任务必须在报表的 开始处理 事件中执行。

##1 IGRCrossTab.HEndAddItem = 完成添加横向交叉项目数据
完成提供横向交叉项目数据。
首先调用准备提供横向交叉项目数据 开始添加横向交叉项目数据；然后向明细网格的记录集添加记录数据，只用向横向交叉字段提供数据；最后调用完成添加横向交叉项目数据方法结束添加横向交叉项目数据。 

通过以上任务可以将不存在于数据中的横向交叉项目添加进来。以上任务必须在报表的 开始处理 事件中执行。

##1 IGRCrossTab.VBeginAddItem = 准备提供纵向交叉项目数据
准备提供纵向交叉项目数据。
首先调用 准备提供纵向交叉项目数据 开始添加纵向交叉项目数据；然后向明细网格的记录集添加记录数据，只用向纵向交叉字段提供数据；最后调用 完成提供纵向交叉项目数据 方法结束添加纵向交叉项目数据。 

通过以上任务可以将不存在于数据中的纵向交叉项目添加进来。以上任务必须在报表的 开始处理 事件中执行。

##1 IGRCrossTab.VEndAddItem = 完成提供纵向交叉项目数据
完成提供纵向交叉项目数据。首先调用 准备提供纵向交叉项目数据 开始添加纵向交叉项目数据；然后向明细网格的记录集添加记录数据，只用向纵向交叉字段提供数据；最后调用 完成提供纵向交叉项目数据 方法结束添加纵向交叉项目数据。 

通过以上任务可以将不存在于数据中的纵向交叉项目添加进来。以上任务必须在报表的 开始处理 事件中执行。

##1 IGRCrossTab.GetCurPeriodBeginDate = 获取交叉周期开始日期
当交叉表为按期间交叉时，在报表生成过程中获取当前期间的开始日期。

##1 IGRCrossTab.GetCurPeriodEndDate = 获取交叉周期结束日期
当交叉表为按期间交叉时，在报表生成过程中获取当前期间的结束日期。

##0 GRPeriodType = 周期类型


##0 GRGridRowType = 


##1 tagGRDetailGridRowType = 网格行类型枚举


##1 tagGRDetailGridRowType.grgrtRecord = 记录行


##1 tagGRDetailGridRowType.grgrtGroupHeader = 分组头行


##1 tagGRDetailGridRowType.grgrtGroupFooter = 分组尾行


##1 IGRPageHeader = 页眉
    页眉接口
    表示报表的页眉。页眉只在打印生成时显示，紧靠每页上边距的上面显示。
    说明
    页眉在打印生成时，输出在每页的上边距之上；在屏幕查询显示时，页眉被忽略掉，即屏幕查询显示不使用页眉。一个报表只能定义一个页眉。在页眉中一般定义页号，总页数，文档名称，打印时间及其它需要显示在输出纸张页眉区域的信息。

##1 IGRPageHeader.BackColor = 背景色
    背景色 属性
    指定单元格的背景色。
    数据类型:整数型
    特征
    可读写
    设计器中可见

##1 IGRPageHeader.GetFont = 获取字体
    获取字体 属性
    获取报表对象的缺省字体对象的引用。
    调用格式：
    〈字体〉对象．获取字体（）
    特征
    只读
    设计器中可见

##1 IGRPageHeader.GetControls = 获取部件框集合

##1 IGRPageHeader.Height = 高度
    高度属性
    部件框的显示高度。
    数据类型:双精度小数型
    语法:对象.高度=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的显示高度值。

##1 IGRPageHeader.Name = 名称
    名称属性
    指定单元格的名称标识。
    数据类型:文本型
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见
    说明
    注意：当为内容格或当为标题格而不是组标题格时，即格存在对应列，格的名称与列的名称保持一致。当改变格的名称也同时改变列的名称，反之改变列的名称也同时改变格的名称。

##1 IGRPageHeader.CanGrow = 可伸展
    可伸展属性
    指定内容格在运行时是否可以伸展高度。
    数据类型:逻辑型
    语法:对象.可伸展=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRPageHeader.CanShrink = 可收缩
    可收缩 属性
    指定内容格在运行时是否可以收缩高度。
    数据类型:逻辑型
    语法:对象.可收缩=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRPageHeader.GetParent = 获取父对象

##1 IGRPageHeader.SectionType = 节类型
    节类型 属性
    指示报表节的具体类型。
    数据类型:整数型
    语法:对象.节类型=整数型
    特征
    只读
    请参见
    报表节类型枚举

##1 IGRPageHeader.Visible = 可见性
    可见性属性
    指定列在输出时是否可见。
    数据类型:逻辑型
    语法:对象.可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为假，则本列在屏幕显示与打印生成时将被忽略掉。

##1 IGRPageHeader.FormatScript = 格式化脚本
    格式化脚本属性
    表示报表 格式化报表节事件对应的脚本语言代码。
    语法:对象.格式化脚本=文本型
    特征
    可读写
    设计器中可见

##1 IGRPageFooter = 页脚
    页脚接口
    表示报表的页脚。页脚只在打印生成时显示，紧靠每页下边距的下面显示。
    说明
    页脚在打印生成时，输出在每页的上边距之上；在屏幕查询显示时，页脚被忽略掉，即屏幕查询显示不使用页脚。一个报表只能定义一个页脚。在页脚中一般定义页号，总页数，文档名称，打印时间及其它需要显示在输出纸张页脚区域的信息。

##1 IGRPageFooter.BackColor = 背景色
    背景色 属性
    指定单元格的背景色。
    数据类型:整数型
    语法:对象.背景色=整数型
    特征
    可读写
    设计器中可见

##1 IGRPageFooter.GetFont = 获取字体
    获取字体 属性
    获取报表对象的缺省字体对象的引用。
    调用格式：
    〈字体〉对象．获取字体（）
    特征
    只读
    设计器中可见

##1 IGRPageFooter.GetControls = 获取部件框集合

##1 IGRPageFooter.Height = 高度
    高度属性
    部件框的显示高度。
    数据类型:双精度小数型
    语法:对象.高度=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的显示高度值。

##1 IGRPageFooter.Name = 名称
    名称属性
    指定单元格的名称标识。
    数据类型:文本型
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见
    说明
    注意：当为内容格或当为标题格而不是组标题格时，即格存在对应列，格的名称与列的名称保持一致。当改变格的名称也同时改变列的名称，反之改变列的名称也同时改变格的名称。

##1 IGRPageFooter.CanGrow = 可伸展
    可伸展属性
    指定内容格在运行时是否可以伸展高度。
    数据类型:逻辑型
    语法:对象.可伸展=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRPageFooter.CanShrink = 可收缩
    可收缩 属性
    指定内容格在运行时是否可以收缩高度。
    数据类型:逻辑型
    语法:对象.可收缩=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRPageFooter.GetParent = 获取父对象

##1 IGRPageFooter.SectionType = 节类型
属性 SectionType
    IGRPageFooter.SectionType
    节类型 属性
    指示报表节的具体类型。
    数据类型:整数型
    语法:对象.节类型=整数型
    特征
    只读
    请参见
    报表节类型枚举

##1 IGRPageFooter.Visible = 可见性
    可见性属性
    指定列在输出时是否可见。
    数据类型:逻辑型
    语法:对象.可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为假，则本列在屏幕显示与打印生成时将被忽略掉。

##1 IGRPageFooter.FormatScript = 格式化脚本
    格式化脚本属性
    表示报表 格式化报表节事件对应的脚本语言代码。
    语法:对象.格式化脚本=文本型
    特征
    可读写
    设计器中可见

##1 IGRReportHeader = 报表头
    IGRReportHeader接口
    表示报表的报表头。报表头一般显示在报表的最前面。
    有关此接口所有成员的列表，请参阅IGRReportHeader成员。

    IDispatch
    IGRSection
    IGRReportHeader
    说明
    报表头在打印生成时，如果不选择每页重复输出，则只在报表的开始生成时输出一次；在屏幕查询显示时，显示在明细网格之上。一个报表可以定义多个报表头，在一般情况下我们只需定义一个报表头就可以了。在报表头中一般定义报表的标题，报表标识信息，徽标图像及其它只需在报表开始时显示一次的信息。

##1 IGRReportHeader.BackColor = 背景色
    背景色 属性
    指定单元格的背景色。
    数据类型:整数型
    语法:对象.背景色=整数型
    特征
    可读写
    设计器中可见

##1 IGRReportHeader.GetFont = 获取字体
    获取字体 属性
    获取报表对象的缺省字体对象的引用。
    调用格式：
    〈字体〉对象．获取字体（）
    特征
    只读
    设计器中可见

##1 IGRReportHeader.GetControls = 获取部件框集合

##1 IGRReportHeader.Height = 高度
    高度属性
    部件框的显示高度。
    数据类型:双精度小数型
    语法:对象.高度=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的显示高度值。

##1 IGRReportHeader.Name = 名称
    名称属性
    指定单元格的名称标识。
    数据类型:文本型
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见
    说明
    注意：当为内容格或当为标题格而不是组标题格时，即格存在对应列，格的名称与列的名称保持一致。当改变格的名称也同时改变列的名称，反之改变列的名称也同时改变格的名称。

##1 IGRReportHeader.CanGrow = 可伸展
    可伸展属性
    指定内容格在运行时是否可以伸展高度。
    数据类型:逻辑型
    语法:对象.可伸展=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRReportHeader.CanShrink = 可收缩
    可收缩 属性
    指定内容格在运行时是否可以收缩高度。
    数据类型:逻辑型
    语法:对象.可收缩=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRReportHeader.GetParent = 获取父对象

##1 IGRReportHeader.SectionType = 节类型
    节类型 属性
    指示报表节的具体类型。
    数据类型:整数型
    语法:对象.节类型=整数型
    特征
    只读
    请参见
    报表节类型枚举

##1 IGRReportHeader.Visible = 可见性
    可见性属性
    指定列在输出时是否可见。
    数据类型:逻辑型
    语法:对象.可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为假，则本列在屏幕显示与打印生成时将被忽略掉。

##1 IGRReportHeader.FormatScript = 格式化脚本
    格式化脚本属性
    表示报表 格式化报表节事件对应的脚本语言代码。
    语法:对象.格式化脚本=文本型
    特征
    可读写
    设计器中可见

##1 IGRReportHeader.KeepTogether = 保持同页
    是否保持本节输出显示在同一页标志。
    VARIANT_BOOL KeepTogether
    默认值   TRUE
    特征
    可读写
    设计器中可见
    仅用于打印


##1 IGRReportHeader.NewPage = 换新页方式
    指定新页的产生方式。

    GRNewPage StyleNewPage
    默认值
    drnps None
    特征
    可读写
    设计器中可见
    仅用于打印


##1 IGRReportHeader.RepeatOnPage = 每页重复
    是否在每页中重复输出显示标志。

    VARIANT_BOOL RepeatOnPage
    默认值   FALSE
    特征
    可读写
    设计器中可见
    仅用于打印

##1 IGRReportFooter = 报表尾
    报表尾接口
    表示报表的报表尾。报表尾一般显示在报表的最后面。
    说明
    报表尾在打印生成时，如果不选择每页重复输出，则只在报表的最后输出一次；在屏幕查询显示时，显示在明细网格之下。一个报表可以定义多个报表尾，在一般情况下我们只需定义一个报表尾就可以了。在报表尾中一般定义报表的统计信息及其它只需在报表结束时显示一次的信息。

##1 IGRReportFooter.BackColor = 背景色
    背景色 属性
    指定单元格的背景色。
    数据类型:整数型
    语法:对象.背景色=整数型
    特征
    可读写
    设计器中可见

##1 IGRReportFooter.GetFont = 获取字体
    获取字体 属性
    获取报表对象的缺省字体对象的引用。
    调用格式：
    〈字体〉对象．获取字体（）
    特征
    只读
    设计器中可见

##1 IGRReportFooter.GetControls = 获取部件框集合

##1 IGRReportFooter.Height = 高度
    高度属性
    部件框的显示高度。
    数据类型:双精度小数型
    语法:对象.高度=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的显示高度值。

##1 IGRReportFooter.Name = 名称
    名称属性
    指定单元格的名称标识。
    数据类型:文本型
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见
    说明
    注意：当为内容格或当为标题格而不是组标题格时，即格存在对应列，格的名称与列的名称保持一致。当改变格的名称也同时改变列的名称，反之改变列的名称也同时改变格的名称。

##1 IGRReportFooter.CanGrow = 可伸展
    可伸展属性
    指定内容格在运行时是否可以伸展高度。
    数据类型:逻辑型
    语法:对象.可伸展=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRReportFooter.CanShrink = 可收缩
    可收缩 属性
    指定内容格在运行时是否可以收缩高度。
    数据类型:逻辑型
    语法:对象.可收缩=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRReportFooter.GetParent = 获取父对象

##1 IGRReportFooter.SectionType = 节类型
    节类型 属性
    指示报表节的具体类型。
    数据类型:整数型
    语法:对象.节类型=整数型
    特征
    只读
    请参见
    报表节类型枚举

##1 IGRReportFooter.Visible = 可见性
    可见性属性
    指定列在输出时是否可见。
    数据类型:逻辑型
    语法:对象.可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为假，则本列在屏幕显示与打印生成时将被忽略掉。

##1 IGRReportFooter.FormatScript = 格式化脚本
    格式化脚本属性
    表示报表 格式化报表节事件对应的脚本语言代码。
    语法:对象.格式化脚本=文本型
    特征
    可读写
    设计器中可见

##1 IGRReportFooter.KeepTogether = 保持同页
    保持同页属性
    是否保持本节输出显示在同一页标志。
    语法:对象.保持同页=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    仅用于打印

##1 IGRReportFooter.PrintAtBottom = 打印在页低
    打印在页底属性
    是否将本节输出在页面底部标志。
    语法:对象.打印在页底=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见
    仅用于打印

##1 IGRReportFooter.NewPage = 换新页方式
    换新页方式属性
    指定新页的产生方式。
    语法:对象.换新页方式=整数型(换新页方式枚举值)
    默认值:drnps None
    特征
    可读写
    设计器中可见
    仅用于打印
    请参见
    换新页方式枚举

##1 IGRReportFooter.RepeatOnPage = 每页重复
    打印输出时，是否在每页中重复显示的标志。
    VARIANT_BOOL RepeatOnPage
    默认值    FALSE
    特征
    可读写
    设计器中可见
    仅用于打印

##1 IGRParameters = 参数集合
    公开报表组对象的所有参数的集合对象。
    有关此接口所有成员的列表，请参阅IGRParameters成员。

##1 IGRParameters.GetItem = 获取项目
    获取项目
    方法
    根据列的顺序号或名称得到列的接口引用。
    调用格式：〈列〉对象．获取项目（通用型列名称或者序号）
    特征
    只读
    说明
    在读取时要传入一个通用型类型的参数，指定列的顺序号或名称，列的顺序号从一开始。名称在匹配时不区分字母大小写。

##0 IGRParameters.Get_NewEnum = 


##1 IGRParameters.Count = 数目
    数目属性
    指示拥有参数的个数。
    特征
    只读

##1 IGRParameters.Add = 增加
    增加方法
    增加一个参数并返回新增参数的接口引用。
    调用格式：〈参数〉对象．增加（）
    返回值:新增参数的接口引用。

##1 IGRParameters.Remove = 删除
    删除方法
    根据参数的顺序号或名称将参数移除，在输入参数种指定要移除参数的顺序号或名称。
    调用格式：〈无返回值〉对象．删除（通用型顺序号或名称）
    参数:指定参数的顺序号或名称。

##1 IGRParameters.IndexByName = 根据名称得序号
    根据名称得序号方法
    根据参数的名称取得其顺序号，如果不存在与名称匹配的参数，则返回-1。参数的名称不区分字母的大小写。
    调用格式：〈整数型〉对象．根据名称得序号（文本型名称）

##1 IGRParameters.RemoveAll = 全部删除
    全部删除方法
    清除全部参数。
    调用格式：〈无返回值〉对象．全部删除（）

##1 IGRParameter = 参数
    参数接口
    表示报表中的可变参数值。报表拥有一组参数，参数在报表运行时可以通过编程的方式改变其值。
    说明
    参数对象用来在报表运行时存储生成过程中的数据，参数具有多种数据类型，参数可以被静态框关联，静态框输出参数当前值的显示文本。报表开发者可以在报表生成过程中的事件中读取与设置参数的值，例如利用参数，我们可以进行自定义的数据统计计算。

##1 IGRParameter.DataType = 数据类型
    数据类型属性
    指示参数的数据类型。
    语法:对象.数据类型=整数型(参数数据类型枚举值)
    默认值:字符特征
    可读写
    设计器中可见

    请参见
    参数数据类型枚举

##1 IGRParameter.Name = 名称
    名称 属性
    参数的名称标识。
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见

##1 IGRParameter.GetValue = 获取值

##1 IGRParameter.Format = 格式串
    格式串属性
    整数、浮点数、日期时间类型的参数生成输出显示文本的格式串。
    语法:对象.格式串=文本型
    特征
    可读写
    设计器中可见

##1 IGRParameter.AsInteger = 整数值
    整数值属性
    获取或设置整数值，只有当为整数类型参数时才能成功使用此属性。
    语法:对象.整数值=整数值
    特征
    可读写
    仅运行时可用

##1 IGRParameter.AsFloat = 浮点数值
    浮点数值属性
    获取或设置浮点数值，只有当为浮点数类型参数时才能成功使用此属性。
    语法:对象.浮点数值=双精度小数型
    号
    特征
    可读写

##1 IGRParameter.AsString = 字符串值
    字符串值属性
    获取或设置文本值，只有当为文本类型参数时才能成功使用此属性。
    语法:对象.字符串值=文本型
    特征
    可读写
    仅运行时可用

##1 IGRParameter.AsBoolean = 逻辑值
    逻辑值属性
    获取或设置布尔值，只有当为布尔类型参数时才能成功使用此属性。
    语法:对象.逻辑值=逻辑型
    特征
    可读写
    仅运行时可用

##1 IGRParameter.AsDateTime = 日期时间值
    日期时间值 属性
    获取或设置日期时间值，只有当为日期时间类型参数时才能成功使用此属性。
    语法:对象.日期时间值=日期时间型
    特征
    可读写
    仅运行时可用

##1 IGRParameter.DisplayText = 显示文字
    显示文字属性
    参数的输出显示文本。
    语法:对象.显示文字=文本型
    特征
    只读
    仅运行时可用

##1 IGRParameter.IsNull = 为空
    为空属性
    参数的值是否为空标志。
    语法:对象.为空
    特征
    可读写
    仅运行时可用

##1 IGRParameter.SetValue = 设置值

##0 GRParameterDataType = 参数数据类型枚举
GRParameterDataType
    参数数据类型枚举
    指示参数对象值的具体数据类型。

    成员名称		    说明
    逻辑		    布尔类型，可以真值与假值的显示文字。
    日期时间		    日期时间类型，可以设定格式化串。
    浮点数		    浮点数类型，可以设定格式化串。
    整数		    整数类型，可以设定格式化串。
    字符串		    字符串类型，可以为任意长度。

##1 tagGRParameterDataType = 参数数据类型枚举
tagGRParameterDataType
    参数数据类型枚举
    指示参数对象值的具体数据类型。

    成员名称		    说明
    逻辑		    布尔类型，可以真值与假值的显示文字。
    日期时间		    日期时间类型，可以设定格式化串。
    浮点数		    浮点数类型，可以设定格式化串。
    整数		    整数类型，可以设定格式化串。
    字符串		    字符串类型，可以为任意长度。

##1 tagGRParameterDataType.grptString = 字符串


##1 tagGRParameterDataType.grptInteger = 整数


##1 tagGRParameterDataType.grptFloat = 浮点数


##1 tagGRParameterDataType.grptBoolean = 逻辑


##1 tagGRParameterDataType.grptDateTime = 日期时间


##0 GRUnit = 单位枚举
GRUnit
    单位枚举
    指定表示报表元素大小与位置的计量单位。

    成员名称		    说明
    厘米		    以厘米为单位表示报表部件的尺寸与位置。
    单位		    以英寸为单位表示报表部件的尺寸与位置。

##1 tagGRUnit = 单位枚举
tagGRUnit
    单位枚举
    指定表示报表元素大小与位置的计量单位。

    成员名称		    说明
    厘米		    以厘米为单位表示报表部件的尺寸与位置。
    单位		    以英寸为单位表示报表部件的尺寸与位置。

##1 tagGRUnit.grmuCm = 厘米


##1 tagGRUnit.grmuInch = 英寸


##0 GRScriptType = 脚本语言枚举


##1 tagGRScriptType = 脚本语言枚举


##0 GRStorageFormat = 模板存储格式枚举


##1 tagGRStorageFormat = 模板存储格式枚举


##1 tagGRStorageFormat.grsfText = 文本


##1 tagGRStorageFormat.grsfBinary = 二进制


##1 tagGRStorageFormat.grsfBinBase64 = Base64编码


##1 tagGRStorageFormat.grsfXML = XML目前不支持


##0 GRPaperOrientation = 纸张方向枚举
GRPaperOrientation
    纸张方向枚举
    指定生成打印页面时在纸张中的输出方向。

    成员名称		    说明
    横向		    纸张输出方向为横向。
    纵向		    纸张输出方向为纵向。

##1 tagGRPaperOrientation = 纸张方向枚举
tagGRPaperOrientation
    纸张方向枚举
    指定生成打印页面时在纸张中的输出方向。

    成员名称		    说明
    横向		    纸张输出方向为横向。
    纵向		    纸张输出方向为纵向。

##1 tagGRPaperOrientation.grpoDefault = 默认


##1 tagGRPaperOrientation.grpoPortrait = 纵向


##1 tagGRPaperOrientation.grpoLandscape = 横向


##0 GRPaperSourceKind = 纸张来源枚举
GRPaperSourceKind
    纸张来源枚举
    指定打印机的各种纸张来源方式。

    成员名称		    说明
    自动选择		    自动送入的纸张。
    磁带纸盒		    卡式纸盒。
    自定义纸盒		    打印机特定的纸张来源。
    信封纸盒		    信封。
    格式源纸盒		    打印机的默认送纸盒。
    大容量纸盒		    打印机的大容量纸盒。
    大号纸盒		    大纸。
    下部纸盒		    打印机的下层纸盒。
    手动送纸器		    以手动方式送入的纸张。
    手动信封送纸器	    以手动方式送入的信封。
    中部纸盒		    打印机的中层纸盒。
    小号纸盒		    小纸。
    跟踪送纸器		    牵引器送纸。
    上部纸盒		    打印机的上层纸盒（如果打印机只有一个纸盒，那么这个纸盒就是上层纸盒）。

    请参见

##1 tagGRPaperSourceKind = 纸张来源枚举
tagGRPaperSourceKind
    纸张来源枚举
    指定打印机的各种纸张来源方式。

    成员名称		    说明
    自动选择		    自动送入的纸张。
    磁带纸盒		    卡式纸盒。
    自定义纸盒		    打印机特定的纸张来源。
    信封纸盒		    信封。
    格式源纸盒		    打印机的默认送纸盒。
    大容量纸盒		    打印机的大容量纸盒。
    大号纸盒		    大纸。
    下部纸盒		    打印机的下层纸盒。
    手动送纸器		    以手动方式送入的纸张。
    手动信封送纸器	    以手动方式送入的信封。
    中部纸盒		    打印机的中层纸盒。
    小号纸盒		    小纸。
    跟踪送纸器		    牵引器送纸。
    上部纸盒		    打印机的上层纸盒（如果打印机只有一个纸盒，那么这个纸盒就是上层纸盒）。


##1 tagGRPaperSourceKind.grpskDefault = 默认


##1 tagGRPaperSourceKind.grpskAutomaticFeed = 自动选择


##1 tagGRPaperSourceKind.grpskCassette = 磁带纸盒


##1 tagGRPaperSourceKind.grpskCustom = 自定义纸盒


##1 tagGRPaperSourceKind.grpskEnvelope = 信封纸盒


##1 tagGRPaperSourceKind.grpskFormSource = 格式源纸盒


##1 tagGRPaperSourceKind.grpskLargeCapacity = 大容量纸盒


##1 tagGRPaperSourceKind.grpskLargeFormat = 大号纸盒


##1 tagGRPaperSourceKind.grpskLower = 下部纸盒


##1 tagGRPaperSourceKind.grpskManual = 手动送纸器


##1 tagGRPaperSourceKind.grpskManualFeed = 手动信封送纸器


##1 tagGRPaperSourceKind.grpskMiddle = 中部纸盒


##1 tagGRPaperSourceKind.grpskSmallFormat = 小号纸盒


##1 tagGRPaperSourceKind.grpskTractorFeed = 跟踪送纸器


##1 tagGRPaperSourceKind.grpskUpper = 上部纸盒


##0 GRCollateKind = 逐份打印方式枚举


##1 tagGRCollateKind = 逐份打印方式枚举


##1 tagGRCollateKind.grckDefault = 默认


##1 tagGRCollateKind.grckCollate = 逐份


##1 tagGRCollateKind.grckNotCollate = 不逐份


##0 GRDuplexKind = 双面打印方式枚举
GRDuplexKind
    GRDuplexKind枚举
    表示报表对双面打印的应用方式。

    成员名称		    说明
    grdkDefault		    打印机默认的双面打印设置。
    grdkHorizontal	    双面水平打印。
    grdkSimplex		    单面打印。
    grdkVertical	    双面垂直打印。


##1 tagGRDuplexKind = 双面打印方式枚举


##1 tagGRDuplexKind.grdkDefault = 默认


##1 tagGRDuplexKind.grdkSimplex = 单面打印


##1 tagGRDuplexKind.grdkHorizontal = 双面水平打印


##1 tagGRDuplexKind.grdkVertical = 双面垂直打印


##0 GRPaperKind = 标准纸张类型枚举


##1 tagGRPaperKind = 标准纸张类型枚举


##1 IGRPrinter = 打印机
    打印机 接口
    表示打印机与纸张。定义获取与设置打印机与纸张信息的属性与方法。

##1 IGRPrinter.PrintRangeType = 打印范围类型
    指定打印输出选定的页范围。
    GRPrintRangeType PrintRangeType
    默认值
    grprtAllPages
    特征
    可读写

    请参见
    IGRPrinter接口 |IGRPrinter成员 |GRPrintRangeType枚举 |属性特征说明

##1 IGRPrinter.PrintPageType = 打印页类型
    指定从选定的页范围中输出的页类型。
    GRPrintPageType PrintPageType
    默认值
    grpptAllSelectionPages
    特征

##1 IGRPrinter.SelectionPrintPages = 打印页范围
    用文本指定的页范围，仅当PrintRangeType为grprtSelectionPages时才有效。

    BSTR SelectionPrintPages
    特征
    可读写
    说明
    范围文本为单页页号文本，如1、3、8；或有效的页区间文本，如1-5、6-10。可以指定多个页或页区间，中间用AssII字符‘,’隔开。

##1 IGRPrinter.PageCount = 页数
    指示当前打印文档的总页数。

    SHORT PageCount
    特征
    可读写
    仅用于打印


##1 IGRPrinter.Copies = 份数
    获取或设置要打印的文档份数。
    SHORT Copies
    特征
    可读写
    仅用于打印

##1 IGRPrinter.Collate = 逐份打印
    指示打印文档是否逐份打印。

    VARIANT_BOOL Collate
    特征
    可读写
    仅用于打印

##1 IGRPrinter.Duplex = 双面打印
    指示报表打印输出应用的双面打印模式。
    GRDuplex KindDuplex
    特征
    可读写
    设计器中可见


##1 IGRPrinter.LeftMargin = 左边距
    页面的左边距。
    DOUBLE LeftMargin
    默认值   2.5
    特征
    可读写
    设计器中可见
    仅用于打印
    说明
    以报表使用的计量单位表示属性值。

##1 IGRPrinter.RightMargin = 右边距
    页面的右边距。
    DOUBLE RightMargin
    默认值   2.5
    特征
    可读写
    设计器中可见
    仅用于打印
    说明
    以报表使用的计量单位表示属性值。

##1 IGRPrinter.TopMargin = 上边距
    页面的上边距。
    DOUBLE TopMargin
    默认值   2.5
    特征
    可读写
    设计器中可见
    仅用于打印
    说明
    以报表使用的计量单位表示属性值。

##1 IGRPrinter.BottomMargin = 下边距
    页面的下边距。
    DOUBLE BottomMargin
    默认值  2.5
    特征
    可读写
    设计器中可见
    仅用于打印
    说明
    以报表使用的计量单位表示属性值。

##1 IGRPrinter.PaperWidth = 纸张宽度
    获取或设置打印纸张的宽度。
    DOUBLE PaperWidth
    特征
    可读写
    仅用于打印
    说明
    以报表使用的计量单位表示属性值。只有当设置纸张类型为自定义纸张时，设置本属性才生效。


##1 IGRPrinter.PaperLength = 纸张长度
    获取或设置打印纸张的长度。
    DOUBLE PaperLength
    特征
    可读写
    仅用于打印
    说明
    以报表使用的计量单位表示属性值。只有当设置纸张类型为自定义纸张时，设置本属性才生效。


##1 IGRPrinter.PaperOrientation = 纸张方向
    打印纸张的方向。
    GRPaperOrientation PaperOrientation
    默认值
    Portrait
    特征
    可读写
    仅用于打印

##1 IGRPrinter.PaperSize = 纸张型号
    表示打印纸张的大小。
    SHORT PaperSize
    特征
    可读写
    仅用于打印
    说明
    参考WindowsSDK中DEVMODE的成员dmPaperSize的说明。其中256代表自定义纸张，当定义为自定义纸张时，可以设置纸张宽度与长度属性指定打印纸张的大小。

##1 IGRPrinter.PaperKind = 纸张类型


##1 IGRPrinter.PaperName = 纸张名称
    打印纸张的名称。
    BSTR PaperName
    默认值    A4
    特征
    可读写
    仅用于打印

##1 IGRPrinter.PrinterName = 打印机名称
    在运行时，获取或设置使用打印机的名称。
    BSTR PrinterName
    特征
    可读写
    仅运行时可用


##1 IGRPrinter.PaperSource = 纸张来源
    指定打印机的纸张来源。
    GRPaperSource KindPaperSource
    特征
    可读写
    设计器中可见

##1 IGRPrinter.PrintOffsetX = 打印右位移
IGRPrinter.PrintOffsetX
    指示报表的输出位置在水平方向上的偏移量，以报表的计量单位表示，向右为正，向左为负。
    DOUBLE PrintOffsetX
    默认值   0
    特征
    可读写
    设计器中可见
    仅用于打印


##1 IGRPrinter.PrintOffsetY = 打印下位移
IGRPrinter.PrintOffsetY
    指示报表的输出位置在垂直方向上的偏移量，以报表的计量单位表示，向下为正，向上为负。
    DOUBLE PrintOffsetY
    默认值   0
    特征
    可读写
    设计器中可见
    仅用于打印


##1 IGRPrinter.CanCollate = 支持逐份打印


##1 IGRPrinter.CanDuplex = 支持双面打印


##1 IGRPrinter.Online = 在线开启


##1 IGRPrinter.SupportCustomPaper = 支持自定义纸张


##1 IGRPrinter.PrintDialog = 打印对话框
方法 PrintDialog
    IGRPrinter.PrintDialog
    显示打印对话框。
    VARIANT_BOOL PrintDialog(void);
    返回值
    VARIANT_BOOL
    如果成功显示打印对会框，返回真，否则返回假。


##1 IGRPrinter.PrinterSetupDialog = 打印机设置对话框
方法 PrinterSetupDialog
    IGRPrinter.PrinterSetupDialog
    显示打印机设置对话框
    VARIANT_BOOL PrinterSetupDialog(void);
    返回值
    VARIANT_BOOL
    如果成功显示打印机对会框，返回真，否则返回假。

##1 IGRPrinter.PageSetupDialog = 页面设置对话框
    显示页面设置对话框。
    VARIANT_BOOL PageSetupDialog(void);
    返回值
    VARIANT_BOOL
    如果成功显示页面设置对会框，返回真，否则返回假。


##0 GRPrintRangeType = 打印范围类型枚举
GRPrintRangeType
    打印范围类型枚举
    指定打印时选定页范围的类型。

    成员名称		    说明
    全部页		    选定全部页。
    当前页		    选定当前页，只有在从打印御览状态中执行打印任务时才有效。
    选定页		    指定的页范围。


##1 tagGRPrintRangeType = 打印范围类型枚举
tagGRPrintRangeType
    打印范围类型枚举
    指定打印时选定页范围的类型。

    成员名称		    说明
    全部页		    选定全部页。
    当前页		    选定当前页，只有在从打印御览状态中执行打印任务时才有效。
    选定页		    指定的页范围。

    请参见

##1 tagGRPrintRangeType.grprtAllPages = 全部页


##1 tagGRPrintRangeType.grprtCurrentPage = 当前页


##1 tagGRPrintRangeType.grprtSelectionPages = 选定页


##0 GRPrintPageType = 打印页面类型枚举
GRPrintPageType
    打印页面类型枚举
    指定打印时输出页的类型。

    成员名称		    说明
    全部选择页		    输出选定页范围内的所有页。
    偶数选择页		    输出选定页范围内的偶数页。
    奇数选择页		    输出选定页范围内的奇数页。
    请参见

##1 tagGRPrintPageType = 打印页面类型枚举
tagGRPrintPageType
    打印页面类型枚举
    指定打印时输出页的类型。

    成员名称		    说明
    全部选择页		    输出选定页范围内的所有页。
    偶数选择页		    输出选定页范围内的偶数页。
    奇数选择页		    输出选定页范围内的奇数页。

    请参见

##1 tagGRPrintPageType.grpptAllSelectionPages = 全部选择页


##1 tagGRPrintPageType.grpptOddSelectionPages = 奇数选择页


##1 tagGRPrintPageType.grpptEvenSelectionPages = 偶数选择页


##1 IGRImageList = 图像集合
    图像集合  接口
    管理在整个报表对象中共享使用的图像数据集合。

    说明
    图像框通过指定引用的图像序号来显示某个共享的图像，图像序号从1开始。

##1 IGRImageList.GetItem = 获取项目
    获取项目 方法
    根据列的顺序号或名称得到列的接口引用。
    调用格式：〈列〉对象．获取项目（通用型列名称或者序号）
    特征
    只读
    说明
    在读取时要传入一个通用型类型的参数，指定列的顺序号或名称，列的顺序号从一开始。名称在匹配时不区分字母大小写。

##1 IGRImageList.Count = 数目
    数目 属性
    获取当前图像集合中图像个数。
    语法:图像集合.数目
    特征
    只读

##1 IGRImageList.Add = 增加
    增加 方法
    根据图像对象引用增加该图像到图像集合中。
    调用格式：〈短整数型〉对象．增加（对象图片对象）
    返回值:指定新增图像的序号。
    参数:准备添加的图像对象引用。

##1 IGRImageList.AddFromFile = 从文件增加
    从文件增加 方法
    根据图像文件路径名将该图像添加到图像集合中。
    调用格式：〈短整数型〉对象．从文件增加（文本型文件名）
    返回值:指定新增图像的序号。
    参数:文件名,指定添加图像的文件路径名。


##1 IGRImageList.Remove = 删除
    删除方法
    删除图像集合中指定序号的图像.
    调用格式：〈无返回值〉对象．删除（短整数型序号）

##1 IGRImageList.RemoveAll = 全部删除
    全部删除 方法
    删除图像集合中的全部图像
    调用格式：〈无返回值〉对象．全部删除（）-
    锐浪报表引擎->图像集合

##0 GRReportDisplayMode = 报表显示模式枚举
GRReportDisplayMode
    报表显示模式枚举
    指定报表的输出显示模式。

    成员名称		    说明
    空闲		    报表不处于任何生成显示过程中。
    打印页面生成	    报表处于打印页面生成过程中。
    查询显示		    正在查询显示器中报表处于自画过程中。

##1 tagGRReportDisplayMode = 报表显示模式枚举
tagGRReportDisplayMode
    报表显示模式枚举
    指定报表的输出显示模式。

    成员名称		    说明
    空闲		    报表不处于任何生成显示过程中。
    打印页面生成	    报表处于打印页面生成过程中。
    查询显示		    正在查询显示器中报表处于自画过程中。

##1 tagGRReportDisplayMode.grrdmScreenView = 查询显示


##1 tagGRReportDisplayMode.grrdmPrintGenerate = 打印页面生成


##1 tagGRReportDisplayMode.grrdmIdle = 空闲


##0 GRPrintGenerateStyle = 打印生成方式枚举
GRPrintGenerateStyle
    打印生成方式枚举
    指示打印页面的生成方式。

    成员名称		    说明
    全部		    生成报表所有数据。
    套打		    只生成报表内容数据。
    表单		    只生成报表表单数据。

    说明
    打印生成时，如果指定打印生成方式为只输出报表内容数据（套打）,则只输出打印类别为报表内容数据的报表元素，其它打印类别为报表表单数据的报表元素将不会输出。在只输出报表内容数据时，报表节的背景色不会填充，明细网格的边框线与行列线也不会输出。在只输出报表内容数据的打印生成方式特别适用于进行票据套打与现存格式报表的套打。
    打印生成时，如果指定印生成方式为输出报表表单数据（表单）,生成方式与只输出报表内容数据（套打）反之对应。在此种方式下，明细网格的记录数据不会被应用，明细行的生成与明细记录不对应，不填充明细记录页也可以输出报表表单数据。报表表单数据一般只生成一页。此种模式一般用来制作票据与固定格式报表的印刷模版。
    打印生成时，如果指定印生成方式为输出全部数据（全部）,则所有数据都会输出，这也是我们平时最多用到的方式。

    使用打印页面的生成方式的地方有：
    在报表接口中执行打印扩展()与打印预览()方法中可以指定打印页面的生成方式，另可以设定打印预览查看器的打印页面的生成方式（生成方式）属性。

##1 tagGRPrintGenerateStyle = 打印生成方式枚举
tagGRPrintGenerateStyle
    打印生成方式枚举
    指示打印页面的生成方式。

    成员名称		    说明
    全部		    生成报表所有数据。
    套打		    只生成报表内容数据。
    表单		    只生成报表表单数据。

    说明
    打印生成时，如果指定打印生成方式为只输出报表内容数据（套打）,则只输出打印类别为报表内容数据的报表元素，其它打印类别为报表表单数据的报表元素将不会输出。在只输出报表内容数据时，报表节的背景色不会填充，明细网格的边框线与行列线也不会输出。在只输出报表内容数据的打印生成方式特别适用于进行票据套打与现存格式报表的套打。
    打印生成时，如果指定印生成方式为输出报表表单数据（表单）,生成方式与只输出报表内容数据（套打）反之对应。在此种方式下，明细网格的记录数据不会被应用，明细行的生成与明细记录不对应，不填充明细记录页也可以输出报表表单数据。报表表单数据一般只生成一页。此种模式一般用来制作票据与固定格式报表的印刷模版。
    打印生成时，如果指定印生成方式为输出全部数据（全部）,则所有数据都会输出，这也是我们平时最多用到的方式。

    使用打印页面的生成方式的地方有：
    在报表接口中执行打印扩展()与打印预览()方法中可以指定打印页面的生成方式，另可以设定打印预览查看器的打印页面的生成方式（生成方式）属性。

##1 tagGRPrintGenerateStyle.grpgsOnlyForm = 表单


##1 tagGRPrintGenerateStyle.grpgsOnlyContent = 套打


##1 tagGRPrintGenerateStyle.grpgsAll = 全部
tagGRPrintGenerateStyle.grpgsAll
    全部删除 方法
    清除全部字段。
    调用格式：〈无返回值〉对象．全部删除（）

##0 GRExportType = 导出类型枚举
GRExportType
    导出类型枚举
    指定数据导出的类型。

    成员名称		    说明
    导出CSV		    导出CSV格式文件。
    导出Html		    导出Html超文本文件。
    导出PDF		    导出PDF格式文件。
    导出TXT		    导出文本文件。
    导出XLS		    导出Excel文件。

##1 tagGRExportType = 导出类型枚举
tagGRExportType
    导出类型枚举
    指定数据导出的类型。

    成员名称		    说明
    导出CSV		    导出CSV格式文件。
    导出Html		    导出Html超文本文件。
    导出PDF		    导出PDF格式文件。
    导出TXT		    导出文本文件。
    导出XLS		    导出Excel文件。

##1 tagGRExportType.gretXLS = 导出XLS


##1 tagGRExportType.gretTXT = 导出TXT


##1 tagGRExportType.gretHTM = 导出HTM


##1 tagGRExportType.gretRTF = 导出RTF


##1 tagGRExportType.gretPDF = 导出PDF


##1 tagGRExportType.gretCSV = 导出CSV


##1 tagGRExportType.gretIMG = 导出IMG


##1 IGRExportOption = 导出基选项
IGRExportOption
    导出基选项接口
    数据导出选项的基类。
    有关此接口所有成员的列表，本类以下子类拥有本类全部方法:

    公共属性
    AsE2CSVOption	 获取将本对象转换为导出CSV文件选项对象的接口引用。 
    AsE2HTMOption	 获取将本对象转换为导出Htm文件选项对象的接口引用。 
    AsE2PDFOption	 获取将本对象转换为导出PDF文件选项对象的接口引用。 
    AsE2TXTOption	 获取将本对象转换为导出文本文件选项对象的接口引用。 
    AsE2XLSOption	 获取将本对象转换为导出Excel文件选项对象的接口引用。 
    ExportType		 获取本导出文件选项对象的具体类型。 
    FileName		 指定导出文件的完整路径与文件名称。 

    公共方法
    ShowOptionDlg 显示导出选项设置对话框，可以在打开的对话框中设定各个选项值。 


##1 IGRExportOption.FileName = 文件名
    文件名属性
    指定导出文件的完整路径与文件名称。
    语法:对象.文件名=文本型
    特征
    可读写

##1 IGRExportOption.ExportType = 导出类型
    导出类型属性
    获取本导出文件选项对象的具体类型。
    语法:对象.导出类型=整数型(注:导出类型枚举值)
    特征
    只读
    参见
    导出类型枚举
    指定数据导出的类型。

    成员名称		    说明
    导出CSV		    导出CSV格式文件。
    导出Html		    导出Html超文本文件。
    导出PDF		    导出PDF格式文件。
    导出TXT		    导出文本文件。
    导出XLS		    导出Excel文件。

##1 IGRExportOption.GetAsE2XLSOption = 获取为XLS选项

##1 IGRExportOption.GetAsE2TXTOption = 获取为TXT选项

##1 IGRExportOption.GetAsE2HTMOption = 获取为HTM选项

##1 IGRExportOption.GetAsE2RTFOption = 获取为RTF选项

##1 IGRExportOption.GetAsE2PDFOption = 获取为PDF选项

##1 IGRExportOption.GetAsE2CSVOption = 获取为CSV选项

##1 IGRExportOption.GetAsE2IMGOption = 获取为IMG选项

##1 IGRExportOption.ShowOptionDlg = 显示选项对话框
    显示选项对话框方法
    显示导出选项设置对话框，可以在打开的对话框中设定各个选项值。
    调用格式：
    〈逻辑型〉对象．显示选项对话框（）
    返回值:如果在关闭对话框时选择了确定按钮，返回真值，反之则返回假值。

##0 IGRExportOption._GetFileTextResID = 


##1 IGRE2XLSOption = 导出XLS选项
    表示导出Excel文件的选项。
    有关此接口所有成员的列表，请参阅IGRE2XLSOption成员。

##1 IGRE2XLSOption.FileName = 文件名
    文件名属性
    指定导出文件的完整路径与文件名称。
    语法:对象.文件名=文本型
    特征
    可读写

##1 IGRE2XLSOption.ExportType = 导出类型
    导出类型属性
    获取本导出文件选项对象的具体类型。
    语法:对象.导出类型=整数型(注:导出类型枚举值)
    特征
    只读

    参见
    导出类型枚举
    指定数据导出的类型。

    成员名称		    说明
    导出CSV		    导出CSV格式文件。
    导出Html		    导出Html超文本文件。
    导出PDF		    导出PDF格式文件。
    导出TXT		    导出文本文件。
    导出XLS		    导出Excel文件。

##1 IGRE2XLSOption.GetAsE2XLSOption = 获取为XLS选项

##1 IGRE2XLSOption.GetAsE2TXTOption = 获取为TXT选项

##1 IGRE2XLSOption.GetAsE2HTMOption = 获取为HTM选项

##1 IGRE2XLSOption.GetAsE2RTFOption = 获取为RTF选项

##1 IGRE2XLSOption.GetAsE2PDFOption = 获取为PDF选项

##1 IGRE2XLSOption.GetAsE2CSVOption = 获取为CSV选项

##1 IGRE2XLSOption.GetAsE2IMGOption = 获取为IMG选项

##1 IGRE2XLSOption.ShowOptionDlg = 显示选项对话框
    显示选项对话框方法
    显示导出选项设置对话框，可以在打开的对话框中设定各个选项值。
    调用格式：
    〈逻辑型〉对象．显示选项对话框（）
    返回值:如果在关闭对话框时选择了确定按钮，返回真值，反之则返回假值。

##0 IGRE2XLSOption._GetFileTextResID = 


##1 IGRE2XLSOption.ExportPageBreak = 导出页分隔
    指定在导出数据时是否产生页之间的分隔。
    VARIANT_BOOL ExportPageBreak
    默认值
    FALSE
    特征
    可读写


##1 IGRE2XLSOption.ExportPageHeaderFooter = 导出页眉页脚
    指定是否导出页眉与页脚，只有在产生页间分隔时此属性才有效。
    VARIANT_BOOL ExportPageHeaderFooter
    默认值
    FALSE
    特征
    可读写


##1 IGRE2XLSOption.OnlyExportDetailGrid = 只导出明细网格
    指定是否只导出明细网格中的数据。
    VARIANT_BOOL OnlyExportDetailGrid
    默认值
    FALSE
    特征
    可读写


##1 IGRE2XLSOption.SupressEmptyLines = 压缩空行
    指定是否压缩空白行，即不产生空白行。
    VARIANT_BOOL SupressEmptyLines
    默认值
    TRUE
    特征
    可读写

##1 IGRE2XLSOption.MinColumnWidth = 最小列宽
    最小列宽属性
    指定导出产生的列的最小宽度，以字符为计量单位，用报表缺省字体的字符平均宽度进行转换。
    语法:对象.最小列宽=整数型
    默认值   2
    特征
    可读写

##1 IGRE2XLSOption.MinRowHeight = 最小行高
    最小行高属性
    指定导出产生行的最小高度，以字符为计量单位，用报表缺省字体的字符平均宽度进行转换。
    语法:对象.最小行高=整数型
    默认值   2
    特征
    可读写

##1 IGRE2XLSOption.ColumnAsDetailGrid = 列按明细网格生成


##1 IGRE2TXTOption = 导出TXT选项
    表示导出文本文件的选项。
    有关此接口所有成员的列表，请参阅IGRE2TXTOption成员。

##1 IGRE2TXTOption.FileName = 文件名
    文件名属性
    指定导出文件的完整路径与文件名称。
    语法:对象.文件名=文本型
    特征
    可读写

##1 IGRE2TXTOption.ExportType = 导出类型
    导出类型属性
    获取本导出文件选项对象的具体类型。
    语法:对象.导出类型=整数型(注:导出类型枚举值)
    特征
    只读

    参见
    导出类型枚举
    指定数据导出的类型。

    成员名称		    说明
    导出CSV		    导出CSV格式文件。
    导出Html		    导出Html超文本文件。
    导出PDF		    导出PDF格式文件。
    导出TXT		    导出文本文件。
    导出XLS		    导出Excel文件。

##0 IGRE2TXTOption.GetAsE2XLSOption = 获取为XLS选项

##0 IGRE2TXTOption.GetAsE2TXTOption = 获取为TXT选项

##0 IGRE2TXTOption.GetAsE2HTMOption = 获取为HTM选项

##0 IGRE2TXTOption.GetAsE2RTFOption = 获取为RTF选项

##0 IGRE2TXTOption.GetAsE2PDFOption = 获取为PDF选项

##0 IGRE2TXTOption.GetAsE2CSVOption = 获取为CSV选项

##0 IGRE2TXTOption.GetAsE2IMGOption = 获取为IMG选项

##1 IGRE2TXTOption.ShowOptionDlg = 显示选项对话框
    显示选项对话框方法
    显示导出选项设置对话框，可以在打开的对话框中设定各个选项值。
    调用格式：
    〈逻辑型〉对象．显示选项对话框（）
    返回值:如果在关闭对话框时选择了确定按钮，返回真值，反之则返回假值。

##0 IGRE2TXTOption._GetFileTextResID = 


##1 IGRE2TXTOption.ExportPageBreak = 导出页分隔
    指定在导出数据时是否产生页之间的分隔。
    VARIANT_BOOL ExportPageBreak
    默认值
    FALSE
    特征
    可读写


##1 IGRE2TXTOption.ExportPageHeaderFooter = 导出页眉页脚
属性 ExportPageHeaderFooter
    IGRE2TXTOption.ExportPageHeaderFooter
    指定是否导出页眉与页脚，只有在产生页间分隔时此属性才有效。
    VARIANT_BOOL ExportPageHeaderFooter
    默认值
    FALSE
    特征
    可读写


##1 IGRE2TXTOption.OnlyExportDetailGrid = 只导出明细网格
    指定是否只导出明细网格中的数据。
    VARIANT_BOOL OnlyExportDetailGrid
    默认值
    FALSE
    特征
    可读写


##1 IGRE2TXTOption.SupressEmptyLines = 压缩空行
    指定是否压缩空白行，即不产生空白行。
    VARIANT_BOOL SupressEmptyLines
    默认值
    TRUE
    特征
    可读写


##1 IGRE2TXTOption.WriteDetailGridLine = 输出表格线
    输出表格线属性
    指定是否输出明细网格的行列线，行列线用文字字符代替。
    语法:对象.输出表格线=逻辑型
    默认值
    假
    特征
    可读写

##1 IGRE2TXTOption.UsingCNGraphChar = 用中文制表符
    用中文制表符属性
    指定是否用中文制表符代替明细网格的行列线。
    语法:对象.用中文制表符=逻辑型
    默认值    假
    特征
    可读写

##1 IGRE2TXTOption.UsingTabChar = 用Tab字符
    IGRE2TXTOption.UsingTabChar
    用TAB字符属性
    指定是否用tab符号进行对齐处理。
    语法:对象.用TAB字符=逻辑型
    默认值    真
    特征
    可读写
    说明
    一个tab符号相当于8个空格字符占据的位置，用tab符号进行对齐处理可以减少导出文件的大小。

##1 IGRE2HTMOption = 导出HTM选项
IGRE2HTMOption
    IGRE2HTMOption接口
    表示导出Html超文本文件的选项。
    有关此接口所有成员的列表，请参阅IGRE2HTMOption成员。

    IDispatch
    IGRExportOption
    IGRE2HTMOption

    请参见
    IGRE2HTMOption成员

##1 IGRE2HTMOption.FileName = 文件名
属性 FileName
    IGRE2HTMOption.FileName
    文件名属性
    指定导出文件的完整路径与文件名称。
    语法:对象.文件名=文本型
    特征
    可读写

##1 IGRE2HTMOption.ExportType = 导出类型
属性 ExportType
    IGRE2HTMOption.ExportType
    导出类型属性
    获取本导出文件选项对象的具体类型。
    语法:对象.导出类型=整数型(注:导出类型枚举值)
    特征
    只读

    参见
    导出类型枚举
    指定数据导出的类型。

    成员名称		    说明
    导出CSV		    导出CSV格式文件。
    导出Html		    导出Html超文本文件。
    导出PDF		    导出PDF格式文件。
    导出TXT		    导出文本文件。
    导出XLS		    导出Excel文件。

##0 IGRE2HTMOption.GetAsE2XLSOption = 获取为XLS选项
属性 AsE2XLSOption
    IGRE2HTMOption.GetAsE2XLSOption

##0 IGRE2HTMOption.GetAsE2TXTOption = 获取为TXT选项
属性 AsE2TXTOption
    IGRE2HTMOption.GetAsE2TXTOption

##0 IGRE2HTMOption.GetAsE2HTMOption = 获取为HTM选项
属性 AsE2HTMOption
    IGRE2HTMOption.GetAsE2HTMOption

##0 IGRE2HTMOption.GetAsE2RTFOption = 获取为RTF选项
属性 AsE2RTFOption

##0 IGRE2HTMOption.GetAsE2PDFOption = 获取为PDF选项
属性 AsE2PDFOption

##0 IGRE2HTMOption.GetAsE2CSVOption = 获取为CSV选项
属性 AsE2CSVOption
    IGRE2HTMOption.GetAsE2CSVOption

##0 IGRE2HTMOption.GetAsE2IMGOption = 获取为IMG选项
属性 AsE2IMGOption

##1 IGRE2HTMOption.ShowOptionDlg = 显示选项对话框
方法 ShowOptionDlg
    IGRE2HTMOption.ShowOptionDlg
    显示选项对话框方法
    显示导出选项设置对话框，可以在打开的对话框中设定各个选项值。
    调用格式：
    〈逻辑型〉对象．显示选项对话框（）
    返回值:如果在关闭对话框时选择了确定按钮，返回真值，反之则返回假值。

    请参见
    IGRExportOption接口 |IGRExportOption成员

##0 IGRE2HTMOption._GetFileTextResID = 


##1 IGRE2HTMOption.ExportPageBreak = 导出页分隔
    指定在导出数据时是否产生页之间的分隔。
    VARIANT_BOOL ExportPageBreak
    默认值    FALSE
    特征
    可读写


##1 IGRE2HTMOption.ExportPageHeaderFooter = 导出页眉页脚
    指定是否导出页眉与页脚，只有在产生页间分隔时此属性才有效。
    VARIANT_BOOL ExportPageHeaderFooter
    默认值    FALSE
    特征
    可读写


##1 IGRE2HTMOption.MultiPage = 多个页
属性 MultiPage

##1 IGRE2HTMOption.OnlyExportDetailGrid = 只导出明细网格
    指定是否只导出明细网格中的数据。
    VARIANT_BOOL OnlyExportDetailGrid
    默认值    FALSE
    特征
    可读写


##1 IGRE2HTMOption.PicturePath = 图像路径
属性 PicturePath

##1 IGRE2HTMOption.SupressEmptyLines = 压缩空行
    指定是否压缩空白行，即不产生空白行。
    VARIANT_BOOL SupressEmptyLines
    默认值
    TRUE
    特征
    可读写


##1 IGRE2HTMOption.ShowNavLink = 显示导航链接

##1 IGRE2HTMOption.Title = 标题

##1 IGRE2RTFOption = 导出RTF选项


##1 IGRE2RTFOption.FileName = 文件名
    文件名属性
    指定导出文件的完整路径与文件名称。
    语法:对象.文件名=文本型
    特征
    可读写

##1 IGRE2RTFOption.ExportType = 导出类型
    导出类型属性
    获取本导出文件选项对象的具体类型。
    语法:对象.导出类型=整数型(注:导出类型枚举值)
    特征
    只读

    参见
    导出类型枚举
    指定数据导出的类型。

    成员名称		    说明
    导出CSV		    导出CSV格式文件。
    导出Html		    导出Html超文本文件。
    导出PDF		    导出PDF格式文件。
    导出TXT		    导出文本文件。
    导出XLS		    导出Excel文件。

##0 IGRE2RTFOption.GetAsE2XLSOption = 获取为XLS选项

##0 IGRE2RTFOption.GetAsE2TXTOption = 获取为TXT选项

##0 IGRE2RTFOption.GetAsE2HTMOption = 获取为HTM选项

##0 IGRE2RTFOption.GetAsE2RTFOption = 获取为RTF选项

##0 IGRE2RTFOption.GetAsE2PDFOption = 获取为PDF选项

##0 IGRE2RTFOption.GetAsE2CSVOption = 获取为CSV选项

##0 IGRE2RTFOption.GetAsE2IMGOption = 获取为IMG选项

##1 IGRE2RTFOption.ShowOptionDlg = 显示选项对话框
    显示选项对话框方法
    显示导出选项设置对话框，可以在打开的对话框中设定各个选项值。
    调用格式：
    〈逻辑型〉对象．显示选项对话框（）
    返回值:如果在关闭对话框时选择了确定按钮，返回真值，反之则返回假值。

##0 IGRE2RTFOption._GetFileTextResID = 


##1 IGRE2PDFOption = 导出PDF选项
    表示导出PDF文件的选项。
    有关此接口所有成员的列表，请参阅IGRE2PDFOption成员。

##1 IGRE2PDFOption.FileName = 文件名
    文件名属性
    指定导出文件的完整路径与文件名称。
    语法:对象.文件名=文本型
    特征
    可读写

##1 IGRE2PDFOption.ExportType = 导出类型
属性 ExportType
    IGRE2PDFOption.ExportType
    导出类型属性
    获取本导出文件选项对象的具体类型。
    语法:对象.导出类型=整数型(注:导出类型枚举值)
    特征
    只读

    参见
    导出类型枚举
    指定数据导出的类型。

    成员名称		    说明
    导出CSV		    导出CSV格式文件。
    导出Html		    导出Html超文本文件。
    导出PDF		    导出PDF格式文件。
    导出TXT		    导出文本文件。
    导出XLS		    导出Excel文件。

##0 IGRE2PDFOption.GetAsE2XLSOption = 获取为XLS选项

##0 IGRE2PDFOption.GetAsE2TXTOption = 获取为TXT选项

##0 IGRE2PDFOption.GetAsE2HTMOption = 获取为HTM选项

##0 IGRE2PDFOption.GetAsE2RTFOption = 获取为RTF选项

##0 IGRE2PDFOption.GetAsE2PDFOption = 获取为PDF选项

##0 IGRE2PDFOption.GetAsE2CSVOption = 获取为CSV选项

##0 IGRE2PDFOption.GetAsE2IMGOption = 获取为IMG选项

##1 IGRE2PDFOption.ShowOptionDlg = 显示选项对话框
    显示选项对话框方法
    显示导出选项设置对话框，可以在打开的对话框中设定各个选项值。
    调用格式：
    〈逻辑型〉对象．显示选项对话框（）
    返回值:如果在关闭对话框时选择了确定按钮，返回真值，反之则返回假值。

##0 IGRE2PDFOption._GetFileTextResID = 


##1 IGRE2CSVOption = 导出CSV选项
    表示导出CSV格式文件的选项。
    有关此接口所有成员的列表，请参阅IGRE2CSVOption成员。

##1 IGRE2CSVOption.FileName = 文件名
    文件名属性
    指定导出文件的完整路径与文件名称。
    语法:对象.文件名=文本型
    特征
    可读写

##1 IGRE2CSVOption.ExportType = 导出类型
    导出类型属性
    获取本导出文件选项对象的具体类型。
    语法:对象.导出类型=整数型(注:导出类型枚举值)
    特征
    只读

    参见
    导出类型枚举
    指定数据导出的类型。

    成员名称		    说明
    导出CSV		    导出CSV格式文件。
    导出Html		    导出Html超文本文件。
    导出PDF		    导出PDF格式文件。
    导出TXT		    导出文本文件。
    导出XLS		    导出Excel文件。

##0 IGRE2CSVOption.GetAsE2XLSOption = 获取为XLS选项

##0 IGRE2CSVOption.GetAsE2TXTOption = 获取为TXT选项

##0 IGRE2CSVOption.GetAsE2HTMOption = 获取为HTM选项

##0 IGRE2CSVOption.GetAsE2RTFOption = 获取为RTF选项

##0 IGRE2CSVOption.GetAsE2PDFOption = 获取为PDF选项

##0 IGRE2CSVOption.GetAsE2CSVOption = 获取为CSV选项

##0 IGRE2CSVOption.GetAsE2IMGOption = 获取为IMG选项

##1 IGRE2CSVOption.ShowOptionDlg = 显示选项对话框
    显示选项对话框方法
    显示导出选项设置对话框，可以在打开的对话框中设定各个选项值。
    调用格式：
    〈逻辑型〉对象．显示选项对话框（）
    返回值:如果在关闭对话框时选择了确定按钮，返回真值，反之则返回假值。



##1 IGRE2CSVOption.ExportPageBreak = 导出页分隔
    导出页分隔属性
    指定在导出数据时是否产生页之间的分隔。
    语法:对象.导出页分隔=逻辑型
    默认值
    假
    特征
    可读写

##1 IGRE2CSVOption.OnlyExportDetailGrid = 只导出明细网格
    只导出明细网格属性
    指定是否只导出明细网格中的数据。
    语法:对象.只导出明细网格=逻辑型
    默认值
    假
    特征
    可读写

##1 IGRE2CSVOption.ExportPageHeaderFooter = 导出页眉页脚
    导出页眉页脚属性
    指定是否导出页眉与页脚，只有在产生页间分隔时此属性才有效。
    语法:对象.导出页眉页脚=逻辑型
    默认值
    假
    特征
    可读写

##1 IGRE2CSVOption.SupressEmptyLines = 压缩空行
    压缩空行属性
    指定是否压缩空白行，即不产生空白行。
    语法:对象.压缩空行=逻辑型
    默认值
    真
    特征
    可读写

##1 IGRE2CSVOption.DelimiterChar = 分隔字符
    分隔字符属性
    指定CSV分隔字符。
    语法:对象.分隔字符=逻辑型
    默认值,
    特征
    可读写

##1 IGRE2IMGOption = 导出IMG选项


##1 IGRE2IMGOption.FileName = 文件名
    文件名属性
    指定导出文件的完整路径与文件名称。
    语法:对象.文件名=文本型
    特征
    可读写

##1 IGRE2IMGOption.ExportType = 导出类型
    导出类型属性
    获取本导出文件选项对象的具体类型。
    语法:对象.导出类型=整数型(注:导出类型枚举值)
    特征
    只读

    参见
    导出类型枚举
    指定数据导出的类型。

    成员名称		    说明
    导出CSV		    导出CSV格式文件。
    导出Html		    导出Html超文本文件。
    导出PDF		    导出PDF格式文件。
    导出TXT		    导出文本文件。
    导出XLS		    导出Excel文件。

##0 IGRE2IMGOption.GetAsE2XLSOption = 获取为XLS选项

##0 IGRE2IMGOption.GetAsE2TXTOption = 获取为TXT选项

##0 IGRE2IMGOption.GetAsE2HTMOption = 获取为HTM选项

##0 IGRE2IMGOption.GetAsE2RTFOption = 获取为RTF选项

##0 IGRE2IMGOption.GetAsE2PDFOption = 获取为PDF选项

##0 IGRE2IMGOption.GetAsE2CSVOption = 获取为CSV选项

##0 IGRE2IMGOption.GetAsE2IMGOption = 获取为IMG选项

##1 IGRE2IMGOption.ShowOptionDlg = 显示选项对话框
    显示选项对话框方法
    显示导出选项设置对话框，可以在打开的对话框中设定各个选项值。
    调用格式：
    〈逻辑型〉对象．显示选项对话框（）
    返回值:如果在关闭对话框时选择了确定按钮，返回真值，反之则返回假值。

##0 IGRE2IMGOption._GetFileTextResID = 


##1 IGRE2IMGOption.ImageType = 图像类型
    图像类型属性
    指定导出的图像格式。
    语法:对象.图像类型=整数型(注:导出图像类型枚举值)
    特征
    可读写
    设计器中可见

    请参见
    导出图像类型枚举
    指定在导出图像文件时可用的各种图像格式。

    成员名称		    说明
    BMP		    Bitmap位图图像格式。
    GIF		    GIF图像格式。
    JPEG	    JPEG图像格式。
    PNG		    PNG图像格式。
    TIFF	    TIFF图像格式。

##0 GRExportImageType = 导出图像类型枚举
GRExportImageType
    导出图像类型枚举
    指定在导出图像文件时可用的各种图像格式。

    成员名称		    说明
    BMP		    Bitmap位图图像格式。
    GIF		    GIF图像格式。
    JPEG	    JPEG图像格式。
    PNG		    PNG图像格式。
    TIFF	    TIFF图像格式。

##1 tagGRExportImageType = 导出图像类型枚举
tagGRExportImageType
    导出图像类型枚举
    指定在导出图像文件时可用的各种图像格式。

    成员名称		    说明
    BMP		    Bitmap位图图像格式。
    GIF		    GIF图像格式。
    JPEG	    JPEG图像格式。
    PNG		    PNG图像格式。
    TIFF	    TIFF图像格式。

##1 tagGRExportImageType.greitBMP = BMP图


##1 tagGRExportImageType.greitPNG = PNG图


##1 tagGRExportImageType.greitJPEG = JPEG图


##1 tagGRExportImageType.greitGIF = GIF图


##1 tagGRExportImageType.greitTIFF = TIFF图


##1 IGRSharePrintSetupObject = 共享打印设置对象
    共享打印设置对象接口
    表示共享的打印机与纸张设置参数。
    说明
    在一个应用程序中存在且仅存在一个本类对象，所有应用共享答应设置的报表都从此对象存取共享的答应参数。

##1 IGRSharePrintSetupObject.LeftMargin = 左边距
    左边距属性
    页面的左边距。
    语法:对象.左边距=双精度小数型
    特征
    可读写
    说明
    以本对象定义的计量单位表示属性值。

##1 IGRSharePrintSetupObject.RightMargin = 右边距
    右边距属性
    页面的右边距。
    语法:对象.右边距=双精度小数型
    特征
    可读写
    说明
    以本对象定义的计量单位表示属性值。

##1 IGRSharePrintSetupObject.TopMargin = 上边距
    上边距属性
    页面的上边距。
    语法:对象.上边距=双精度小数型
    特征
    可读写
    说明
    以本对象定义的计量单位表示属性值。

##1 IGRSharePrintSetupObject.BottomMargin = 下边距
    下边距属性
    页面的下边距。
    语法:对象.下边距=双精度小数型
    特征
    可读写
    说明
    以本对象定义的计量单位表示属性值。

##1 IGRSharePrintSetupObject.PaperWidth = 纸张宽度
    获取或设置打印纸张的宽度。
    DOUBLE PaperWidth
    特征
    可读写
    说明
    以本对象定义的计量单位表示属性值。只有当设置纸张类型为自定义纸张时，设置本属性才生效。


##1 IGRSharePrintSetupObject.PaperLength = 纸张长度
    纸张长度属性
    获取或设置打印纸张的长度。
    语法:对象.纸张长度=双精度小数型
    特征
    可读写
    说明
    以本对象定义的计量单位表示属性值。只有当设置纸张类型为自定义纸张时，设置本属性才生效。

##1 IGRSharePrintSetupObject.PaperOrientation = 纸张方向
    纸张方向属性
    打印纸张的方向。
    语法:对象.纸张方向=整数型(纸张方向枚举值)
    特征
    可读写
    请参见
    纸张方向枚举

##1 IGRSharePrintSetupObject.PaperSize = 纸张型号
    纸张型号属性
    表示打印纸张的类型。
    语法:对象.纸张型号=整数型
    特征
    可读写
    说明
    参考WindowsSDK中DEVMODE的成员dmPaperSize的说明。其中256代表自定义纸张，但定义为自定义纸张时，可以设置纸张宽度与长度属性指定打印纸张的大小。

##1 IGRSharePrintSetupObject.PaperName = 纸张名称
    纸张名称属性
    打印纸张的名称。
    语法:对象.纸张名称=文本型
    特征
    可读写

##1 IGRSharePrintSetupObject.PrinterName = 打印机名称
    获取或设置工作打印机的名称。
    语法:对象.打印机名称=文本型
    特征
    可读写

##1 IGRSharePrintSetupObject.PaperSource = 纸张来源
    纸张来源属性
    获取或设置打印机的纸张来源。
    语法:对象.纸张来源=整数型(纸张来源枚举值)
    特征
    可读写
    请参见
    纸张来源枚举

##1 IGRSharePrintSetupObject.Unit = 单位
    单位属性
    获取或设置表示本对象计量类型属性的计量单位。
    语法:对象.单位=整数型(单位枚举值)
    特征
    可读写
    请参见
    单位枚举

##1 IGRSharePrintSetupObject.PaperKind = 纸张类型


##1 IGRSharePrintSetupObject.PrintDialog = 打印对话框
    打印对话框方法
    显示打印对话框。
    调用格式：〈逻辑型〉对象．打印对话框（）
    返回值:指示是否成功进行了设置任务。

##1 IGRSharePrintSetupObject.PrinterSetupDialog = 打印机设置对话框

    调用格式：〈逻辑型〉对象．打印机设置对话框（）
    显示打印机设置对话框

    调用格式：〈逻辑型〉对象．打印机设置对话框（）
    返回值:指示是否成功进行了设置任务。


##1 IGRSharePrintSetupObject.PageSetupDialog = 页面设置对话框
    页面设置对话框方法
    显示页面设置对话框。
    调用格式：
    〈逻辑型〉对象．页面设置对话框（）
    返回值:指示是否成功进行了设置任务。

##0 GRSharePrintSetupOption = 共享打印参数枚举
GRSharePrintSetupOption
    共享打印参数枚举
    指定各个共享全局打印参数的项目。

    成员名称		    说明
    纸张型号		    纸张类型项目，对应纸张类型与大小属性。
    页面边距		    页边距项目，对应上、下、左，右页边距属性。
    纸张方向		    纸张的打印方向项目。
    纸张来源		    纸张的进纸来源项目。
    选择打印机		    当前选定的打印机项目，对应打印机名称属性。

##1 tagGRSharePrintSetupOption = 共享打印参数枚举
tagGRSharePrintSetupOption
    共享打印参数枚举
    指定各个共享全局打印参数的项目。

    成员名称		    说明
    纸张型号		    纸张类型项目，对应纸张类型与大小属性。
    页面边距		    页边距项目，对应上、下、左，右页边距属性。
    纸张方向		    纸张的打印方向项目。
    纸张来源		    纸张的进纸来源项目。
    选择打印机		    当前选定的打印机项目，对应打印机名称属性。

##1 tagGRSharePrintSetupOption.grspsoPaperMargin = 页面边距


##1 tagGRSharePrintSetupOption.grspsoPaperKind = 纸张型号
tagGRSharePrintSetupOption.grspsoPaperKind
    纸张型号属性
    表示打印纸张的类型。
    语法:对象.纸张型号=整数型
    特征
    可读写
    说明
    参考WindowsSDK中DEVMODE的成员dmPaperSize的说明。其中256代表自定义纸张，但定义为自定义纸张时，可以设置纸张宽度与长度属性指定打印纸张的大小。

##1 tagGRSharePrintSetupOption.grspsoPaperOrientation = 纸张方向
tagGRSharePrintSetupOption.grspsoPaperOrientation
    纸张方向枚举
    指定生成打印页面时在纸张中的输出方向。

    成员名称		    说明
    横向		    纸张输出方向为横向。
    纵向		    纸张输出方向为纵向。

##1 tagGRSharePrintSetupOption.grspsoPaperSource = 纸张来源
tagGRSharePrintSetupOption.grspsoPaperSource
    纸张来源属性
    获取或设置打印机的纸张来源。
    语法:对象.纸张来源=整数型(纸张来源枚举值)
    特征
    可读写
    请参见
    纸张来源枚举

##1 tagGRSharePrintSetupOption.grspsoSelectedPrinter = 选择打印机


##1 IGRLine = 线段
    线段 接口
    表示直线段。
    说明
    用来显示两点之间的直线段的部件框。

##1 IGRLine.Tag = 标签
    标签 属性
    部件框的标识值。
    数据类型:整数型
    语法:对象.标签=整数型
    默认值:0
    特征
    可读写
    设计器中可见
    说明
    可以按自己意愿任意使用本属性，如可以将此属性作为对象的身份标识,相当于语言中各种组件的标记属性。

##1 IGRLine.Name = 名称
    名称属性
    指定单元格的名称标识。
    数据类型:文本型
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见
    说明
    注意：当为内容格或当为标题格而不是组标题格时，即格存在对应列，格的名称与列的名称保持一致。当改变格的名称也同时改变列的名称，反之改变列的名称也同时改变格的名称。

##1 IGRLine.BackColor = 背景色
    背景色 属性
    指定单元格的背景色。
    数据类型:整数型
    语法:对象.背景色=整数型
    特征
    可读写
    设计器中可见

##1 IGRLine.ForeColor = 文字色
    文字色属性
    指定单元格的输出文本的文字颜色。
    数据类型:整数型
    语法:对象.文字色=整数型
    默认值:0(注:黑色)
    特征
    可读写
    设计器中可见
    说明
    注意：只有在格是非自由格时，才允许使用本属性。

##1 IGRLine.GetFont = 获取字体
    获取字体 属性
    获取报表对象的缺省字体对象的引用。
    调用格式：
    〈字体〉对象．获取字体（）
    特征
    只读
    设计器中可见

##1 IGRLine.ControlType = 部件框类型

##1 IGRLine.GetParent = 获取父对象

##1 IGRLine.Left = 左
    左 属性
    部件框的左端显示位置。
    数据类型:双精度小精型
    语法:对象.左=双精度小精型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的左端显示位置值，相对于父容器。

##1 IGRLine.Top = 上
    上 属性
    部件框的顶端显示位置。
    数据类型:双精度小数型
    语法:对象.上=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的顶端显示位置值，相对于父容器。

##1 IGRLine.Width = 宽度
    宽度 属性
    列的显示宽度。
    数据类型:双精度小数型
    语法:对象.宽度=双精度小数型
    特征
    可读写
    设计器中可见
    说明
    列的显示宽度，以报表使用的计量单位表示的输出宽度值。此属性代表列在设计时的宽度，当其输出时显示的宽度有可能与设计时的宽度不一致。例如，当明细网格的打印方法为列适应输出区域宽度，则列的宽度将按比例进行伸缩以刚好适应输出页面的输出区域宽度。

##1 IGRLine.Height = 高度
    高度属性
    部件框的显示高度。
    数据类型:双精度小数型
    语法:对象.高度=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的显示高度值。

##1 IGRLine.Anchor = 锚定
    锚定 属性
    指定部件框的哪些边缘锚定到其容器边缘。
    数据类型:整数型
    语法:对象.锚定=整数型(注:锚定方式枚举组合值)
    默认值:左边|上边
    特征
    可读写
    设计器中可见
    说明
    本属性值是 锚定方式枚举
    值的按位组合。默认值是左边和上边
    。
    请参见
    锚定方式枚举

##1 IGRLine.Dock = 停靠
    停靠 属性
    指定部件框停靠到父容器的哪一个边缘。
    数据类型:整数型
    语法:对象.停靠=整数型(注:停靠方式枚举值)
    默认值:无
    特征
    可读写
    设计器中可见
    停靠方式枚举

##1 IGRLine.Center = 居中
    居中 属性
    指定水平与垂直方向的居中对齐方式。
    数据类型:整数型
    语法:对象.居中=整数型(注:居中方式枚举值)
    默认值:无
    特征
    可读写
    设计器中可见
    说明
    指定部件框在容器中水平与垂直方向上的居中对齐方式。

##1 IGRLine.BorderStyles = 边框模式
    边框模式属性
    边框线的显示方式。
    数据类型:整数型(注:边框模式枚举值的组合)
    语法:对象.边框模式=整数型(边框模式枚举值)
    默认值:0
    特征:可读写
    设计器中可见
    说明
    本属性值是边框模式枚举值的按位组合。默认值是 0，不显示任何边框。
    请参见
    边框模式枚举

##1 IGRLine.BorderWidth = 边框宽度
    边框宽度 属性
    边框线的宽度。
    数据类型:整数型
    语法:对象.边框宽度=整数型
    默认值:1
    特征
    可读写
    设计器中可见
    说明
    以屏幕像素作为计量单位，默认是 1。

##1 IGRLine.BorderColor = 边框色
    边框色 属性
    边框线的显示颜色。
    数据类型:整数型
    语法:对象.边框色=整数型
    默认值:黑色
    特征
    可读写
    设计器中可见

##1 IGRLine.AlignColumn = 对齐列
    对齐列属性
    指定部件框水平位置对齐到明细网格列的名称。
    数据类型:文本型
    语法:对象.对齐列=文本型(注:列名称)
    特征:可读写
    设计器中可见
    说明
    如果本属性值不为空时，配合 对齐列方式属性一起指定部件框与列的对齐方式，部件框的水平位置将跟随列位置的改变而改变。
    注意：只有当部件框在分组头与分组尾中时才能使用本属性。

##1 IGRLine.AlignColumnEx = 对齐列扩展
    对齐列扩展 属性
    指定部件框水平位置对齐到明细网格另一个列的名称。
    数据类型:文本型
    语法:对象.对齐列扩展=文本型(注:列名称)
    特征
    可读写
    设计器中可见

    说明
    如果本属性值不为空时，配合 对齐列方式  属性一起指定部件框与列的对齐方式，部件框的水平位置将跟随列位置的改变而改变。
    对齐列扩展 与 对齐列可以指定到不同的列，这样部件框就可以跨列对齐到不同的列。如果
    对齐列扩展与 对齐列 只设定了其中之一的，则部件框只对齐到一个列。如果两者都没有设定，则部件框不会对齐到任何列。

##1 IGRLine.AlignColumnSide = 对齐列方式
    对齐列方式属性
    部件框对齐到明细网格列的方式。
    数据类型:整数型
    语法:对象.对齐列方式=整数型(注:对齐列方式枚举)
    默认值:#对齐列方式枚举.左右两端
    特征
    可读写
    设计器中可见
    说明
    注意：只有当部件框在分组头与分组尾中时才能使用本属性。

    请参见
    对齐列方式枚举

##1 IGRLine.BackStyle = 背景模式
属性 BackStyle
    IGRLine.BackStyle
    背景模式 属性
    部件框显示时背景的填充方式。
    数据类型:整数型
    语法:对象.背景模式=整数型(注:背景模式枚举值)
    默认值:#背景模式枚举.透明
    特征:可读写
    设计器中可见

    请参见
    背景模式枚举

##1 IGRLine.PrintType = 打印类别
    打印类别 属性
    部件框的打印输出方式。
    数据类型:整数型
    语法:对象.打印类别=整数型(注:打印类型枚举值)
    特征
    可读写
    设计器中可见
    仅用于打印

    请参见
    打印类别枚举

##1 IGRLine.Visible = 可见性
    可见性属性
    指定列在输出时是否可见。
    数据类型:逻辑型
    语法:对象.可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为假，则本列在屏幕显示与打印生成时将被忽略掉。

##1 IGRLine.Cursor = 光标
    光标属性
    指定在查询显示报表时，在本内容行上显示的鼠标光标。
    数据类型:整数型
    语法:对象.光标=整数型(注:显示光标枚举值)
    默认值:默认光标
    特征
    可读写
    设计器中可见

##1 IGRLine.GetAsTextBox = 获取为文字框

##1 IGRLine.GetAsChart = 获取为图表

##1 IGRLine.GetAsStaticBox = 获取为静态文字框

##1 IGRLine.GetAsShapeBox = 获取为图形框

##1 IGRLine.GetAsSystemVarBox = 获取为系统变量框

##1 IGRLine.GetAsFieldBox = 获取为字段框

##1 IGRLine.GetAsSummaryBox = 获取为统计框

##1 IGRLine.GetAsPictureBox = 获取为图像框

##1 IGRLine.GetAsRichTextBox = 获取为RTF文字框

##1 IGRLine.GetAsMemoBox = 获取为综合文字框

##1 IGRLine.GetAsSubReport = 获取为子报表

##1 IGRLine.GetAsLine = 获取为线段

##1 IGRLine.GetAsBarcode = 获取为条码


##1 IGRLine.SetBounds = 设置边界
    设置边界方法
    设置部件框在其父容器中的边界位置。
    调用格式：〈无返回值〉对象．设置边界（双精度小数型左边，双精度小数型顶边，双精度小数型
    右边，双精度小数型 底边)

##1 IGRLine.BringToFront = 显示到前端
    显示到前端方法
    将部件框带到Z顺序的前面。
    调用格式：
    〈无返回值〉对象．显示到前端（）
    说明
    此部件框将在同一容器中的其它部件框之后输出显示，如果前面输出的部件框与其在位置上有重叠，则此部件框将覆盖前面输出的部件框。

##1 IGRLine.SendToBack = 显示到后端
    显示到后端方法
    将部件框发送到Z顺序的后面。
    调用格式：
    〈无返回值〉对象．显示到后端（）
    说明
    此部件框将在同一容器中的其它部件框之前输出显示，如果后输出的部件框与其在位置上有重叠，则后输出的部件框将覆盖此部件框。

##0 IGRLine.LoadCursorFile = 
方法 LoadCursor

##1 IGRLine.PenStyle = 画笔样式
    画笔样式属性
    指定画线条的画笔类型
    语法:对象.画笔样式=整数型(画笔样式枚举值)
    默认值画实线
    特征
    可读写
    设计器中可见

    请参见
    画笔样式枚举

##1 IGRLine.PenWidth = 画笔宽度
    画笔宽度
    属性
    指定画线条的画笔的宽度。
    语法:对象.画笔宽度=整数型
    默认值   1
    特征
    可读写
    设计器中可见
    说明
    以屏幕像素表示属性值。

##1 IGRLine.PenColor = 画笔颜色
    画笔颜色属性
    画线段的颜色
    语法:对象.画笔颜色=整数型
    默认值:黑色
    特征
    可读写
    设计器中可见

##1 IGRLine.X1 = 起点X
    起点X属性
    线段的起点X坐标位置。
    语法:对象.起点X=双精度小精型
    特征
    可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的线段的起点X坐标位置，相对于父容器。

##1 IGRLine.Y1 = 起点Y
    起点Y 属性
    线段的起点Y坐标位置。
    语法:对象.起点Y=双精度小数型
    特征
    可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的线段的起点Y坐标位置，相对于父容器。

##1 IGRLine.X2 = 终点X
    终点X属性
    线段的终点X坐标位置。
    语法:对象.终点X=双精度小数型
    特征
    可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的线段的终点X坐标位置，相对于父容器。

##1 IGRLine.Y2 = 终点Y
    终点Y 属性
    线段的终点Y坐标位置。
    语法:对象.终点Y=双精度小数型
    特征
    可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的线段的终点Y坐标位置，相对于父容器。

##1 IGRBarcode = 条形码


##1 IGRBarcode.Tag = 标记

可以按自己意愿任意使用本属性，如可以将此属性作为对象的身份标识。

##1 IGRBarcode.Name = 名称
部件框名称

##1 IGRBarcode.BackColor = 背景色
部件框的背景色。

##1 IGRBarcode.ForeColor = 文字颜色
部件框输出内容的前景色。

##1 IGRBarcode.GetFont = 获取为字体
输出文字时使用的字体。

##1 IGRBarcode.ControlType = 部件框类型
部件框类型

##1 IGRBarcode.GetParent = 取父对象
取父对象

##1 IGRBarcode.Left = 左边
部件框的左端显示位置。

以报表使用的计量单位表示的左端显示位置值，相对于父容器。

##1 IGRBarcode.Top = 顶边
部件框的顶端显示位置。

##1 IGRBarcode.Width = 宽度
部件框的显示宽度。

##1 IGRBarcode.Height = 高度
部件框的显示高度。

##1 IGRBarcode.Anchor = 锚定
指定部件框的哪些边缘锚定到其容器边缘。

##1 IGRBarcode.Dock = 停靠方式
指定部件框停靠到父容器的哪一个边缘。

##1 IGRBarcode.Center = 居中方式
指定水平与垂直方向的居中对齐方式。

##1 IGRBarcode.BorderStyles = 边框显示方式
边框线的显示方式。

##1 IGRBarcode.BorderWidth = 边框宽度
边框线的宽度。

##1 IGRBarcode.BorderColor = 边框色
边框颜色

##1 IGRBarcode.AlignColumn = 对齐列
指定部件框水平位置对齐到明细网格列的名称。
说明
如果本属性值不为空时，配合 AlignColumnSide 属性一起指定部件框与列的对齐方式，部件框的水平位置将跟随列位置的改变而改变。 

AlignColumnEx 与 AlignColumn 可以指定到不同的列，这样部件框就可以跨列对齐到不同的列。如果 AlignColumnEx 与 AlignColumn 只设定了其中之一的，则部件框只对齐到一个列。如果两者都没有设定，则部件框不会对齐到任何列。

##1 IGRBarcode.AlignColumnEx = 对齐列扩展
指定部件框水平位置对齐到明细网格另一个列的名称。

特征

可读写

设计器中可见

说明

如果本属性值不为空时，配合 AlignColumnSide 属性一起指定部件框与列的对齐方式，部件框的水平位置将跟随列位置的改变而改变。 

AlignColumnEx 与 AlignColumn 可以指定到不同的列，这样部件框就可以跨列对齐到不同的列。如果 对齐列 与 对齐列扩展 只设定了其中之一的，则部件框只对齐到一个列。如果两者都没有设定，则部件框不会对齐到任何列。

##1 IGRBarcode.AlignColumnSide = 对齐列方式
部件框对齐到明细网格列的方式。

特征

可读写

设计器中可见

说明

注意：只有当部件框在分组头与分组尾中时才能使用本属性。

##1 IGRBarcode.BackStyle = 背景风格
部件框显示时背景的填充方式

##1 IGRBarcode.PrintType = 打印类型
部件框的打印输出方式。

##1 IGRBarcode.Visible = 可视
设置可见性

##1 IGRBarcode.Cursor = 光标类型


##1 IGRBarcode.GetAsTextBox = 获取为文字框
转换本部件框为文字框基类的接口引用。

只有当本部件框确实是文字基类框(TextBox)派生类的对象时，才能成功读取本属性值。文字基类派生的类包括：静态文本框、综合文本框、字段框、统计框、系统变量框。

##1 IGRBarcode.GetAsChart = 获取为图表
将本部件框转换为图表部件框的接口引用。
只有当本部件框确实是图表(Chart)时，才能成功读取本属性值。

##1 IGRBarcode.GetAsStaticBox = 获取为静态框
将本部件框转换为静态框的接口引用。
只有当本部件框确实是静态框(StaticBox)时，才能成功读取本属性值。

##1 IGRBarcode.GetAsShapeBox = 获取为图形框
将本部件框转换为图形框的接口引用。
只有当本部件框确实是图形框(ShapeBox)时，才能成功读取本属性值。

##1 IGRBarcode.GetAsSystemVarBox = 获取为系统变量框
将本部件框转换为系统变量框的接口引用。

只有当本部件框确实是系统变量框(SystemVarBox)时，才能成功读取本属性值。

##1 IGRBarcode.GetAsFieldBox = 获取为字段框
将本部件框转换为字段框的接口引用。
只有当本部件框确实是字段框(FieldBox)时，才能成功读取本属性值。

##1 IGRBarcode.GetAsSummaryBox = 获取为统计框
将本部件框转换为统计框的接口引用。
只有当本部件框确实是统计框(SummaryBox)时，才能成功读取本属性值。

##1 IGRBarcode.GetAsPictureBox = 获取为图像框
只有当本部件框确实是图像框(PictureBox)时，才能成功读取本属性值。

##1 IGRBarcode.GetAsRichTextBox = 获取为RTF文字框
将本部件框转换为RTF文本框的接口引用。
只有当本部件框确实是RTF文本框(RichTextBox)时，才能成功读取本属性值。

##1 IGRBarcode.GetAsMemoBox = 获取为综合文字框
转换本部件框为综合文本框的接口引用。
只有当本部件框确实是综合文本框(MemoBox)时，才能成功读取本属性值。

##1 IGRBarcode.GetAsSubReport = 获取为子报表
转换本部件框为子报表的接口引用。

只有当本部件框确实是子报表(MemoBox)时，才能成功读取本属性值。

##1 IGRBarcode.GetAsLine = 获取为线条
将本部件框转换为线段的接口引用。
只有当本部件框确实是线段(Line)时，才能成功读取本属性值。

##1 IGRBarcode.GetAsBarcode = 获取为条码
将本部件框转换为条形码部件框的接口引用。
只有当本部件框确实是条形码(Barcode)时，才能成功读取本属性值。

##1 IGRBarcode.SetBounds = 设置边界
设置部件框在其父容器中的边界位置。

##1 IGRBarcode.BringToFront = 到顶层
将部件框带到 Z 顺序的前面。

##1 IGRBarcode.SendToBack = 到最底层
将部件框发送到 Z 顺序的后面。

此部件框将在同一容器中的其它部件框之前输出显示，如果后输出的部件框与其在位置上有重叠，则后输出的部件框将覆盖此部件框。

##1 IGRBarcode.LoadCursorFile = 从文件载入光标
从文件载入光标

##1 IGRBarcode.LoadCursorFile.PathFile = 文件名


##1 IGRBarcode.BarcodeType = 条码类型


##1 IGRBarcode.Alignment = 文字对齐方式
指定条形码文字输出时的对齐方式。

##1 IGRBarcode.BarRatio = 宽度比例
指定宽条与窄条之间的宽度比例。

##1 IGRBarcode.BarWidth = 条宽度
指定一个窄条的宽度，以报表的计量单位表示。

##1 IGRBarcode.CaptionPosition = 文字位置
指定条形码文字的输出位置。

##1 IGRBarcode.CheckSum = 是否校验数据
指定条形码是否需要进行数据校验。

##1 IGRBarcode.DataField = 数据字段


##1 IGRBarcode.Direction = 条码方向
指定条形码图形的输出方向。

##1 IGRBarcode.Text = 文字
文字

##0 GRBarcodeType = 条码类型


##1 tagGRBarcodeType = 条码类型枚举


##0 GRStringAlignment = 文本对齐方式


##1 tagGRStringAlignment = 文本对方齐式枚举


##1 tagGRStringAlignment.grsaNear = 靠近
指定文本靠近布局对齐。在左到右布局中，近端位置是左。在右到左布局中，近端位置是右。

##1 tagGRStringAlignment.grsaCenter = 居中
指定文本在布局矩形中居中对齐。

##1 tagGRStringAlignment.grsaFar = 原点
指定文本远离布局矩形的原点位置对齐。在左到右布局中，远端位置是右。在右到左布局中，远端位置是左。

##0 GRBarcodeCaptionPosition = 条码文字位置


##1 tagGRBarcodeCaptionPosition = 条码文字位置枚举
表示条形码文字的输出位置。

##1 tagGRBarcodeCaptionPosition.grbcpNone = 不显示


##1 tagGRBarcodeCaptionPosition.grbcpAbove = 上端


##1 tagGRBarcodeCaptionPosition.grbcpBelow = 下端


##0 GRBarcodeDirection = 条码文字方向


##1 tagGRBarcodeDirection = 条形码方向枚举


##1 tagGRBarcodeDirection.grbdLeftToRight = 从左到右


##1 tagGRBarcodeDirection.grbdRightToLeft = 从右到左


##1 tagGRBarcodeDirection.grbdTopToBottom = 从上到下


##1 tagGRBarcodeDirection.grbdBottomToTop = 从下到上


##0 GROCGroupHeaderVAlign = 占列分组头对齐方式枚举
GROCGroupHeaderVAlign
    占列分组头对齐方式枚举
    指定占列式分组头在整个分组列区域的垂直方向上对齐位置。

    成员名称		    说明
    下端		    占列式分组头显示在整个分组列区域的底部。
    居中		    占列式分组头显示在整个分组列区域的中部（垂直方向）。
    上端		    占列式分组头显示在整个分组列区域的顶部。

##1 tagGROCGroupHeaderVAlign = 占列分组头对齐方式枚举
tagGROCGroupHeaderVAlign
    占列分组头对齐方式枚举
    指定占列式分组头在整个分组列区域的垂直方向上对齐位置。

    成员名称		    说明
    下端		    占列式分组头显示在整个分组列区域的底部。
    居中		    占列式分组头显示在整个分组列区域的中部（垂直方向）。
    上端		    占列式分组头显示在整个分组列区域的顶部。

##1 tagGROCGroupHeaderVAlign.grbaTop = 上端


##1 tagGROCGroupHeaderVAlign.grbaBottom = 下端


##1 tagGROCGroupHeaderVAlign.grbaMiddle = 居中
tagGROCGroupHeaderVAlign.grbaMiddle
    居中 属性
    指定水平与垂直方向的居中对齐方式。
    数据类型:整数型
    语法:对象.居中=整数型(注:居中方式枚举值)
    默认值:无
    特征
    可读写
    设计器中可见
    说明
    指定部件框在容器中水平与垂直方向上的居中对齐方式。

##0 GRNewPageColumnStyle = 换新页栏方式枚举
GRNewPageColumnStyle
    换新页栏方式枚举
    在打印生成明细网格的分组头时，指定是否强制产生新页列的方式。

    成员名称		    说明
    节后		    分组头在打印输出之后另起新页栏。后续内容输出在新页栏中。
    节前		    分组头在打印输出之前另起新页栏进行输出。
    节前节后		    分组头在打印输出之前与之后都另起新页栏。
    不应用		    分组头在任何时候都不另起新页栏。

##1 tagGRNewPageColumnStyle = 换新页栏方式枚举
tagGRNewPageColumnStyle
    换新页栏方式枚举
    在打印生成明细网格的分组头时，指定是否强制产生新页列的方式。

    成员名称		    说明
    节后		    分组头在打印输出之后另起新页栏。后续内容输出在新页栏中。
    节前		    分组头在打印输出之前另起新页栏进行输出。
    节前节后		    分组头在打印输出之前与之后都另起新页栏。
    不应用		    分组头在任何时候都不另起新页栏。

##1 tagGRNewPageColumnStyle.grncsNone = 不应用


##1 tagGRNewPageColumnStyle.grncsBefore = 节前


##1 tagGRNewPageColumnStyle.grncsAfter = 节后


##1 tagGRNewPageColumnStyle.grncsBeforeAfter = 节前节后


##0 GRGrpKpTogetherStyle = 分组保持同页方式枚举
GRGrpKpTogetherStyle
    分组保持同页方式枚举
    指定分组头行与本分组项其他行在打印输出时聚集在相同页的方式。

    成员名称		    说明
    全部		    要求分组头行与本分组项的其他所有行尽量打印输出在相同页。
    第一明细行		    要求分组头行与本分组项的第一个明细记录行打印输出在相同页。
    不应用		    不要求分组头行与本分组项其他行打印输出聚集在相同页。

##1 tagGRGrpKpTogetherStyle = 分组保持同页方式枚举
tagGRGrpKpTogetherStyle
    分组保持同页方式枚举
    指定分组头行与本分组项其他行在打印输出时聚集在相同页的方式。

    成员名称		    说明
    全部		    要求分组头行与本分组项的其他所有行尽量打印输出在相同页。
    第一明细行		    要求分组头行与本分组项的第一个明细记录行打印输出在相同页。
    不应用		    不要求分组头行与本分组项其他行打印输出聚集在相同页。

##1 tagGRGrpKpTogetherStyle.grgktsNone = 不应用


##1 tagGRGrpKpTogetherStyle.grgktsFirstDetail = 第一明细行


##1 tagGRGrpKpTogetherStyle.grgktsAll = 全部
tagGRGrpKpTogetherStyle.grgktsAll
    全部删除
    方法
    清除全部字段。
    调用格式：〈无返回值〉对象．全部删除（）

##1 IGRGroupFooter = 分组尾
    分组尾 接口
    表示明细网格分组的分组尾。分组尾显示在每个分组的最后一行。
    说明
    一个报表可以定义一个或多个嵌套分组，每个分组对应一个分组头与一个分组尾。分组尾显示在每个分组结束位置，一般在分组尾上定义定义分组的统计信息及其它只需在分组开始时显示一次的信息。


##1 IGRGroupFooter.BackColor = 背景色
    背景色 属性
    指定单元格的背景色。
    数据类型:整数型
    语法:对象.背景色=整数型
    特征
    可读写
    设计器中可见

##1 IGRGroupFooter.GetFont = 获取字体
    获取字体 属性
    获取报表对象的缺省字体对象的引用。
    调用格式：
    〈字体〉对象．获取字体（）
    特征
    只读
    设计器中可见

##1 IGRGroupFooter.GetControls = 获取部件框集合

##1 IGRGroupFooter.Height = 高度
    高度属性
    部件框的显示高度。
    数据类型:双精度小数型
    语法:对象.高度=双精度小数型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的显示高度值。

##1 IGRGroupFooter.Name = 名称
    名称属性
    指定单元格的名称标识。
    数据类型:文本型
    语法:对象.名称=文本型
    特征
    可读写
    设计器中可见
    说明
    注意：当为内容格或当为标题格而不是组标题格时，即格存在对应列，格的名称与列的名称保持一致。当改变格的名称也同时改变列的名称，反之改变列的名称也同时改变格的名称。

##1 IGRGroupFooter.CanGrow = 可伸展
    可伸展属性
    指定内容格在运行时是否可以伸展高度。
    数据类型:逻辑型
    语法:对象.可伸展=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRGroupFooter.CanShrink = 可收缩
    可收缩 属性
    指定内容格在运行时是否可以收缩高度。
    数据类型:逻辑型
    语法:对象.可收缩=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 IGRGroupFooter.GetParent = 获取父对象

##1 IGRGroupFooter.SectionType = 节类型
    节类型 属性
    指示报表节的具体类型。
    数据类型:整数型
    语法:对象.节类型=整数型
    特征
    只读
    请参见
    报表节类型枚举

##1 IGRGroupFooter.Visible = 可见性
    可见性属性
    指定列在输出时是否可见。
    数据类型:逻辑型
    语法:对象.可见性=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    说明
    如果本属性值为假，则本列在屏幕显示与打印生成时将被忽略掉。

##1 IGRGroupFooter.FormatScript = 格式化脚本
    格式化脚本属性
    表示报表 格式化报表节事件对应的脚本语言代码。
    语法:对象.格式化脚本=文本型
    特征
    可读写
    设计器中可见

##1 IGRGroupFooter.KeepTogether = 保持同页
    保持同页属性
    是否保持本节输出显示在同一页标志。
    语法:对象.保持同页=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    仅用于打印

##1 IGRGroupFooter.NewPage = 换新页方式
    换新页方式属性
    指定新页的产生方式。
    语法:对象.换新页方式=整数型(换新页方式枚举值)
    默认值:drnpsNone
    特征
    可读写
    设计器中可见
    仅用于打印
    请参见
    换新页方式枚举

##1 IGRGroupFooter.PrintGridBorder = 打印网格边框
    打印网格边框属性
    获取或设置是否打印本分组节对应位置的明细网格边框。
    语法:对象.打印网格边框=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见
    仅用于打印

##1 IGRGroupFooter.GetGroup = 获取分组
    获取分组属性
    获取拥有本分组节的分组对象的接口引用。
    调用格式：〈分组〉对象．获取分组（）
    特征
    只读

##1 IGRGroupFooter.PrintAtBottom = 打印在页底
    打印在页底属性
    打印输出时，指定是否将本节显示在页面底部。
    语法:对象.打印在页底=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见
    仅用于打印

##1 GridppReport = 报表
    报表 接口
    表示报表的主对象。其他报表元素对象都是其子孙对象，对其它对象的访问与使用都是以此对象作为进入起点。
    说明
    是一个COM自动化（COMAutomation）对象的接口定义，是Grid++Report组件对象模型的最外层对象。报表主对象是所有其它报元素对象的直接或间接拥有者，直接拥有的报表元素对象有：明细网格，报表节集合、参数集合、打印机对象。另也包括报表有关的公共信息，如设计行为属性、计量单位、整个报表的缺省字体等。

##1 GridppReport.Tag = 标记
本属性记录用作标记当前所选择对象的附加数据，以供在运行时使用。

##1 GridppReport.Version = 版本号
指示Grid++Report的当前运行版本。

##0 GridppReport.GetSections = 获取报表节集合
获取报表节集合

##1 GridppReport.GetDetailGrid = 获取明细网格
获取明细网格对象的接口引用。

##1 GridppReport.GetPageHeader = 获取页眉
获取页眉对象的接口引用。

##1 GridppReport.GetPageFooter = 获取页脚
获取页脚对象的接口引用。

##1 GridppReport.GetReportHeader = 获取报表头
根据名称或序号取得某个报表头对象的接口引用。

##1 GridppReport.GetReportFooter = 获取报表尾
根据名称或序号取得某个报表尾对象的接口引用。

##1 GridppReport.ReportHeaderCount = 报表头数
报表头个数

##1 GridppReport.ReportFooterCount = 报表尾数
报表尾个数

##1 GridppReport.GetParameters = 获取参数集合
获取参数集合对象的接口引用。

##0 GridppReport.Name = 名称
指定报表名称标识。

##1 GridppReport.GridColsPerUnit = 每单位栅格点列数
在设计器中，水平方向上每个计量单位显示的设计栅格点个数。

##1 GridppReport.GridRowsPerUnit = 每单位栅格点行数
每单位栅格点行数属性
    在设计器中，垂直方向上每个计量单位显示的设计栅格点个数。
    语法:对象.每单位栅格点行数=整数型
    默认值   5
    特征
    可读写
    设计器中可见
    仅用于设计
    说明
    有效值范围：1-50

##1 GridppReport.ContinuePrint = 连续打印
指定是否采用连续打印，即打即停的方式打印输出报表。
    语法:对象.连续打印=逻辑型

##1 GridppReport.Unit = 单位
用来表示报表元素位置与大小的计量单位。

##1 GridppReport.ScriptType = 脚本类型
脚本类型

##1 GridppReport.BackColor = 背景色
报表对象的缺省背景色。

##1 GridppReport.GetFont = 获取字体
获取报表对象的缺省字体对象的引用。

##1 GridppReport.AlignToGrid = 对齐到栅格
当在设计器中设计报表模板时，是否将部件框的边框对齐到设计栅格点。
语法:对象.对齐到栅格=逻辑型
默认值  真
特征
可读写
仅用于设计
 说明
    如果本属性为真时，通过鼠标拖放改变部件框的位置与大小，设计器将强制部件边框对齐到设计栅格点，但通过其他方式改变部件框的位置与大小时，不受此属性约束。

##1 GridppReport.ShowGrid = 显示栅格
获取或设置是否在设计器中显示设计栅格点的标志。
特征
 设计器中可见
 仅用于设计

##1 GridppReport.Title = 文档标题
指定报表文档的标题文字。
    语法:对象.文档标题=文本型
     说明
    当打印输出报表时，打印文档的标题是此属性的值。

##1 GridppReport.PageDivideCount = 页切分数
打印输出时，纸张在垂直方向上的均分个数。
 默认值   1

##1 GridppReport.PageDivideSpacing = 页切分间隔
打印输出时，纸张在垂直方向均分时的分隔间距。
 默认值   0
 说明
 以报表使用的计量单位表示属性值。

##1 GridppReport.PageDivideLine = 显示页切分线
打印输出时，是否显示纸张在垂直方向均分的分隔线。

##1 GridppReport.PrintAsDesignPaper = 按设计页打印
指定是否按设计时的页面设置生成打印页面。
   说明
    如果此属性为真，则打印页面按设计时的页面设置进行生成，反之则按系统中打印机的当前页面设置进行生成。

##1 GridppReport.PrintToStretch = 是否缩放打印
在按设计页面打印报表，且打印机的当前页面设置与报表设计页面不匹配，指定打印输出是否进行缩放适应。

##1 GridppReport.GetBackImage = 获取背景图像
获取报表在设计器中进入页面视图时显示的背景图。
背景图仅在报表设计时使用，只有当报表进入页面视图中才会显示背景图。如果同时设定了 背景图 与 背景图文件 属性，此时只有 背景图像 属性指定的图像被显示。使用背景图可以根据背景图精确定位报表布局，快速实现套打定位。

##1 GridppReport.BackImageFile = 背景图文件
指定报表在设计器中进入页面视图时显示的背景图文件的路径与名称。
特征
可读写
设计器中可见
仅用于设计

    说明
    背景图仅在报表设计时使用，只有当报表进入页面视图中才会显示背景图。如果同时设定了
    背景图像与背景图文件属性，此时只有
    背景图像属性指定的图像被显示。使用背景图可以根据背景图精确定位报表布局，快速实现套打定位。

##1 GridppReport.BackImagePreview = 预览背景图
指示在报表预览时，是否显示设计背景图。

##1 GridppReport.GetWatermark = 获取水印图像
获取水印图像

##1 GridppReport.WatermarkAlignment = 水印图对齐方式
指定水印图在页面中显示时的位置对齐方式。
默认值  居中

##1 GridppReport.WatermarkSizeMode = 水印图缩放方式
指定水印图在页面中显示时使用的缩放方式。
默认值  剪裁

##1 GridppReport.ShowMoneyDigit = 财务金额位数
指定在报表中显示金额线或金额位标签时显示的位数。
默认值   9
说明
位数不包括角与分位。

##1 GridppReport.ShowMoneyWidth = 财务金额位总宽度
指定在报表中显示金额线或金额位标签时显示全部位的宽度。
    语法:对象.财务金额位总宽度=整数型
    默认值   0
       说明
    以报表的计量单位表示属性值。当属性值为零时，报表在运行时将自动确定金额显示宽度。

##1 GridppReport.ShowMoneyLineColor = 财务金额线颜色
指定金额位分隔线的颜色。
    语法:对象.财务金额线颜色=逻辑型
    默认值
    grclTeal

##1 GridppReport.ShowMoneySepLineColor = 财务金额分隔线颜色
指定元与角位之间的分隔线的颜色。
 默认值:grclPurple

##1 GridppReport.ShowMoneyDivLineColor = 财务金额水平分隔线颜色
财务金额水平分隔线颜色

##1 GridppReport.DesignLeftMargin = 设计页左边距
指定设计报表时所定义的页面左边距。
默认值   2.5cm

##1 GridppReport.DesignRightMargin = 设计页右边距
指定设计报表时所定义的页面右边距。
默认值   2.5cm

##1 GridppReport.DesignTopMargin = 设计页上边距
指定设计报表时所定义的页面上边距。
默认值   2.5cm

##1 GridppReport.DesignBottomMargin = 设计页下边距
指定设计报表时所定义的页面下边距。
默认值   2.5cm

##1 GridppReport.DesignPaperWidth = 设计页宽度
指定设计报表时所定义的页面宽度，仅自定义纸张设置此属性有效。

##1 GridppReport.DesignPaperLength = 设计页长度
指定设计报表时所定义的页面长度，仅自定义纸张设置此属性有效。

##1 GridppReport.DesignPaperOrientation = 设计纸张方向
指定设计报表时所定义的纸张打印方向。
默认值   纵向

##1 GridppReport.DesignPaperSource = 设置送纸来源


##1 GridppReport.DesignPrintCollate = 设计逐份打印


##1 GridppReport.DesignPrintDuplex = 设计双面打印


##1 GridppReport.DesignPaperName = 设计纸张名称
指定设计报表时所定义的纸张名称。

##1 GridppReport.DesignPaperSize = 设计纸张型号
指定设计报表时所定义的纸张大小代号。
    默认值   A4
 
    说明
    参考Windows
    SDK中DEVMODE的成员dmPaperSize的说明。其中256代表自定义纸张，当定义为自定义纸张时，可以设置纸张宽度与长度属性指定打印纸张的大小。

##1 GridppReport.DesignPaperKind = 设计页面类型
指定设计页面类型.

##1 GridppReport.GetPrinter = 获取打印机
获取打印机对象的接口引用。

##1 GridppReport.GetImageList = 获取图像集合
取报表对象中图像集合对象的接口引用。

##1 GridppReport.InitializeScript = 初始化脚本
初始化脚本

##1 GridppReport.ProcessBeginScript = 开始处理脚本
开始处理脚本

##1 GridppReport.ProcessEndScript = 结束处理脚本
结束处理脚本

##1 GridppReport.PageStartScript = 页开始脚本
页开始脚本

##1 GridppReport.PageEndScript = 页结束脚本
页结束脚本

##1 GridppReport.BeforeSortScript = 排序前脚本
排序前脚本

##1 GridppReport.Running = 运行中
指示查询显示器是否正在运行显示报表中。

##1 GridppReport.DisplayMode = 显示模式
指示报表的输出显示状态。
说明
    指示报表的输出显示状态。在SectionFormat事件处理函数中，获取本属性的值以知道当前的显示输出过程，可以对查询显示器中报表的子画显示输出和打印页面生成显示输出采取不同的处理。

##1 GridppReport.FirstPass = 第一遍打印生成
指示报表是否在第一遍报表运行过程中。
Grid++Report 在生成打印页面数据时，需要两次遍历处理报表数据，通过此属性可以侦测报表是处于第一遍生成过程中，还是处于第二遍生成过程中。 
此属性必须用在于打印相关的报表事件中。

##1 GridppReport.PageBlankHeight = 页面空白高度
页面空白高度

##1 GridppReport.ShowProgressUI = 显示进度界面
显示进度界面

##1 GridppReport.About = 关于
关于方法
    显示Grid++Report关于对话框。

##1 GridppReport.Register = 注册
用Grid++Report的产品序列号进行注册。
说明
    当你用Grid++Report开发一个应用程序时，如果没有进行对其注册，Grid++Report将运行在试用版状态下。你必须在应用程序启动之后，对Grid++Report进行注册。具体办法是创建一个零时的报表主对象，并调用其注册方法。一个应用程序只用进行一次注册。在例子程序ManualFillRecord中有怎样实现注册的示例。
    当你购买Grid++Report之后，你将收到Grid++Report的产品序列号。另外你也可以通过注册获得Grid++Report免费版的产品序列号。有关本产品版本与注册方面的信息请查看相关文档。

##1 GridppReport.Register.SerialNo = 注册码


##1 GridppReport.PixelsToUnit = 像素转换为单位
将屏幕像素值转换为报表当前使用的计量单位值。

##1 GridppReport.PixelsToUnit.Pixels = 像素值
指定要转换的屏幕像素值。

##1 GridppReport.UnitToPixels = 计量单位转变为像素
将屏幕像素值转换为报表当前使用的计量单位值。

##1 GridppReport.UnitToPixels.UnitValue = 屏幕像素值
指定要转换的屏幕像素值。

##1 GridppReport.SystemVarValue = 获取系统变量值
在报表运行时，取得本报表某个指定系统参数的当前值。

##1 GridppReport.SystemVarValue.SystemVar = 系统变量枚举值


##1 GridppReport.ControlByName = 按名称取部件框
从报表主对象包括的所有部件框中根据部件框名称找到对应部件框对象的接口引用。

##1 GridppReport.ControlByName.Name = 名称


##1 GridppReport.ColumnByName = 按名称取列
根据名称找到对应列对象的接口引用。

##1 GridppReport.ColumnByName.Name = 列名称


##1 GridppReport.FieldByName = 按名称取字段
根据字段名称得到匹配字段对象的接口引用。
如果找到名称匹配的字段，则返回该字段对象的接口引用，否则返回NULL。
注意：匹配名称时不区分字母的大小写。

##1 GridppReport.FieldByName.Name = 字段名称


##1 GridppReport.FieldByDBName = 按名称取字段对象
根据字段的字段名称得到匹配字段对象的接口引用。
如果找到匹配的字段，则返回该字段对象的接口引用，否则返回NULL。

##1 GridppReport.FieldByDBName.Name = 字段名称


##1 GridppReport.ParameterByName = 按名称取列参数
根据名称找到对应参数对象的接口引用。
如果找到名称匹配的参数，则返回该参数对象的接口引用，否则返回NULL。

##1 GridppReport.ParameterByName.Name = 名称
指定要查找参数的名称。

##1 GridppReport.AddParameter = 增加参数
增加参数方法: 增加一个参数定义。
调用格式：〈参数〉对象．增加参数（文本型参数名称，参数数据类型枚举参数类型）
    返回值:参数,返回新增参数对象的接口引用。

##1 GridppReport.AddParameter.Name = 参数名称


##1 GridppReport.AddParameter.DataType = 数据类型


##1 GridppReport.InsertDetailGrid = 插入明细网格
向报表主对象插入明细网格，使报表主对象具有明细网格。
 说明
    只有当报表主对象不存在明细网格对象时，才能成功插入明细网格，报表主对象只能拥有一个明细网格。此方法一般在以编程方式定义报表模板时使用。

##1 GridppReport.InsertPageHeader = 插入页眉
增加页眉定义。
说明
    增加页眉定义，使报表主对象具有一个页眉。如果报表主对象已经定义了页眉，此方法直接返回页眉的接口引用。

##1 GridppReport.InsertPageFooter = 插入页脚
增加页脚定义。
说明
    增加页脚定义，使报表主对象具有一个页脚。如果报表主对象已经定义了页脚，此方法直接返回页脚的接口引用。

##1 GridppReport.InsertReportHeader = 插入报表头
增加一个报表头。

##1 GridppReport.InsertReportFooter = 插入报表尾
增加一个报表尾。

##1 GridppReport.FindFirstControl = 查找第一个部件框
找出报表中的第一个部件框。
如果报表中不存在部件框，则返回值为空值引用。 
通过 FindFirstControl 与 FindNextControl 可以遍历出报表中的全部部件框，如下C++语言代码：

##1 GridppReport.FindNextControl = 查找下一个部件框
找出报表中的下一个部件框的引用。
如果报表中不存在后续的部件框，则返回值为空值引用。在调用 FindNextControl 之前必须调用 FindFirstControl 。 

通过 FindFirstControl 与 FindNextControl 可以遍历出报表中的全部部件框，如下C++语言代码： 
{ 
ListBox1->Clear(); 
IGRControlPtr pControl = GridppReport1->FindFirstControl(); 
while (pControl) 
{ 
ListBox1->Items->Add(pControl->Name); 

pControl = GridppReport1->FindNextControl(); 
} 
}

##1 GridppReport.Clear = 清空
请空记录集中的全部记录。

##1 GridppReport.DeleteDetailGrid = 删除明细网格
删除整个明细网格的定义，报表主对象将不具有明细网格。

##1 GridppReport.DeletePageHeader = 删除页眉
删除页眉方法

##1 GridppReport.DeletePageFooter = 删除页脚
删除页脚对象

##1 GridppReport.DeleteReportHeader = 删除报表头
删除页眉的定义，报表主对象将不具有页眉。

##1 GridppReport.DeleteReportFooter = 删除报表尾
删除页脚的定义，报表主对象将不具有页脚。

##1 GridppReport.Print = 打印
执行打印报表。
说明
    调用此方法后，首先生成报表数据，过程中会触发一系列事件；然后生成打印页面数据，过程中也会触发一系列事件；最后将生成的打印数据送至打印机进行打印。

##1 GridppReport.Print.ShowPrintDialog = 显示打印对话框
指示在打印前是否显示打印对话框。

##1 GridppReport.PrintEx = 打印扩展
打印报表,按指定方式生成生成打印数据。
    调用格式：〈无返回值〉
    对象．打印扩展（打印生成方式枚举打印生成方式枚举值，逻辑型显示打印对话框）
    参数1:打印生成方式枚举值,指定打印数据的生成类型。
    参数2:显示打印对话框,指示在打印前是否显示打印对话框。

    说明
    类同 打印方法。当生成方式为全部时，与打印方法完全一样；当成方式为 套打 时，生成打印页面时将忽略掉属于表单类型的数据；
    当成方式为表单时,不会触发 请求数据 事件，生成打印页面时仅生成属于表单类型的数据。


##1 GridppReport.PrintEx.GenerateStyle = 打印生成方式枚举
指定打印数据的生成类型。

##1 GridppReport.PrintEx.ShowPrintDialog = 显示打印对话框
指示在打印前是否显示打印对话框

##1 GridppReport.PrintPreview = 打印预览
打印预览方法
说明
    调用此方法后，首先生成报表数据，过程中会触发一系列事件；然后生成打印页面，过程中也会触发一系列事件；最后打开缺省预览窗口并将生成的打页面显示在窗口中。

##1 GridppReport.PrintPreview.ShowModal = 显示模
指定是否以有模的方式显示窗口

##1 GridppReport.PrintPreviewEx = 打印预览扩展
在Grid++Report提供的缺省打印预览窗口中预览报表，可以指定打印数据的生成方式。
    说明
    类同　打印预览　方法。当生成方式为 全部 时，与 打印预览方法完全一样；当成方式为 套打时，生成打印页面时将忽略掉属于表单类型的数据；当成方式为表单时,不会触发请求记录 事件，生成打印页面时仅生成属于表单类型的数据。

##1 GridppReport.PrintPreviewEx.GenerateStyle = 打印生成方式枚举值
指定打印数据的生成方式。

##1 GridppReport.PrintPreviewEx.ShowModal = 显示模
指定是否以有模的方式显示打印预览窗口。

##1 GridppReport.PrintPreviewEx.MaximizeWindow = 最大化预览窗口
指定是否最大化显示打印预览窗口。

##1 GridppReport.GenerateDocumentFile = 生成报表文档
生成报表的Grid++Report 文档文件到指定的文件。

##1 GridppReport.GenerateDocumentFile.FileName = 文件名
保存数据的文件的路径与名称。

##1 GridppReport.BeginLoopPrint = 开始循环打印
开始循环打印方法

##1 GridppReport.BeginLoopPrint.GenerateStyle = 生成方式


##1 GridppReport.BeginLoopPrint.ShowPrintDialog = 是否显示打印对话框


##1 GridppReport.EndLoopPrint = 结束循环打印
结束循环打印方法

##1 GridppReport.LoopPrint = 循环打印
在循环打印过程中，执行一次打印生成过程。
说明
    每调用一次循环打印方法，就会首先生成报表数据，然后生成打印页面数据，最后将打印页面数据送至打印机进行打印输出。

    请参见
    IGridppReport接口 |IGridppReport成员 |IGridppReport.BeginLoopPrint方法 |IGridppReport.EndLoopPrint方法 |
    IGridppReport.Print方法 |IGridppReport.PrintEx方法

##1 GridppReport.AbortPrint = 中断打印
中断打印

##1 GridppReport.LoadFromFile = 从文件加载报表
从报表模板文件中载入报表模板定义。

##1 GridppReport.LoadFromFile.FileName = 文件名
指定模板文件的完全路径名称。

##1 GridppReport.SaveToFile = 保存到文件
将报表模板数据保存到报表模板文件中去。

##1 GridppReport.SaveToFile.FileName = 文件名
文件名,指定模板文件的完全路径名称。

##1 GridppReport.LoadFromStr = 从字符串加载报表
从字符串中载入报表模板数据。

##1 GridppReport.LoadFromStr.Data = 字符串
包括报表字符定义的文本

##1 GridppReport.SaveToStr = 保存到字符串
保存报表模板数据保存至字符串。

##1 GridppReport.LoadFromVariant = 从变量加载报表
从变量加载报表方法

##1 GridppReport.LoadFromVariant.Buf = 数据


##1 GridppReport.SaveToVariant = 保存到变量
保存报表模板数据保存至内存缓冲区。

##1 GridppReport.ForceNewPage = 强制换新页
在报表生成过程中，结束当前页，开始一个新页面。
说明
    在报表生成过程中，可以调用此方法强制进行分页。只能在页处理记录事件与
    格式化报表节事件中调用，在
    格式化报表节
    中调用时必须保证是在打印生成状态中。

##1 GridppReport.LoadBackImageFromFile = 从文件加载背景图
从指定的图像文件中载入报表设计页面背景图。

##1 GridppReport.LoadBackImageFromFile.PathFile = 文件名
指定图像文件的路径与名称。

##1 GridppReport.LoadWatermarkFromFile = 从文件加载水印图
从指定的图像文件中载入水印背景图。

##1 GridppReport.LoadWatermarkFromFile.PathFile = 文件名
水印图文件名

##1 GridppReport.ExportDirect = 直接导出
直接进行数据导出。

##1 GridppReport.ExportDirect.ExportType = 导出类型
指定导出的文件类型。

##1 GridppReport.ExportDirect.FileName = 文件名
指定导出的完整文件路径与文件名称

##1 GridppReport.ExportDirect.ShowOptionDlg = 显示导出设置对话框
指定是否在导出之前显示选项设置对话框

##1 GridppReport.ExportDirect.DoneOpen = 打开文件
指定在导出完成后调用关联程序打开文件.

##1 GridppReport.Export = 导出
执行数据导出。

##1 GridppReport.Export.DoneOpen = 导出后打开文件
指示是否在导出数据之后用关联程序打开导出文件

##1 GridppReport.PrepareExport = 准备导出
准备进行数据导出，指定要导出的文件类型。
说明
    在调用导出方法之前一定要调用本方法，在其后一定要调用完成导出方法。本方法返回的选项对象的接口引用可以用来设定选项值。

##1 GridppReport.PrepareExport.ExportType = 导出类型
导出类型

##1 GridppReport.UnprepareExport = 完成导出
数据导出完成之后，进行一些内部释放任务。
说明
    在调用导出方法之前一定要调用准备导出方法，在其后一定要调用完成导出方法。

##1 GridppReport.SharePrintSetupOptions = 共享打印选项
指定共享全局打印设置参数的选项。
    默认值   0
    特征
    可读写
    设计器中可见
    说明
    用二进制Bit位表示相应的共享全局打印设置参数是否被当前报表使用。如果使用某个或某类全局打印设置参数，这对当前报表应用或设置打印设置参数都是对共享全局打印设置参数进行操作。

##1 GridppReport.GetSharePrintSetupObject = 获取共享打印设置对象
获取当前应用程序的共享全局打印设置对象的接口引用。
通过此属性取得当前应用程序的共享全局打印设置对象的接口引用，从而可以对共享全局打印设置参数进行操作。

##1 GridppReport.SharePrintSetupSetOptionEnabled = 设置共享打印选项值
设定是否应用某个共享全局打印参数项的标志。

##1 GridppReport.SharePrintSetupSetOptionEnabled.Option = 选项
指定进行设置的共享全局打印参数项。

##1 GridppReport.SharePrintSetupSetOptionEnabled.Enabled = 可用
指定共享全局打印参数项的使能状态。

##1 GridppReport.SharePrintSetupEnableAllOptions = 开启全部共享打印选项
指定应用全部的共享打印设置参数。

##1 GridppReport.SharePrintSetupDisableAllOptions = 禁止全部共享打印选项
指定禁用全部的共享打印设置参数。

##1 GridppReport.SharePrintSetupGetOptionEnabled = 获取共享打印选项值
获取是否应用某个共享全局打印参数项的使能状态。

##1 GridppReport.SharePrintSetupGetOptionEnabled.Option = 选项
指定一个共享全局打印参数项目。

##1 GridppReport.SetBackImage = 设置背景图像
指定报表在设计器中进入页面视图时显示的背景图。
说明
背景图仅在报表设计时使用，只有当报表进入页面视图中才会显示背景图。如果同时设定了 背景图 与 背景图文件 属性，此时只有 背景图像 属性指定的图像被显示。使用背景图可以根据背景图精确定位报表布局，快速实现套打定位。本命令为初级对象成员命令。示。使用背景图可以根据背景图精确定位报表布局，快速实现套打定位。

##1 GridppReport.SetBackImage.属性值 = 图片对象
一个对象型的图片数据变量

##1 GridppReport.SetWatermark = 设置水印图像
指定报表在生成打印页面时在每页中显示的水印背景图像。

##1 GridppReport.SetWatermark.属性值 = 图片对象
指定报表在生成打印页面时在每页中显示的水印背景图像。

##1 _IGridppReportEvents.Initialize = 初始化事件
在报表生成开始时触发。
    在报表生成开始时触发。在此事件中，报表开发者可以对报表模板定义进行修改调整。例如用户在报表生成之从所有可选的列中选择一部分列显示，就可以在此事件中以编程方式动态定义列。

##1 _IGridppReportEvents.FetchRecord = 请求记录数据
在报表生成时，报表主对象请求数据时触发。
    在报表生成时，报表主对象请求数据时触发。任何具有明细网格的报表在报表生成时，都会触发此事件，报表开发者必须在此事件中向记录集填入数据，此事件也是报表开发者必须要响应的事件。

##1 _IGridppReportEvents.FetchRecord.pEof = 是否完成
指向一个存储是否完成取数过程的变量的指针。

##1 _IGridppReportEvents.BeforePostRecord = 提交记录之前
在向报表中填入记录数据的过程中，每当提交一条记录之前触发本事件。
说明
    在此事件中，我们可以对当前记录的各个字段值进行重新设置，记录提交之后就不能修改其字段值。譬如可以在此事件中设置需要由其它字段通过计算得来的字段值。

##1 _IGridppReportEvents.BeforeSort = 排序之前
排序之前 事件
    当要对记录集中的记录进行重新排序之前触发本事件。
    如果设置了记录集的排序字段(SortFields)属性，在每次生成报表时，在开始处理事件之前会触发排序之前事件。另当查询显示器设定为可排序时，点击明细网格的列标题会按点击的列对记录进行重新排序，此时也会触发排序之前事件。

##1 _IGridppReportEvents.BeforeSort.SortFields = 排序字段
排序字段,指定进行排序的字段，当按多个字段进行排序时，字段名称之间用‘;’隔开。

##1 _IGridppReportEvents.ProcessBegin = 开始处理事件
当报表准备对填入的数据进行分析处理之前触发本事件。

##1 _IGridppReportEvents.ProcessEnd = 结束处理事件
当报表对填入的数据进行分析处理完成之后触发本事件。

##1 _IGridppReportEvents.GroupBegin = 开始分组事件
在生成报表数据时，开始一个分组触发。

##1 _IGridppReportEvents.GroupBegin.pSender = 分组
指示触发事件的分组对象的接口引用。

##1 _IGridppReportEvents.GroupEnd = 结束分组事件
在生成报表数据时，结束一个分组触发。

##1 _IGridppReportEvents.GroupEnd.pSender = 分组
指示触发事件的分组对象的接口引用。

##1 _IGridppReportEvents.ProcessRecord = 处理记录事件
当报表生成时，会按顺序遍历每一条记录，每当遍历一条记录时触发本事件。
说明
    当报表生成时，会按顺序遍历每一条记录，每当遍历一条记录时触发本事件。在此事件中，可以取记录的各个字段的值。报表开发者可以在此事件中对数据进行一些自定义的分析统计。

##1 _IGridppReportEvents.PageProcessRecord = 页处理记录事件
当报表在生成打印数据时，会再次按顺序遍历每一条记录，每当遍历一条记录时触发本事件。

##1 _IGridppReportEvents.PageStart = 开始页事件
在开始生成一个打印页面时触发本事件。

##1 _IGridppReportEvents.PageEnd = 结束页事件
在完成一个打印页面生成时触发本事件。

##1 _IGridppReportEvents.SectionFormat = 格式化报表节
当报表节在输出之前触发。包括查询显示预打印生成显示。
说明
    当报表节在输出显示之前触发。一般在格式化报表节事件中改变节及节中的部件框或单元格的显示外观属性，已达到某些突出显示的效果。
    当节在查询显示器中显示时，每当查询显示器窗口需要刷新显示时，都会触发节的格式化报表节，所以节的格式化报表节事件会频繁触发。当报表节打印生成阿时，当每个节在输出之前会触发格式化报表节事件。一个节每显示一次，就会触发一次格式化报表节事件，一个节如果多次显示，就会多次触发格式化报表节t事件。

##1 _IGridppReportEvents.SectionFormat.pSender = 报表节
指示触发本事件的节的接口引用。

##1 _IGridppReportEvents.FieldGetDisplayText = 请求字段显示文字
当字段对象准备生成其显示文本时触发。
指定触发此事件的字段对象的接口引用。
当字段对象准备生成其显示文本时触发。如果一个字段的显示文本不是字段对象内部生成的文本，就需要在此事件中为字段设定显示文本，通过给字段的 显示文字 属性赋值改变字段的显示文本。

##1 _IGridppReportEvents.FieldGetDisplayText.pSender = 字段对象


##1 _IGridppReportEvents.TextBoxGetDisplayText = 请求文字框显示文字
当文字类型的部件框准备生成其显示文本时触发。

当文字类型的部件框准备生成其显示文本时触发。如果其显示文本不是内部生成的文本，就需要在此事件中为其设定显示文本，通过给其 显示文字 属性赋值改变字段的显示文本。

##1 _IGridppReportEvents.TextBoxGetDisplayText.pSender = 部件框
指定触发本事件的文本部件框对象的接口引用。

##1 _IGridppReportEvents.PrintBegin = 打印开始事件
在开始打印报表之前，触发本事件。

##1 _IGridppReportEvents.PrintEnd = 打印结束事件
在结束打印报表之后，触发本事件。

##1 _IGridppReportEvents.PrintPage = 打印页事件
在打印每一页报表页面时触发本事件。

##1 _IGridppReportEvents.PrintPage.PageNo = 页号
指定当前打印页的页号。

##1 _IGridppReportEvents.PrintAborted = 打印中止事件
当打印任务中途取消时触发本事件

##1 _IGridppReportEvents.ExportBegin = 开始导出报表
在报表导出任务执行之前触发本事件。

##1 _IGridppReportEvents.ExportBegin.pOptionObject = 导出选项
导出选项对象接口引用。

##1 _IGridppReportEvents.ExportEnd = 结束导出报表
在报表导出任务完成时触发本事件。

##1 _IGridppReportEvents.ExportEnd.pOptionObject = 导出选项
导出选项对象接口引用。

##0 GRShiftStates = 切换状态枚举
GRShiftStates
    切换状态枚举枚举
    在鼠标与键盘事件中，指定事件触发时鼠标与键盘的状态。

    成员名称		    说明
    Alt按下		    指示键盘‘Alt’键按下标志。
    Ctrl按下		    指示键盘‘Ctrl’键按下标志。
    鼠标双击		    指示鼠标双击标志。
    鼠标左按钮按下	    指示鼠标左按钮按下标志。
    鼠标中按钮按下	    指示鼠标中按钮按下标志。
    鼠标右按钮按下	    指示鼠标右按钮按下标志。
    Shift按下		    指示键盘‘Shift’键按下标志。

##1 tagGRShiftState = 切换状态枚举
tagGRShiftState
    切换状态枚举枚举
    在鼠标与键盘事件中，指定事件触发时鼠标与键盘的状态。

    成员名称		    说明
    Alt按下		    指示键盘‘Alt’键按下标志。
    Ctrl按下		    指示键盘‘Ctrl’键按下标志。
    鼠标双击		    指示鼠标双击标志。
    鼠标左按钮按下	    指示鼠标左按钮按下标志。
    鼠标中按钮按下	    指示鼠标中按钮按下标志。
    鼠标右按钮按下	    指示鼠标右按钮按下标志。
    Shift按下		    指示键盘‘Shift’键按下标志。

##1 tagGRShiftState.grssShift = 切换键Shift


##1 tagGRShiftState.grssAlt = 切换键Alt


##1 tagGRShiftState.grssCtrl = 切换键Ctrl


##1 tagGRShiftState.grssLeft = 鼠标左按钮


##1 tagGRShiftState.grssRight = 鼠标右按钮


##1 tagGRShiftState.grssMiddle = 鼠标中按钮


##1 tagGRShiftState.grssDouble = 鼠标双击


##0 GRMouseButton = 鼠标按钮枚举
GRMouseButton
    鼠标按钮枚举
    在鼠标事件中，指定鼠标按钮。

    成员名称		    说明
    鼠标左按钮		    鼠标左按钮。
    鼠标中按钮		    鼠标中按钮。
    鼠标右按钮		    鼠标右按钮。

##1 tagGRMouseButton = 鼠标按钮枚举
tagGRMouseButton
    鼠标按钮枚举
    在鼠标事件中，指定鼠标按钮。

    成员名称		    说明
    鼠标左按钮		    鼠标左按钮。
    鼠标中按钮		    鼠标中按钮。
    鼠标右按钮		    鼠标右按钮。

##1 tagGRMouseButton.grmbLeft = 左
tagGRMouseButton.grmbLeft
    左 属性
    部件框的左端显示位置。
    数据类型:双精度小精型
    语法:对象.左=双精度小精型
    特征:可读写
    设计器中可见
    说明
    以报表使用的计量单位表示的左端显示位置值，相对于父容器。

##1 tagGRMouseButton.grmbRight = 右


##1 tagGRMouseButton.grmbMiddle = 中


##1 GRDisplayViewer = 查询显示器


##1 GRDisplayViewer.GetReport = 获取关联报表

##1 GRDisplayViewer.Running = 运行中
    运行中属性
    指示查询显示器是否正在运行显示报表中。
    语法:对象.运行中
    特征
    只读

##1 GRDisplayViewer.ShowPreviewLine = 显示页面分隔线


##1 GRDisplayViewer.SelRowNo = 选中行号
    选中行号属性
    选中单元格的行序号。
    语法:对象.选中行号=整数型
    特征
    可读写
    仅运行时可用
    说明
    行序号从零开始计数。

##1 GRDisplayViewer.SelColumnNo = 选中列号
    选中列号属性
    选中单元格的列序号。
    语法:对象.选中列号=整数型
    特征
    可读写
    仅运行时可用
    说明
    列序号从零开始计数。

##1 GRDisplayViewer.VScrollPos = 垂直滚动条位置
    垂直滚动条位置属性
    在运行时，获取与设置水平滚动条的位置。
    语法： 对象.左边=
    整数型
    特征
    可读写
    仅运行时可用

##1 GRDisplayViewer.HScrollPos = 水平滚动条位置

##1 GRDisplayViewer.RowCount = 行数
    行数属性
    运行时，当前查看报表的总行数。
    语法:对象.行数=整数型
    特征
    可读写
    仅运行时可用
    说明
    每个记录对应的显示行为一行，每个显示的分组头算一行，每个显示的分组尾算一行，总行数为以上三种数据的合计。

##1 GRDisplayViewer.SortColumnNo = 排序列号
    排序列号属性
    指定当前进行排序的列序号，如果没有按任何列进行排序，该属性值为-1。
    语法:对象.排序列号=整数型
    特征
    可读写

##1 GRDisplayViewer.BorderStyle = 边框模式
    边框模式属性
    边框线的显示方式。
    数据类型:整数型(注:边框模式枚举值的组合)
    语法:对象.边框模式=整数型(边框模式枚举值)
    默认值:0
    特征:可读写
    设计器中可见
    说明
    本属性值是边框模式枚举值的按位组合。默认值是 0，不显示任何边框。

    请参见
    边框模式枚举

##1 GRDisplayViewer.ShowHeader = 显示报表头
    显示报表头属性
    是否显示报表头的标志。
    语法:对象.显示报表头=逻辑型
    默认值    真
    特征
    可读写
    请参见

##1 GRDisplayViewer.ShowFooter = 显示报表尾
    显示报表尾属性
    是否显示报表尾的标志。
    语法:对象.显示报表尾=逻辑型
    默认值    真
    特征
    可读写

##1 GRDisplayViewer.LeftGap = 左边据

##1 GRDisplayViewer.RightGap = 右边距
    右边距属性
    右边留出的空白间距，以像素为单位。
    语法:对象.右边距=整数型
    默认值    0
    特征
    可读写

##1 GRDisplayViewer.TopGap = 上边距
属性 TopGap
    GRDisplayViewer.TopGap
    上边距属性
    上边留出的空白间距，以像素为单位。
    语法:对象.上边距=整数型
    默认值    0
    特征
    可读写

##1 GRDisplayViewer.BottomGap = 下边距
    下边距属性
    下边留出的空白间距，以像素为单位。
    语法： 对象.下边距= 整数型
    默认值    0
    特征
    可读写

##1 GRDisplayViewer.Resortable = 可重排序
    可重排序属性
    指定是否可以通过点击明细网格的列标题对明细记录进行重新排序。
    语法： 对象.可重排序= 逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 GRDisplayViewer.ResortCaseSensitive = 重排序区分大小写
    重排序区分大小写属性
    指定点击列标题进行排序时，对字符进行排序比较是否大小写敏感。
    语法:对象.重排序区分大小写=逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 GRDisplayViewer.ResortDefaultAsc = 重排序按升序
    重排序按升序 属性
    当点击列标题进行排序时，首先是否按升序进行排序。
    语法:对象.重排序按升序=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见

##1 GRDisplayViewer.GridTitle3D = 网格标题3D
    网格标题3D 属性
    指定是否将明细网格的列标题显示为3D形状。
    语法： 对象.列宽可调整 =  逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 GRDisplayViewer.SelectionBackColor = 选中背景色
    选中背景色属性
    查询显示时，选中格或行的背景填充色。
    语法:对象.选中背景色=整数型
    默认值
    grclHighlight(高亮)
    特征
    可读写
    设计器中可见

##1 GRDisplayViewer.SelectionForeColor = 选中前景色
    选中前景色属性
    查询显示时，选中格或行的前景色。
    语法:对象.选中前景色=整数型
    默认值
    grclHighlightText
    特征
    可读写
    设计器中可见

##1 GRDisplayViewer.SelectionFollowScroll = 选中跟随滚动
    选中跟随滚动属性
    指示选中格或行是否跟随表格的垂直滚动而滚动。
    语法:对象.选中跟随滚动=逻辑型
    默认值    假
    特征
    可读写
    设计器中可见

##1 GRDisplayViewer.AlwaysShowHScrollBar = 总是显示水平滚动条
    总是显示水平滚动条属性
    是否始终显示明细表格的水平滚动条的标志。
    语法： 对象.总是显示水平滚动条 = 逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 GRDisplayViewer.AlwaysShowVScrollBar = 总是显示垂直滚动条
    总是显示垂直滚动条属性
    是否始终显示明细网格的垂直滚动条。
    语法： 对象.总是垂直水平滚动条 = 逻辑型
    默认值:假
    特征
    可读写
    设计器中可见

##1 GRDisplayViewer.BackgroundColor = 空白背景色
    空白背景色属性
    当明细网格不能完整充满查询显示器的显示区域时，指定明细网格外围的空白区域的背景填充色。
    语法： 对象.空白背景色= 整数型
    默认值
    特征
    可读写
    设计器中可见

##1 GRDisplayViewer.ColumnMove = 列可移动
    列可移动属性
    指定是否可以用鼠标拖放改变明细网格列的显示顺序。
    语法： 对象.列可移动
    =  逻辑型
    默认值:真
    特征
    可读写
    设计器中可见

##1 GRDisplayViewer.ColumnResize = 列宽可调整
    列宽可调整属性
    指定是否可以通过鼠标拖放改变明细网格列的显示宽度。
    语法： 对象.列宽可调整
    =  逻辑型
    默认值:真
    特征
    可读写
    设计器中可见

##1 GRDisplayViewer.RowSelection = 整行选中
    整行选中属性
    指定在查询显示报表时是否整行选中内容行。如果不是，选中仅为一个格。
    语法:对象.整行选中=逻辑型
    默认值:真
    特征
    可读写
    设计器中可见

##1 GRDisplayViewer.Searchable = 可查找


##1 GRDisplayViewer.Refresh = 刷新
    刷新方法
    刷新数据，报表重新生成。
    说明
    调用此方法后，报表将重新生成，报表生成过程中触发的事件将再次触发。

##1 GRDisplayViewer.Start = 启动
    启动方法
    开始报表生成与查询显示。
    说明
    执行此方法后，报表生成过程中的相关事件将被触发。

##1 GRDisplayViewer.Stop = 停止
    停止方法
    完成报表的查询显示输出。
    说明
    执行本方法后，查询显示输出所占用的资源将被释放掉。

##1 GRDisplayViewer.GetControlFromPos = 根据位置取得部件框
    根据位置取得部件框方法
    取得指定位置处的部件框对象的接口引用。
    调用格式：〈部件框〉
    对象．根据位置取得部件框（短整数型X轴位置，短整数型Y轴位置）
    返回值:如果在指定位置存在部件框，则返回此部件框的接口引用，否则返回NULL。
    参数<1>的名称为“X轴位置”，类型为“短整数型（short）,水平方向的坐标位置”。
    参数<2>的名称为“Y轴位置”，类型为“短整数型（short）,垂直方向的坐标位置。
    说明
    传入位置参数是指查询显示器的客户区位置。

##1 GRDisplayViewer.GetSectionFromPos = 根据位置取得报表节
    根据位置取得报表节 方法
    取得指定位置处的报表节对象的接口引用。
    返回值:如果在指定位置存在报表节，则返回此报表节的接口引用，否则返回NULL。
    参数<1>的名称为“X轴位置”，类型为“短整数型（short）,水平方向的坐标位置”。
    参数<2>的名称为“Y轴位置”，类型为“短整数型（short）,垂直方向的坐标位置。
    说明
    传入位置参数是指查询显示器的客户区位置。

##1 GRDisplayViewer.GetContentCellFromPos = 根据位置取得内容格
    根据位置取得内容格方法
    取得指定位置处的内容格对象的接口引用。
    返回值:如果在指定位置存在内容格，则返回此内容格的接口引用，否则返回NULL。
    参数<1>的名称为“X轴位置”，类型为“短整数型（short）”。
    参数<2>的名称为“Y轴位置”，类型为“短整数型（short）”。
    说明
    传入位置参数是指查询显示器的客户区位置。此方法一般在查询显示器的鼠标事件中使用，用于判断用户鼠标操作的区域，执行相应的任务去响应用户的鼠标操作。例如要求在用户双击内容格式，打开此内容格对应的当前行记录的数据录入界面。

##1 GRDisplayViewer.GetTitleCellFromPos = 根据位置取得标题格
    根据位置取得标题格方法
    取得指定位置处的标题格对象的接口引用。
    返回值:如果在指定位置存在标题格，则返回此标题格的接口引用，否则返回NULL。
    参数<1>的名称为“X轴位置”，类型为“短整数型（short）,水平方向的坐标位置”。
    参数<2>的名称为“Y轴位置”，类型为“短整数型（short）,垂直方向的坐标位置。
    说明
    传入位置参数是指查询显示器的客户区位置。

##1 GRDisplayViewer.PostColumnLayout = 保存当前列排列
    保存当前列排列方法
    将报表列的当前显示顺序与宽度信息提交到关联报表主对象中去。
    说明
    在报表查询显示时，通过鼠标拖放可以改变列的显示顺序与宽度，调用
    保存当前列排列方法可以将列在查询显示器中的显示状态保存到报表主对象中。
    例如：如果在查询显示之后进行打印，列在查询显示器已经改变顺序与宽度，要求打印要反映列显示的状态，调用此方法就可以达到此目的。

##1 GRDisplayViewer.GetColumnVisible = 获取列的可见性
    获取列的可见性 方法
    取得指定列在查询显示器中的显示或隐藏状态。
    调用格式：
    〈逻辑型〉对象．获取列的可见性（文本型列名称）
    表示列是否显示，为真表示列在查询显示器中显示。
    参数<1>的名称为“列名称”，类型为“文本型（text）”。

##1 GRDisplayViewer.SetColumnVisible = 设置列可见性
    设置列可见性方法
    设置指定列在查询显示器中的显示或隐藏状态。
    参数<1>的名称为“列名称”，类型为“文本型（text）”,指定操作列的名称。
    参数<2>的名称为“可见性”，类型为“逻辑型（bool）”,指定是否显示列。
    说明
    在改变列的显示状态全部完成之后，应调用更新显示方法更新显示。

##1 GRDisplayViewer.UpdateColumnView = 更新列视图
    更新列视图 方法
    当改变列的显示状态之后，调用本方法更新列的显示。
    调用格式：
    〈无返回值〉对象．更新列视图（）
    说明
    本方法不会使报表重新生成，只是根据列的显示状态更新明细网格的显示。在调用 设置列可见性方法之后应调用本方法更新显示。

##1 GRDisplayViewer.UpdateSelCell = 更新选中格

##1 GRDisplayViewer.UpdateSelRow = 更新选中行
    更新选中行方法
    更新显示当前选中内容行。
    调用格式：〈无返回值〉
    对象．更新选中行（）
    说明
    在查询显示报表时，如果改变了当前选中内容行的数据，调用本方法反映最新的数据的显示。

##1 GRDisplayViewer.UpdateControl = 更新部件框
    更新部件框方法
    更新显示指定的部件框。
    调用格式：
    〈无返回值〉对象．更新部件框（部件框待更新部件框）
    参数:待更新部件框,指定要更新显示的部件框对象的接口引用。
    说明
    只有当部件框在报表头与报表尾中时，才能调用本方法进行显示更新。在查询显示报表时，如果改变了部件框的数据，调用本方法反映最新的数据的显示。

##1 GRDisplayViewer.UpdateViewer = 更新显示
    更新显示方法
    更形显示整个查询显示器。

##1 GRDisplayViewer.LockUpdate = 更新锁定
    更新锁定方法
    锁定控件的显示更新。

##1 GRDisplayViewer.UnlockUpdate = 更新解锁
    更新解锁方法
    解锁控件的显示更新。

##1 GRDisplayViewer.Search = 查找文字
    查找文字方法
    执行查找报表文字任务，被匹配的文字将被高亮显示。
    参数<1>的名称为“待查找文本”，类型为“文本型（text）”,指定要查找的文字。
    参数<2>的名称为“是否区分大小写”，类型为“逻辑型（bool）”,指定文字匹配时是否区分大小写。
    参数<3>的名称为“全字匹配”，类型为“逻辑型（bool）”,指定是否要求全字匹配。
    参数<4>的名称为“向上查找”，类型为“逻辑型（bool）”,指定是否按向上的方向进行查找。
    参数<5>的名称为“从当前选中位置查找”，类型为“逻辑型（bool）”,指定是否从当前选中位置进行查找，如果不是：向下查找从首行开始，向上查找从最后一行开始。
    参数<6>的名称为“是否显示查找对话框”，类型为“逻辑型（bool）”,
    指定在执行查找任务之前，是否显示查找对话框。
    参数<7>的名称为“显示信息”，类型为“逻辑型（bool）”。

##1 GRDisplayViewer.SearchAgain = 继续查找


##1 GRDisplayViewer.SetReport = 设置关联报表
    设置关联报表 方法
    关联报表主对象的接口引用。
    调用格式： 〈无返回值〉 对象．设置关联报表 （报表 属性值）
    特征
    可读写

##1 _IGRDisplayViewerEvents.Click = 被单击事件
方法 Click
    _IGRDisplayViewerEvents.Click

##1 _IGRDisplayViewerEvents.DblClick = 被双击事件
方法 DblClick
    _IGRDisplayViewerEvents.DblClick

##1 _IGRDisplayViewerEvents.KeyDown = 按下某键
方法 KeyDown
    _IGRDisplayViewerEvents.KeyDown

##1 _IGRDisplayViewerEvents.KeyPress = 字符输入
方法 KeyPress
    _IGRDisplayViewerEvents.KeyPress

##1 _IGRDisplayViewerEvents.KeyUp = 放开某键
方法 KeyUp
    _IGRDisplayViewerEvents.KeyUp

##1 _IGRDisplayViewerEvents.MouseDown = 鼠标键按下
方法 MouseDown
    _IGRDisplayViewerEvents.MouseDown

##1 _IGRDisplayViewerEvents.MouseUp = 鼠标键放开
方法 MouseUp
    _IGRDisplayViewerEvents.MouseUp

##1 _IGRDisplayViewerEvents.MouseMove = 鼠标位置移动
方法 MouseMove
    _IGRDisplayViewerEvents.MouseMove

##1 _IGRDisplayViewerEvents.ControlClick = 部件框被单击事件
方法 ControlClick
    _IGRDisplayViewerEvents.ControlClick

##1 _IGRDisplayViewerEvents.ControlDblClick = 部件框被双击事件
方法 ControlDblClick
    _IGRDisplayViewerEvents.ControlDblClick

##1 _IGRDisplayViewerEvents.SectionClick = 报表节被单击事件
方法 SectionClick
    _IGRDisplayViewerEvents.SectionClick

##1 _IGRDisplayViewerEvents.SectionDblClick = 报表节被双击事件
方法 SectionDblClick

##1 _IGRDisplayViewerEvents.ContentCellClick = 内容格被单击事件
方法 ContentCellClick
    _IGRDisplayViewerEvents.ContentCellClick

##1 _IGRDisplayViewerEvents.ContentCellDblClick = 内容格被双击事件
方法 ContentCellDblClick
    _IGRDisplayViewerEvents.ContentCellDblClick

##1 _IGRDisplayViewerEvents.TitleCellClick = 标题格被单击事件
方法 TitleCellClick
    _IGRDisplayViewerEvents.TitleCellClick

##1 _IGRDisplayViewerEvents.TitleCellDblClick = 标题格被双击事件
方法 TitleCellDblClick
    _IGRDisplayViewerEvents.TitleCellDblClick

##1 _IGRDisplayViewerEvents.ChartClickSeries = 图表图形被单击事件
方法 ChartClickSeries

##1 _IGRDisplayViewerEvents.ChartDblClickSeries = 图表图形被双击事件
方法 ChartDblClickSeries

##1 _IGRDisplayViewerEvents.ChartClickLegend = 图表图例被单击事件
方法 ChartClickLegend

##1 _IGRDisplayViewerEvents.ChartDblClickLegend = 图表图例被双击事件
方法 ChartDblClickLegend

##1 _IGRDisplayViewerEvents.ColumnLayoutChange = 列排列发生改变事件
方法 ColumnLayoutChange
    _IGRDisplayViewerEvents.ColumnLayoutChange

##1 _IGRDisplayViewerEvents.SelectionCellChange = 选中格改变事件
方法 SelectionCellChange
    _IGRDisplayViewerEvents.SelectionCellChange

##0 GRViewerBorderStyle = 显示器边框模式枚举
GRViewerBorderStyle
    显示器边框模式枚举
    指定查询显示器与打印查看器的边框类型

    成员名称		    说明
    三维边框		    三维边框。
    单行边框		    单行边框。
    无边框		    无边框。

##1 tagGRViewerBorderStyle = 显示器边框模式枚举
tagGRViewerBorderStyle
    显示器边框模式枚举
    指定查询显示器与打印查看器的边框类型

    成员名称		    说明
    三维边框		    三维边框。
    单行边框		    单行边框。
    无边框		    无边框。

##1 tagGRViewerBorderStyle.grvbsFixed3D = 固定3D


##1 tagGRViewerBorderStyle.grvbsFixedSingle = 固定单边


##1 tagGRViewerBorderStyle.grvbsNone = 无


##1 GRPrintViewer = 打印显示器


##1 GRPrintViewer.CurPageNo = 当前页号
属性 CurPageNo
    GRPrintViewer.CurPageNo
    当前页号属性
    当前显示页的页号。页号从一开始计数。
    语法:对象.当前页号=整数型
    特征
    可读写
    仅运行时可用

##1 GRPrintViewer.GetReport = 获取关联报表
属性 Report
    GRPrintViewer.GetReport

##1 GRPrintViewer.PageCount = 页数
属性 PageCount
    GRPrintViewer.PageCount
    页数属性
    报表的总页数。
    语法:对象.页数
    特征
    只读
    仅运行时可用

##1 GRPrintViewer.Running = 运行中
GRPrintViewer.Running
    运行中属性
    指示查询显示器是否正在运行显示报表中。
    语法:对象.运行中
    特征
    只读

##1 GRPrintViewer.RowPages = 页行数
属性 RowPages

##1 GRPrintViewer.ColPages = 列页数
属性 ColPages

##1 GRPrintViewer.ZoomPercent = 显示百分比
属性 ZoomPercent
    GRPrintViewer.ZoomPercent
    显示百分比属性
    打印页面的查看显示百分比例。
    语法:对象.显示百分比=整数型
    默认值    100
    特征
    可读写
    设计器中可见

##1 GRPrintViewer.ViewMode = 查看模式
属性 ViewMode
    GRPrintViewer.ViewMode
    查看模式属性
    打印页面的查看模式。
    语法:对象.查看模式=整数型(注:打印显示模式枚举值)
    默认值
    单页模式
    特征
    可读写
    设计器中可见
    打印显示模式枚举枚举
    在打印预览查看器中，指定查看模式。

    成员名称		    说明
    多页模式		    多页模式，在打印预览窗口中同时显示多页打印页面。
    单页模式		    单页模式，只在打印预览窗口中显示一页打印页面。

##1 GRPrintViewer.ShowRuler = 显示表尺
属性 ShowRuler

##1 GRPrintViewer.ShowToolbar = 显示工具栏
属性 ShowToolbar
    GRPrintViewer.ShowToolbar
    显示工具栏属性
    是否显示工具条标志。
    语法:对象.显示工具栏=逻辑型
    默认值  真
    特征
    可读写
    设计器中可见

##1 GRPrintViewer.GenerateStyle = 生成方式
属性 GenerateStyle
    GRPrintViewer.GenerateStyle
    生成方式属性
    指定打印数据的生成方式。
    语法:对象.生成方式=整数型(注:打印生成方式枚举值)
    默认值:全部
    特征
    可读写
    设计器中可见

    请参见
    打印生成方式枚举
    指示打印页面的生成方式。

    成员名称		    说明
    全部		    生成报表所有数据。
    套打		    只生成报表内容数据。
    表单		    只生成报表表单数据。

##1 GRPrintViewer.ShowMarginCorner = 显示边距角线
GRPrintViewer.ShowMarginCorner
    显示边距角线属性
    指示是否显示页边距的拐角指示线。
    语法:对象.显示边距角线=逻辑型
    默认值  真
    特征
    可读写
    设计器中可见

##1 GRPrintViewer.NextPage = 下一页
方法 NextPage
    GRPrintViewer.NextPage
    下一页方法
    显示下一页打印页面。
    调用格式：〈无返回值〉对象．下一页（）

##1 GRPrintViewer.PriorPage = 前一页
方法 PriorPage
    GRPrintViewer.PriorPage
    前一页方法
    显示上一页打印页面。
    调用格式：〈无返回值〉对象．前一页（）

##1 GRPrintViewer.FirstPage = 移动到首页


##1 GRPrintViewer.LastPage = 移动到尾页


##1 GRPrintViewer.Print = 打印
方法 Print
    GRPrintViewer.Print
    打印方法
    执行打印报表。
    调用格式：〈无返回值〉对象．打印（逻辑型
    显示打印对话框）
    参数:指示在打印前是否显示打印对话框。
    说明
    调用此方法后，首先生成报表数据，过程中会触发一系列事件；然后生成打印页面数据，过程中也会触发一系列事件；最后将生成的打印数据送至打印机进行打印。

##1 GRPrintViewer.Refresh = 刷新
方法 Refresh
    GRPrintViewer.Refresh
    刷新方法
    刷新数据，报表重新生成。
    调用格式：
    〈无返回值〉对象．刷新（）
    说明
    调用此方法后，报表将重新生成，报表生成过程中触发的事件将再次触发。

##1 GRPrintViewer.Start = 开始
方法 Start
    GRPrintViewer.Start
    开始方法
    开始生成报表数据，生成打印数据，并将打印数据数据显示出来。
    调用格式：
    〈无返回值〉对象．开始（）
    说明
    执行此方法后，报表数据生成过程中的相关事件将被触发，打印数据生成过程中的相关事件将被触发。

##1 GRPrintViewer.Stop = 停止
方法 Stop
    GRPrintViewer.Stop
    停止方法
    完成报表的查询显示输出。
    调用格式：
    〈无返回值〉对象．停止（）
    说明
    执行本方法后，查询显示输出所占用的资源将被释放掉。

##1 GRPrintViewer.ZoomToHeight = 缩放到高度完整显示
方法 ZoomToHeight
    GRPrintViewer.ZoomToHeight
    缩放到高度完整显示方法
    缩放页面显示比例到刚好使其高度在查看区域中完整显示出来。
    调用格式：〈无返回值〉对象．缩放到高度完整显示（）
    说明
    注意：此方法只在单页查看模式下有效。

##1 GRPrintViewer.ZoomIn = 放大
方法 ZoomIn
    GRPrintViewer.ZoomIn
    放大方法
    增大显示比例。
    调用格式：〈无返回值〉
    对象．放大（）
    说明
    注意：此方法只在单页查看模式下有效。

##1 GRPrintViewer.ZoomOut = 缩小
方法 ZoomOut
    GRPrintViewer.ZoomOut
    缩小方法
    缩小显示比例。
    调用格式：〈无返回值〉
    对象．缩小（）
    说明
    注意：此方法只在单页查看模式下有效。

##1 GRPrintViewer.ZoomToFit = 缩放到完整显示
方法 ZoomToFit
    GRPrintViewer.ZoomToFit
    缩放到完整显示方法
    缩放页面显示比例到刚好在查看区域中完整显示出来。
    调用格式：
    〈无返回值〉对象．缩放到完整显示（）
    说明
    注意：此方法只在单页查看模式下有效。

##1 GRPrintViewer.ZoomToWidth = 缩放到宽度完整显示
方法 ZoomToWidth
    GRPrintViewer.ZoomToWidth
    缩放到宽度完整显示方法
    缩放页面显示比例到刚好使其宽度在查看区域中完整显示出来。
    调用格式：
    〈无返回值〉对象．缩放到宽度完整显示（）
    说明
    注意：此方法只在单页查看模式下有效。

##1 GRPrintViewer.AddToolbarControl = 增加工具按钮
方法 AddToolbarControl
    GRPrintViewer.AddToolbarControl
    增加工具按钮方法
    向工具栏中增加一个指定的操作界面元素。
    调用格式：
    〈无返回值〉对象．增加工具按钮（打印工具栏部件枚举部件类型）
    参数:部件类型,指定操作界面元素的类型
    说明
    在对工具栏中的操作界面元素调整完之后，应调用更新工具按钮方法更新界面显示。

##1 GRPrintViewer.ResetToolbarContent = 清除全部工具按钮
方法 ResetToolbarContent
    GRPrintViewer.ResetToolbarContent
    清除全部工具按钮方法
    清除工具栏中的全部操作界面元素。
    调用格式：〈无返回值〉
    对象．清除全部工具按钮（）
    说明
    在对工具栏中的操作界面元素调整完之后，应调用
    更新工具按钮方法更新界面显示。

##1 GRPrintViewer.UpdateToolbar = 更新工具按钮
方法 UpdateToolbar
    GRPrintViewer.UpdateToolbar
    更新工具按钮方法
    更新工具栏的显示。
    调用格式：
    〈无返回值〉对象．更新工具按钮（）
    说明
    在对工具栏中的操作界面元素调整完之后，应调用本方法更新界面显示。

##1 GRPrintViewer.LoadFromDocumentFile = 加载报表文档
方法 LoadFromDocumentFile
    GRPrintViewer.LoadFromDocumentFile
    加载报表文档方法
    载入指定的Grid++Report文档文件并在打印查看器中显示。
    调用格式：
    〈无返回值〉对象．加载报表文档（文本型文件名）
    参数:文件名,指定文件的路径与名称。

##1 GRPrintViewer.SetReport = 设置关联报表
属性 Report
    GRPrintViewer.SetReport
    设置关联报表 方法
    获取或设置关联报表主对象的接口引用。
    调用格式： 〈无返回值〉 对象．设置关联报表 （报表 属性值）
    特征
    可写

##1 _IGRPrintViewerEvents.Click = 被单击事件
方法 Click
    _IGRPrintViewerEvents.Click

##1 _IGRPrintViewerEvents.DblClick = 被双击事件
方法 DblClick
    _IGRPrintViewerEvents.DblClick

##1 _IGRPrintViewerEvents.KeyDown = 按下某键事件
方法 KeyDown
    _IGRPrintViewerEvents.KeyDown

##1 _IGRPrintViewerEvents.KeyPress = 字符输入事件
方法 KeyPress
    _IGRPrintViewerEvents.KeyPress

##1 _IGRPrintViewerEvents.KeyUp = 放开某键事件
方法 KeyUp
    _IGRPrintViewerEvents.KeyUp

##1 _IGRPrintViewerEvents.MouseDown = 鼠标键按下事件
方法 MouseDown
    _IGRPrintViewerEvents.MouseDown

##1 _IGRPrintViewerEvents.MouseUp = 鼠标键放开事件
方法 MouseUp

##1 _IGRPrintViewerEvents.MouseMove = 鼠标位置移动事件
方法 MouseMove
    _IGRPrintViewerEvents.MouseMove

##1 _IGRPrintViewerEvents.CurPageChange = 当前页改变事件
方法 CurPageChange

##1 _IGRPrintViewerEvents.StatusChange = 状态改变
方法 StatusChange
    _IGRPrintViewerEvents.StatusChange

##1 _IGRPrintViewerEvents.RulerClick = 标尺被单击事件
方法 RulerClick
    _IGRPrintViewerEvents.RulerClick

##1 _IGRPrintViewerEvents.RulerDblClick = 标尺被双击事件
方法 RulerDblClick
    _IGRPrintViewerEvents.RulerDblClick

##1 _IGRPrintViewerEvents.PageClick = 页被单击事件
方法 PageClick
    _IGRPrintViewerEvents.PageClick

##1 _IGRPrintViewerEvents.PageDblClick = 页被双击事件
方法 PageDblClick
    _IGRPrintViewerEvents.PageDblClick

##1 _IGRPrintViewerEvents.CloseButtonClick = 关闭按钮事件
_IGRPrintViewerEvents.CloseButtonClick
    关闭按钮事件
    当工具条中关闭按钮被点击时触发本事件.
    语法:_打印显示器_关闭按钮事件()

##0 GRPrintViewMode = 打印显示模式枚举
GRPrintViewMode
    打印显示模式枚举枚举
    在打印预览查看器中，指定查看模式。

    成员名称		    说明
    多页模式		    多页模式，在打印预览窗口中同时显示多页打印页面。
    单页模式		    单页模式，只在打印预览窗口中显示一页打印页面。

##1 tagGRPrintViewMode = 打印显示模式枚举
tagGRPrintViewMode
    打印显示模式枚举枚举
    在打印预览查看器中，指定查看模式。

    成员名称		    说明
    多页模式		    多页模式，在打印预览窗口中同时显示多页打印页面。
    单页模式		    单页模式，只在打印预览窗口中显示一页打印页面。

##1 tagGRPrintViewMode.grpvmContinuousPage = 连续


##1 tagGRPrintViewMode.grpvmSinglePage = 单页


##1 tagGRPrintViewMode.grpvmMultiPage = 多页
方法 ultiPage

##0 GRToolControlType = 打印工具栏部件枚举
GRToolControlType
    GRToolControlType枚举
    指定打印查看器控件中工具栏上的按钮、编辑框与组合框的类型

    成员名称		    说明
    grtctCurPageNo		    指定当前显示页编辑框
    grtctExport			    指定数据导出按钮
    grtctMultiPage		    指定多页查看模式按钮
    grtctNextPage		    指定后一页按钮
    grtctPageSetup		    指定页面设置按钮
    grtctPrint			    指定打印按钮
    grtctPrinterSetup		    指定打印机设置按钮
    grtctPriorPage		    指定前一页按钮
    grtctSaveDocument		    指定保存为Grid++Report文档文件按钮
    grtctSep			    指定分隔空隙
    grtctSinglePage		    指定单页查看模式按钮
    grtctZoomIn			    指定放大显示比例按钮
    grtctZoomOut		    指定缩小显示比例按钮
    grtctZoomPercent		    指定显示百分比下拉列表组合框

    请参见

##1 tagGRToolControlType = 打印工具栏部件枚举


##1 tagGRToolControlType.grtctSep = 分隔


##1 tagGRToolControlType.grtctPrint = 打印
tagGRToolControlType.grtctPrint
    打印方法
    执行打印报表。
    调用格式：〈无返回值〉对象．打印（逻辑型
    显示打印对话框）
    参数:指示在打印前是否显示打印对话框。
    说明
    调用此方法后，首先生成报表数据，过程中会触发一系列事件；然后生成打印页面数据，过程中也会触发一系列事件；最后将生成的打印数据送至打印机进行打印。

##1 tagGRToolControlType.grtctPageSetup = 页面设置


##1 tagGRToolControlType.grtctPrinterSetup = 打印机设置


##1 tagGRToolControlType.grtctExport = 导出
tagGRToolControlType.grtctExport
    导出方法
    执行数据导出。
    调用格式：〈逻辑型〉对象．导出（逻辑型调用关联程序打开导出文件）
    返回值:逻辑型,指示数据导出是否成功执行。
    参数:指示是否在导出数据之后用关联程序打开导出文件。
    说明
    在调用导出方法之前一定要调用准备导出方法，在其后一定要调用完成导出方法。

    请参见
    IGridppReport接口 |IGridppReport成员 |IGridppReport.PrepareExport方法 |IGridppReport.UnprepareExport方法 |IGridppReport.ExportDirect方法

##1 tagGRToolControlType.grtctSaveDocument = 保存报表文档


##1 tagGRToolControlType.grtctContinuousPage = 连续


##1 tagGRToolControlType.grtctSinglePage = 单页


##1 tagGRToolControlType.grtctMultiPage = 多页


##1 tagGRToolControlType.grtctZoomIn = 放大
tagGRToolControlType.grtctZoomIn
    放大方法
    增大显示比例。
    调用格式：〈无返回值〉
    对象．放大（）
    说明
    注意：此方法只在单页查看模式下有效。

##1 tagGRToolControlType.grtctZoomOut = 缩小
tagGRToolControlType.grtctZoomOut
    缩小方法
    缩小显示比例。
    调用格式：〈无返回值〉
    对象．缩小（）
    说明
    注意：此方法只在单页查看模式下有效。

##1 tagGRToolControlType.grtctZoomPercent = 缩放百分比


##1 tagGRToolControlType.grtctPriorPage = 上一页


##1 tagGRToolControlType.grtctNextPage = 下一页
tagGRToolControlType.grtctNextPage
    下一页方法
    显示下一页打印页面。
    调用格式：〈无返回值〉对象．下一页（）

##1 tagGRToolControlType.grtctFirstPage = 首页


##1 tagGRToolControlType.grtctLastPage = 尾页


##1 tagGRToolControlType.grtctCurPageNo = 当前页号
tagGRToolControlType.grtctCurPageNo
    当前页号属性
    当前显示页的页号。页号从一开始计数。
    语法:对象.当前页号=整数型
    特征
    可读写
    仅运行时可用

##1 tagGRToolControlType.grtctClose = 关闭


@@ Interface =
0, {F803AE1D-B578-490A-A1FE-38976AD2B625}, IGRGroup, { 1003, 3, 4, 5,  }, { 11, 10, 6, 2, 1, 1002,  }, {  }
0, {07120975-B963-4F85-9B4D-0AC979FEBB5D}, IGRObject, { 1003,  }, { 1002,  }, {  }
0, {5C2FC87F-12F8-4A09-8A4A-792671C03C74}, IGRGroupHeader, { 1003, 2, 3, 8, 106,  }, { 208, 207, 206, 205, 204, 203, 202, 201, 105, 104, 103, 102, 20, 10, 9, 7, 6, 5, 4, 1, 1002,  }, {  }
0, {36971202-D715-4AFC-83D4-7C0DDD8872E8}, IGRGroupSection, { 1003, 2, 3, 8, 106,  }, { 105, 104, 103, 102, 20, 10, 9, 7, 6, 5, 4, 1, 1002,  }, {  }
0, {77FD1006-7067-41FF-A712-0F356A6ACE8C}, IGRSection, { 1003, 2, 3, 8,  }, { 20, 10, 9, 7, 6, 5, 4, 1, 1002,  }, {  }
0, {D4708B2F-DC00-4EF6-9559-A5DD9E86047C}, IGRFont, { 1, 2, 1,  }, { 10, 9, 8, 7, 6, 5, 4, 3,  }, {  }
0, {48636E6A-758E-46C0-B37A-C2A2CAC9469A}, IGRControls, { 0, -4, 2, 3, 4, 5, 6,  }, { 1,  }, {  }
0, {07120975-B963-4F75-9B4D-0AC979FEBB5D}, IGRControl, { 1003, 4, 6, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 51, 52, 53,  }, { 28, 27, 26, 25, 23, 22, 21, 20, 18, 17, 14, 13, 12, 11, 10, 9, 8, 5, 3, 2, 1, 1002,  }, {  }
0, {894581CD-48E7-4FD0-9184-7E8BD1563BE0}, GRControlType, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRControlType, {  }, { 1073741835, 1073741834, 1073741833, 1073741832, 1073741831, 1073741830, 1073741829, 1073741828, 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {CC0F0DB7-E7CE-4625-9636-2539CD1D8A0B}, GRAnchorStyles, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRAnchorStyle, {  }, { 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {A3081B46-DDE5-4EF5-B425-A1FDEDCD4489}, GRDockStyle, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRDockStyle, {  }, { 1073741829, 1073741828, 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {6824D157-008C-4011-AC18-DD06F93D7F30}, GRCenterStyle, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRCenterStyle, {  }, { 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {132FDE21-7F91-4210-9F24-89296F70727B}, GRBorderStyles, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRBorderStyle, {  }, { 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {A9684343-169F-4FA3-AA8C-1D9D09224E24}, GRAlignColumnStyle, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRAlignColumnSideStyle, {  }, { 1073741826, 1073741825, 1073741824,  }, {  }
0, {35AE9572-D5B1-44FF-AF1D-E1E4559FEB72}, GRBackStyle, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRBackStyle, {  }, { 1073741825, 1073741824,  }, {  }
0, {317E6B05-678A-4D20-A85B-29AD1C6CAC26}, GRPrintType, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRPrintType, {  }, { 1073741825, 1073741824,  }, {  }
0, {4E540578-5C41-40AC-95D8-898F511F7D19}, GRDisplayCursor, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRDisplayCursor, {  }, { 1073741829, 1073741828, 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {6A246AC9-1715-40B6-A483-DE9F3E8DA43C}, IGRTextBox, { 1003, 4, 6, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 51, 52, 53,  }, { 110, 109, 108, 107, 106, 105, 104, 103, 102, 100, 28, 27, 26, 25, 23, 22, 21, 20, 18, 17, 14, 13, 12, 11, 10, 9, 8, 5, 3, 2, 1, 1002,  }, {  }
0, {38EFB0EF-1C46-4840-8C3F-C32C089A0D33}, GRTextAlign, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRTextAlign, {  }, { 1073741832, 1073741831, 1073741830, 1073741829, 1073741828, 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {6E67E792-F184-4E77-B5A4-8AD9ABDF774F}, GRFieldType, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRFieldType, {  }, { 1073741830, 1073741829, 1073741828, 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {E66EBBF5-ED8D-44E7-8A6C-E6579ADCC7D4}, IGRChart, { 1003, 4, 6, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 51, 52, 53, 103, 115, 128, 141, 141, 143, 143, 144, 144, 150, 151, 152, 153, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192,  }, { 171, 170, 161, 160, 154, 149, 148, 147, 146, 145, 142, 140, 132, 131, 130, 127, 126, 125, 124, 123, 122, 121, 120, 116, 114, 113, 112, 111, 110, 104, 102, 101, 28, 27, 26, 25, 23, 22, 21, 20, 18, 17, 14, 13, 12, 11, 10, 9, 8, 5, 3, 2, 1, 1002,  }, {  }
0, {13B14F32-370D-44B3-B601-56FA540622FD}, GRChartType, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRChartType, {  }, { 1073741829, 1073741828, 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {B4AF4881-7230-4AE0-8D3A-02F96F339454}, IGRStaticBox, { 1003, 4, 6, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 51, 52, 53,  }, { 201, 200, 110, 109, 108, 107, 106, 105, 104, 103, 102, 100, 28, 27, 26, 25, 23, 22, 21, 20, 18, 17, 14, 13, 12, 11, 10, 9, 8, 5, 3, 2, 1, 1002,  }, {  }
0, {C04A6143-7500-41EF-8062-BD89A0A92D40}, IGRShapeBox, { 1003, 4, 6, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 51, 52, 53,  }, { 121, 120, 110, 108, 107, 106, 105, 104, 101, 28, 27, 26, 25, 23, 22, 21, 20, 18, 17, 14, 13, 12, 11, 10, 9, 8, 5, 3, 2, 1, 1002,  }, {  }
0, {B003E61B-E95A-40B2-8CB2-D55AA56F8FDE}, GRShapeType, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRShapeBoxType, {  }, { 1073741830, 1073741829, 1073741828, 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {0DEAAFDB-2933-47AC-B266-8F03DE6338DD}, GRPenStyle, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRPenStyle, {  }, { 1073741830, 1073741829, 1073741828, 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {7804DD94-1861-4232-87EF-39037B418CF2}, GRLineType, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRLineType, {  }, { 1073741831, 1073741830, 1073741829, 1073741828, 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {28845384-ED9F-4D2E-986E-D52AC37A108F}, IGRSystemVarBox, { 1003, 4, 6, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 51, 52, 53,  }, { 201, 200, 110, 109, 108, 107, 106, 105, 104, 103, 102, 100, 28, 27, 26, 25, 23, 22, 21, 20, 18, 17, 14, 13, 12, 11, 10, 9, 8, 5, 3, 2, 1, 1002,  }, {  }
0, {6613E652-BAEC-4ADE-A8FD-85DFCD70854E}, GRSystemVarType, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRSystemVar, {  }, { 1073741832, 1073741831, 1073741830, 1073741829, 1073741828, 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {FE9AA791-4C55-4E06-A592-08D8DF88A941}, IGRFieldBox, { 1003, 4, 6, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 51, 52, 53,  }, { 200, 110, 109, 108, 107, 106, 105, 104, 103, 102, 100, 28, 27, 26, 25, 23, 22, 21, 20, 18, 17, 14, 13, 12, 11, 10, 9, 8, 5, 3, 2, 1, 1002,  }, {  }
0, {24DE1EBE-5D9C-40EC-A11A-21AF7D0C0D36}, IGRSummaryBox, { 1003, 4, 6, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 51, 52, 53,  }, { 203, 202, 201, 200, 110, 109, 108, 107, 106, 105, 104, 103, 102, 100, 28, 27, 26, 25, 23, 22, 21, 20, 18, 17, 14, 13, 12, 11, 10, 9, 8, 5, 3, 2, 1, 1002,  }, {  }
0, {57EBAB7D-A526-4E04-8419-247595ACDA27}, GRSummaryFun, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRSummaryFun, {  }, { 1073741828, 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {C04A6148-7500-41EF-8062-BD89A0A92D40}, IGRPictureBox, { 1003, 4, 6, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 51, 52, 53, 104, 110, 112, 104,  }, { 106, 105, 103, 102, 101, 28, 27, 26, 25, 23, 22, 21, 20, 18, 17, 14, 13, 12, 11, 10, 9, 8, 5, 3, 2, 1, 1002,  }, {  }
0, {B003E61B-E95A-40B3-8CB2-D55AA56F8FDE}, GRPictureAlignment, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRPictureAlignment, {  }, { 1073741828, 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {B003E61B-E96A-40B3-8CB2-D55AA56F8FDE}, GRPictureSizeMode, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRPictureSizeMode, {  }, { 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {5C038FCC-BB3A-4F99-86AC-139D730A5C8C}, GRSystemImage, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRSystemImage, {  }, { 1073741831, 1073741830, 1073741829, 1073741828, 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {C04A6148-7511-41EF-8062-BD89A0A92D40}, IGRRichTextBox, { 1003, 4, 6, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 51, 52, 53, 110,  }, { 104, 103, 102, 101, 28, 27, 26, 25, 23, 22, 21, 20, 18, 17, 14, 13, 12, 11, 10, 9, 8, 5, 3, 2, 1, 1002,  }, {  }
0, {39A2C13A-D695-44BD-8339-A94FA64CB62B}, IGRMemoBox, { 1003, 4, 6, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 51, 52, 53,  }, { 210, 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 110, 109, 108, 107, 106, 105, 104, 103, 102, 100, 28, 27, 26, 25, 23, 22, 21, 20, 18, 17, 14, 13, 12, 11, 10, 9, 8, 5, 3, 2, 1, 1002,  }, {  }
0, {3E5F5B68-76AD-4901-94EE-D370231D6EB5}, GRTextOrientation, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRTextOrientation, {  }, { 1073741829, 1073741828, 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {CDAA7F5B-E100-49B7-93F2-6B66FC93BE55}, IGRSubReport, { 1003, 4, 6, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 51, 52, 53, 101, 101,  }, { 104, 103, 102, 28, 27, 26, 25, 23, 22, 21, 20, 18, 17, 14, 13, 12, 11, 10, 9, 8, 5, 3, 2, 1, 1002,  }, {  }
0, {C4D3E1B2-EB0A-4D06-B2B2-B9A0E5E5708F}, IGRSections, { 0, -4, 2, 3, 4,  }, { 1,  }, {  }
0, {E005D9F9-8093-4E0E-9AA7-55F1C8096B46}, GRSectionType, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRSectionType, {  }, { 1073741831, 1073741830, 1073741829, 1073741828, 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {CB11F828-A97B-4BC3-9B7A-9D2DDEB1C229}, IGRDetailGrid, { 1003, 2, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 53, 54, 55, 56,  }, { 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 1002,  }, {  }
0, {8F30B065-CE80-49C2-9898-D1C67BBF4C11}, GRPageColumnDirection, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRPageColumnDirection, {  }, { 1073741825, 1073741824,  }, {  }
0, {9F918AEE-5C34-4EC7-BA4D-829588964D93}, GRColumnPrintAdaptMethod, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRColumnPrintAdaptMethod, {  }, { 1073741831, 1073741830, 1073741829, 1073741828, 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {0B1C4720-6C96-4FBA-BD8E-AFB487A94638}, GRNewPageStyle, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRNewPageStyle, {  }, { 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {23F65787-D22B-4CA6-BA49-D22B63CA353A}, IGRColumnContent, { 1003, 2, 3, 8, 24, 159, 180,  }, { 173, 172, 158, 157, 25, 20, 10, 9, 7, 6, 5, 4, 1, 1002,  }, {  }
0, {C765E825-5F52-44CB-AAB6-FA89376DA4C0}, IGRColumnSection, { 1003, 2, 3, 8, 24,  }, { 25, 20, 10, 9, 7, 6, 5, 4, 1, 1002,  }, {  }
0, {AF39550B-2A23-418A-ACEC-812C70EA5A62}, IGRColumnContentCells, { 0, -4, 3,  }, { 1,  }, {  }
0, {BB12AEBD-5839-4A5E-9944-65B6798381C8}, IGRColumnContentCell, { 1003, 4, 9, 10, 50, 60,  }, { 55, 53, 52, 51, 15, 14, 13, 12, 8, 7, 6, 5, 3, 2, 1, 1002,  }, {  }
0, {E2F421D7-73FA-462F-9BF5-7DA3E512CA00}, IGRColumnCell, { 1003, 4, 9, 10,  }, { 15, 14, 13, 12, 8, 7, 6, 5, 3, 2, 1, 1002,  }, {  }
0, {72A79692-2F9E-4FEC-92CC-6B4A7375A3D6}, IGRColumn, { 1003, 5, 6, 7,  }, { 4, 3, 2, 1002,  }, {  }
0, {83CC68EF-B558-45BB-8023-6C4F3BDADA7B}, IGRColumnTitleCell, { 1003, 4, 9, 10, 60, 61, 65, 66,  }, { 53, 52, 51, 50, 15, 14, 13, 12, 8, 7, 6, 5, 3, 2, 1, 1002,  }, {  }
0, {08513FC1-CCCE-4603-8DD1-35BA1CA8D1CD}, IGRColumnTitle, { 1003, 2, 3, 8, 24, 156,  }, { 164, 25, 20, 10, 9, 7, 6, 5, 4, 1, 1002,  }, {  }
0, {97502458-7024-4194-9598-5B62001D8C1A}, IGRColumnTitleCells, { 0, -4, 3, 6, 7,  }, { 1,  }, {  }
0, {DA073B30-05A7-4433-9BA4-E9DD697A3A0B}, GRRepeatStyle, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRRepeatStyle, {  }, { 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {42F6AF5F-5FC4-4F44-9812-1FBD9224CE2C}, IGRColumns, { 0, -4, 2, 3, 4, 5,  }, { 1,  }, {  }
0, {488B2328-67C0-42D1-A133-303FF60D8AE2}, IGRGroups, { 0, -4, 2, 3, 4, 5,  }, { 1,  }, {  }
0, {93CD76F7-5439-437F-8FA5-A650F2CA773C}, IGRRecordset, { 1003, 1, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46,  }, { 23, 22, 21, 20, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1002,  }, {  }
0, {F00CE27D-D1E3-4EF6-9877-BF3233EBF551}, IGRFields, { 0, -4, 2, 3, 4, 5,  }, { 1,  }, {  }
0, {04CEA260-DD00-4954-A81F-F0A201343CB9}, IGRField, { 1003, 5, 30, 31, 5,  }, { 40, 20, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 4, 3, 2, 1, 1002,  }, {  }
0, {00000000-0000-0000-0000-000000000000}, LONG_PTR, {  }, {  }, {  }
0, {C3112650-36D2-4928-9D6C-C0A21CCC1EBA}, IGRCrossTab, { 1003, 40, 50, 51, 52, 53, 54, 55,  }, { 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 3, 2, 1002,  }, {  }
0, {863B60AF-DEB6-4864-9E35-384C0B5A19D8}, GRPeriodType, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRPeriodType, {  }, { 1073741832, 1073741831, 1073741830, 1073741829, 1073741828, 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {FF26DE0B-6A74-4B4D-863B-9215CA55A1BC}, GRGridRowType, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRDetailGridRowType, {  }, { 1073741826, 1073741825, 1073741824,  }, {  }
0, {7FC1D3A0-693F-486E-BDF3-02E98F50F9F3}, IGRPageHeader, { 1003, 2, 3, 8,  }, { 20, 10, 9, 7, 6, 5, 4, 1, 1002,  }, {  }
0, {AACDAA8B-5EBB-4CC7-BCB9-C300FE7184A5}, IGRPageFooter, { 1003, 2, 3, 8,  }, { 20, 10, 9, 7, 6, 5, 4, 1, 1002,  }, {  }
0, {F82DF93F-5FF2-40A6-B50B-016666EC08CA}, IGRReportHeader, { 1003, 2, 3, 8,  }, { 107, 106, 105, 20, 10, 9, 7, 6, 5, 4, 1, 1002,  }, {  }
0, {B2CC2C43-CF42-4E38-BDBB-5C04DF11793F}, IGRReportFooter, { 1003, 2, 3, 8,  }, { 108, 107, 106, 105, 20, 10, 9, 7, 6, 5, 4, 1, 1002,  }, {  }
0, {D40307C2-9342-4C0D-9734-A103418186FE}, IGRParameters, { 0, -4, 2, 3, 4, 5,  }, { 1,  }, {  }
0, {23AF6C8A-0F15-45E3-A10D-9373BB15AC86}, IGRParameter, { 1003, 3, 3,  }, { 13, 12, 11, 10, 9, 8, 7, 4, 2, 1, 1002,  }, {  }
0, {43F958BE-80B0-4796-8E1E-65491B1B1B15}, GRParameterDataType, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRParameterDataType, {  }, { 1073741828, 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {B46455D8-7F29-4DF7-9CF8-56B3D8A9DECE}, GRUnit, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRUnit, {  }, { 1073741825, 1073741824,  }, {  }
0, {CF6671CE-BF4D-47FE-968C-EF7C8642BF90}, GRScriptType, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRScriptType, {  }, { 1073741825, 1073741824,  }, {  }
0, {9F284C9C-9A84-48C3-873D-2B1B0BFFDFC0}, GRStorageFormat, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRStorageFormat, {  }, { 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {1857E38D-78BB-47EF-8D79-E2E75016BEF0}, GRPaperOrientation, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRPaperOrientation, {  }, { 1073741826, 1073741825, 1073741824,  }, {  }
0, {8F20CAE4-4834-49AD-A5F1-D9F8A39CB686}, GRPaperSourceKind, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRPaperSourceKind, {  }, { 1073741838, 1073741837, 1073741836, 1073741835, 1073741834, 1073741833, 1073741832, 1073741831, 1073741830, 1073741829, 1073741828, 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {B32A741E-6B5A-4B11-829D-79740831615F}, GRCollateKind, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRCollateKind, {  }, { 1073741826, 1073741825, 1073741824,  }, {  }
0, {98EB2E1C-D193-4649-853F-0796CB030D40}, GRDuplexKind, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRDuplexKind, {  }, { 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {C1FC7BFF-5097-450D-BBC2-745BF46B478F}, GRPaperKind, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRPaperKind, {  }, { 1073741869, 1073741868, 1073741867, 1073741866, 1073741865, 1073741864, 1073741863, 1073741862, 1073741861, 1073741860, 1073741859, 1073741858, 1073741857, 1073741856, 1073741855, 1073741854, 1073741853, 1073741852, 1073741851, 1073741850, 1073741849, 1073741848, 1073741847, 1073741846, 1073741845, 1073741844, 1073741843, 1073741842, 1073741841, 1073741840, 1073741839, 1073741838, 1073741837, 1073741836, 1073741835, 1073741834, 1073741833, 1073741832, 1073741831, 1073741830, 1073741829, 1073741828, 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {17B23325-7316-4098-9FE3-B5A1C24DB296}, IGRPrinter, { 51, 52, 53,  }, { 43, 42, 41, 40, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 7, 6, 5, 4, 3, 2, 1,  }, {  }
0, {CC18C8CD-0535-4869-8214-55B766B09AB2}, GRPrintRangeType, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRPrintRangeType, {  }, { 1073741826, 1073741825, 1073741824,  }, {  }
0, {CC18C8CD-0525-4769-8214-55B766B09AB2}, GRPrintPageType, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRPrintPageType, {  }, { 1073741826, 1073741825, 1073741824,  }, {  }
0, {01056F48-F4AB-4D9F-BE45-614F3313717D}, IGRImageList, { 1003, 1, 3, 4, 6, 7,  }, { 2, 1002,  }, {  }
0, {CE18C8CD-0525-4869-8214-55B766B09AB2}, GRReportDisplayMode, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRReportDisplayMode, {  }, { 1073741826, 1073741825, 1073741824,  }, {  }
0, {FEFD0FDE-919E-4667-B5BC-435E171107AB}, GRPrintGenerateStyle, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRPrintGenerateStyle, {  }, { 1073741826, 1073741825, 1073741824,  }, {  }
0, {F28567EB-0F37-4701-A474-2FCB2DC353DD}, GRExportType, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRExportType, {  }, { 1073741830, 1073741829, 1073741828, 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {60EB191F-5E63-41E7-807F-C66EC7A8EF26}, IGRExportOption, { 10, 11, 12, 13, 14, 15, 16, 20, 30,  }, { 8, 7, 6, 5, 4, 3, 2, 1,  }, {  }
0, {60EB191F-5E63-41E7-808F-C66EC7A8EF26}, IGRE2XLSOption, { 10, 11, 12, 13, 14, 15, 16, 20, 30,  }, { 56, 55, 54, 53, 52, 51, 50, 8, 7, 6, 5, 4, 3, 2, 1,  }, {  }
0, {3BB506AB-425B-43B0-BC82-28A61FCCF686}, IGRE2TXTOption, { 10, 11, 12, 13, 14, 15, 16, 20, 30,  }, { 56, 55, 54, 53, 52, 51, 50, 8, 7, 6, 5, 4, 3, 2, 1,  }, {  }
0, {F5D15E31-FA9A-42BE-BE9C-8688E7D9D6A0}, IGRE2HTMOption, { 10, 11, 12, 13, 14, 15, 16, 20, 30,  }, { 57, 56, 55, 54, 53, 52, 51, 50, 8, 7, 6, 5, 4, 3, 2, 1,  }, {  }
0, {F4AA885F-AF9C-4032-A65A-F3DFD458C289}, IGRE2RTFOption, { 10, 11, 12, 13, 14, 15, 16, 20, 30,  }, { 8, 7, 6, 5, 4, 3, 2, 1,  }, {  }
0, {273631DD-1CAC-49E9-92EE-584F48921A1E}, IGRE2PDFOption, { 10, 11, 12, 13, 14, 15, 16, 20, 30,  }, { 8, 7, 6, 5, 4, 3, 2, 1,  }, {  }
0, {F623A5E8-4AE4-494E-975B-3C5404428625}, IGRE2CSVOption, { 10, 11, 12, 13, 14, 15, 16, 20, 30,  }, { 54, 53, 52, 51, 50, 8, 7, 6, 5, 4, 3, 2, 1,  }, {  }
0, {81727F33-8D8C-45DC-B525-07ABDC5FB652}, IGRE2IMGOption, { 10, 11, 12, 13, 14, 15, 16, 20, 30,  }, { 50, 8, 7, 6, 5, 4, 3, 2, 1,  }, {  }
0, {C2883B98-3A72-4A6B-8D40-3EAC694A52CA}, GRExportImageType, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRExportImageType, {  }, { 1073741828, 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {5BCB27BB-9750-4B28-9384-77801FB0D4EB}, IGRSharePrintSetupObject, { 51, 52, 53,  }, { 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11,  }, {  }
0, {5A0CE871-44CF-4341-BA6B-0EE444783B86}, GRSharePrintSetupOption, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRSharePrintSetupOption, {  }, { 1073741828, 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {C4ACA069-B92C-401A-B175-354E00D538D9}, IGRLine, { 1003, 4, 6, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 51, 52, 53,  }, { 107, 106, 105, 104, 103, 102, 101, 28, 27, 26, 25, 23, 22, 21, 20, 18, 17, 14, 13, 12, 11, 10, 9, 8, 5, 3, 2, 1, 1002,  }, {  }
0, {530A8E53-DFD5-4B95-A4F3-636E00D801D8}, IGRBarcode, { 1003, 4, 6, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 51, 52, 53,  }, { 116, 109, 108, 106, 105, 104, 103, 102, 101, 28, 27, 26, 25, 23, 22, 21, 20, 18, 17, 14, 13, 12, 11, 10, 9, 8, 5, 3, 2, 1, 1002,  }, {  }
0, {F2E2EA63-9780-41F2-B51B-6650B6549310}, GRBarcodeType, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRBarcodeType, {  }, { 1073741846, 1073741845, 1073741844, 1073741843, 1073741842, 1073741841, 1073741840, 1073741839, 1073741838, 1073741837, 1073741836, 1073741835, 1073741834, 1073741833, 1073741832, 1073741831, 1073741830, 1073741829, 1073741828, 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {3484AAB9-E05B-4028-9ECD-5BAE0A9007AF}, GRStringAlignment, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRStringAlignment, {  }, { 1073741826, 1073741825, 1073741824,  }, {  }
0, {A8535991-3CE1-4ED6-89A4-1C999A9C3AC0}, GRBarcodeCaptionPosition, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRBarcodeCaptionPosition, {  }, { 1073741826, 1073741825, 1073741824,  }, {  }
0, {EA08717C-5C9B-460A-BEC9-EBBB11408BAD}, GRBarcodeDirection, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRBarcodeDirection, {  }, { 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {0B950C08-D99A-4A90-9D8B-E8A0DCF6D11B}, GROCGroupHeaderVAlign, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGROCGroupHeaderVAlign, {  }, { 1073741826, 1073741825, 1073741824,  }, {  }
0, {FADD92D3-6351-4088-B14F-AD4EB326722D}, GRNewPageColumnStyle, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRNewPageColumnStyle, {  }, { 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {C05ACBDB-C2F8-4D02-AD46-55B9061BDF89}, GRGrpKpTogetherStyle, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRGrpKpTogetherStyle, {  }, { 1073741826, 1073741825, 1073741824,  }, {  }
0, {B753063D-AEBA-4E5E-B53A-F89B68F1F622}, IGRGroupFooter, { 1003, 2, 3, 8, 106,  }, { 201, 105, 104, 103, 102, 20, 10, 9, 7, 6, 5, 4, 1, 1002,  }, {  }
0, {13C28AD0-F195-4319-B7D7-A1BDAA329FB7}, GridppReport, { 1003, 2, 3, 4, 5, 6, 7, 10, 18, 32, 37, 75, 76, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 123, 124, 125, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 146, 147, 150, 160, 162, 170, 171, 172, 173, 181, 182, 183, 185, 186, 32, 37,  }, { 180, 94, 93, 92, 91, 90, 85, 84, 83, 82, 81, 80, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 54, 53, 52, 51, 50, 40, 39, 38, 34, 33, 31, 30, 24, 23, 22, 21, 20, 19, 17, 16, 15, 14, 13, 12, 11, 9, 8, 1, 1002,  }, { 1, 2, 3, 4, 30, 31, 32, 33, 34, 35, 36, 37, 23, 20, 22, 40, 41, 42, 43, 50, 51,  }
0, {CC18C8CD-0525-4869-8214-55B766B09AB2}, GRShiftStates, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRShiftState, {  }, { 1073741830, 1073741829, 1073741828, 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
0, {14143D7A-5315-4B64-8B07-99A2B79D4BFE}, GRMouseButton, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRMouseButton, {  }, { 1073741826, 1073741825, 1073741824,  }, {  }
1, {613F3AE0-D4EB-4F9F-B750-576C09700350}, GRDisplayViewer, { 1, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 1,  }, { 162, 178, 177, 176, 175, 174, 173, 172, 171, 170, 161, 160, 157, 156, 155, 154, 153, 152, 151, 150, -504, 9, 8, 7, 6, 5, 4, 3, 2,  }, { -600, -601, -602, -603, -604, -605, -607, -606, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 9, 10,  }
0, {55DB78A0-8CFA-40AE-A444-3D91BE983048}, GRViewerBorderStyle, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRViewerBorderStyle, {  }, { 1073741826, 1073741825, 1073741824,  }, {  }
1, {E497F563-E14C-48EC-87FA-E9C514D3BC0B}, GRPrintViewer, { 2, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 2,  }, { 162, 137, 136, 135, 134, 133, 132, 130, 131, 4, 3, 1,  }, { -600, -601, -602, -603, -604, -605, -607, -606, 1, 2, 3, 4, 7, 8, 9,  }
0, {55DB78E0-8CFA-40AE-A444-3D91BE983048}, GRPrintViewMode, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRPrintViewMode, {  }, { 1073741826, 1073741825, 1073741824,  }, {  }
0, {EEB33C85-D0C1-4D37-82B0-519DF2B3A120}, GRToolControlType, {  }, {  }, {  }
2, {00000000-0000-0000-0000-000000000000}, tagGRToolControlType, {  }, { 1073741842, 1073741841, 1073741840, 1073741839, 1073741838, 1073741837, 1073741836, 1073741835, 1073741834, 1073741833, 1073741832, 1073741831, 1073741830, 1073741829, 1073741828, 1073741827, 1073741826, 1073741825, 1073741824,  }, {  }
