[linker]
;
; 这是易语言链接器插件的配置文件，用于设置静态编译时使用的外部链接器及其参数
;
; 配置项采用 name=value 的形式，注意等号两侧不可有空格
; 行首为半角分号(;)，表示该行是注释行（一整行均为注释）
; 欲使某一配置项生效，请删除该行行首的分号(;)及空白字符
;


;linker_type=vc6
;  linker_type用于指定链接器类型。可选值有 vc6, gcc4, elink, alink 等。目前暂不可用。


linker="D:\Program Files (x86)\e\VC98linker\bin\link.exe"
;  linker用于指定链接器文件。可以使用完整路径或相对路径（相对于易语言安装目录），路径两端可以加上半角双引号。
;  如果不指定此项，默认会根据linker_type尝试寻找链接器路径。


;output_file="C:\e_link_output.txt"
;  output_file用于设置将链接器输出重定向到指定文件。可以使用完整路径或相对路径（相对于易语言安装目录），路径两端可以加上半角双引号。
;  如果不指定此项，默认在易语言IDE的“输出”面板中输出。


;extra_args=
;  extra_args用于指定附加给链接器的额外参数。默认为空。


;show_command_line=yes
;  show_command_line用于指定是否在易语言IDE的“输出”面板中输出链接器的命令行。
;  可以设置为 yes 或 no。默认值为no，即不输出链接器命令行。


;stop_if_too_many_errors=no
;  stop_if_too_many_errors用于指定，当静态链接过程中出现过多错误信息（大约 30 条）时，是否允许中止链接。
;  可以设置为 yes 或 no。默认值为yes，即，如果链接错误过多，会弹出信息框询问用户是否中止链接。


;retain_intermediate_files=yes
;  retain_intermediate_files用于设置是否保留链接期间生成的中间文件（比如 obj,res,lib 等文件）。
;  可以设置为 yes 或 no。默认值为no，即不保留中间文件。


;show_warning=yes
;  show_warning用于设置是否显示在静态链接过程中连接器输出的警告（warning）信息。
;  可以设置为 yes 或 no。默认值为no，即不输出警告信息（但某些特殊的警告信息除外）。


;post_link_actionX=command_and_args
;
;  post_link_actionX（其中X为100以内的数值, 1-100）用于指定“链接后动作”，其值为欲在链接成功后执行的程序及其参数。
;  如同时存在多个post_link_actionX配置项，它们将按照数值X从小到大的顺序依次执行。
;  如果是控制台程序，其输出信息将被显示在易语言IDE的“输出”面板中；
;  如果是窗口程序(GUI)，请使用如下形式启动它以避免导致易语言IDE失去响应：$(START) command_and_args
;
;  在命令行中可以使用下面这些宏：
;    $(TARGET), $(TARGET_FILE)   表示本次静态编译的结果文件的全路径文件名，以双引号包含，形如："c:\full path\to\target.exe"
;    $(TARGET_NON_QUOTED)        基本等同于$(TARGET)或$(TARGET_FILE)，只是两端无双引号，形如：c:\full path\to\target.exe
;    $(TARGET_DIR)               表示本次静态编译的结果文件所在的目录，结尾无字符"\"，两端无引号，形如：c:\full path\to
;    $(TARGET_FILE_NAME)         表示本次静态编译的结果文件名，形如：target.exe
;    $(TARGET_FILE_BASE_NAME)    表示本次静态编译的结果文件名除去扩展名后的部分，形如：target
;    $(TARGET_FILE_EXT)          表示本次静态编译的结果文件的扩展名部分，形如：exe
;    $(OS_SYSTEM), $(OS_TEMP)    分别表示当前操作系统的系统目录（通常是C:\WINDOWS\System32）和临时目录（通常是C:\WINDOWS\Temp）
;    $(E_HOME), $(E_TOOLS)       分别表示易语言安装目录及其下的tools子目录
;    $(ECHO)                     用于原样输出参数，等价于："$(E_TOOLS)\echo.exe"，后跟欲输出的一个或多个参数
;    $(START)                    用于启动窗口程序(GUI)，等价于："$(E_TOOLS)\start.exe"，后跟欲启动的程序及其参数
;    $(CMD_ECHO)                 用于原样输出参数，等价于：cmd.exe /c echo，后跟欲输出的一个或多个参数
;    $(CMD_START)                用于启动窗口程序(GUI)，等价于：cmd.exe /c start "title"，后跟欲启动的程序及其参数
;  注，如无特别说明：与全路径文件名相关的宏，两端都有引号；与目录相关的宏，两端都没有双引号，结尾也不带字符"\"。
;  宏名称中的字母必须大写；在宏名称前加转义字符$可以避免对宏求值，如：$$(TARGET) 会被视为文本 $(TARGET)。
;
;“链接后动作”配置示例：
;post_link_action1=$(ECHO) 静态编译成功：$(TARGET)
;post_link_action2=$(START) $(TARGET)
;post_link_action3=cmd.exe /c copy $(TARGET) "C:\$(TARGET_FILE_BASE_NAME).$(TARGET_FILE_EXT)"

